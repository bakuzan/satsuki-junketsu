{"version":3,"sources":["constants/strings.js","utils/mappers.js","store/configureStore.js","actions/board.js","utils/game.js","utils/squaresUpdate.js","actions/playback.js","utils/piece.js","utils/board.js","constants/regex.js","components/Portal.js","components/selectBox/SelectBox.js","components/tickbox/Tickbox.js","containers/appSettings/AppSettings.js","components/svgLogo/SVGLogo.js","components/header/Header.js","components/toaster/Toaster.js","components/appInformation/index.js","containers/App.js","components/scales/Scales.js","constants/dnd-type.js","components/dragAndDrop/Target.js","components/dragAndDrop/Source.js","components/dragAndDrop/supportsTouch.js","components/dragAndDrop/index.js","components/piece/pieceSvgs/PieceSvgWrapper.js","components/piece/pieceSvgs/Bishop.js","components/piece/pieceSvgs/King.js","components/piece/pieceSvgs/Knight.js","components/piece/pieceSvgs/Pawn.js","components/piece/pieceSvgs/Queen.js","components/piece/pieceSvgs/Rook.js","components/piece/pieceSvgs/index.js","components/piece/Piece.js","components/square/Square.js","components/promotionOptions/PromotionOptions.js","components/board/Board.js","utils/engine/possible-moves.js","utils/engine/piece-sqaure-tables/pawn.js","utils/engine/piece-sqaure-tables/knight.js","utils/engine/piece-sqaure-tables/bishop.js","utils/engine/piece-sqaure-tables/rook.js","utils/engine/piece-sqaure-tables/queen.js","utils/engine/piece-sqaure-tables/king-middle.js","utils/engine/piece-sqaure-tables/index.js","utils/engine/pawn-health.js","utils/engine/evaluate-board.js","utils/engine/index.js","containers/Board.js","components/graveyard/Graveyard.js","containers/Graveyard.js","components/moveList/MoveList.js","containers/MoveList.js","constants/icons.js","components/playback/Playback.js","containers/Playback.js","containers/MaintainAspectRatio.js","components/GameAction.js","components/newGameOptions/index.js","containers/ChessGame.js","Routes.js","registerServiceWorker.js","programmatic-board-moves.js","index.js","reducers/utils.js","reducers/theme.js","reducers/board-specialMove.js","reducers/board-playback.js","reducers/board-import.js","reducers/board.js","utils/state.js","reducers/index.js","store/configureStore.prod.js","constants/index.js","constants/paths.js","constants/new-game-options.js","utils/pgn.js","utils/specialMoves.js","actions/theme.js","constants/board.js","constants/slider.js","utils/toaster.js","utils/playback.js","utils/common.js","utils/exportImport.js"],"names":["Strings","localUserSettings","localGameState","colours","white","black","whiteHex","blackHex","pieces","pawn","rook","knight","bishop","queen","king","specialMoves","promotionSelection","promotion","enPassant","castling","kingTargets","rookStarts","rookEnds","pgn","piece","capture","castle","check","checkmate","mapPieceToMovedPiece","p","Object","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","hasMoved","squarePosition","_ref","id","rank","file","mapSquaresToMove","oldSquare","newSquare","squaresAfterMove","captured","specialMove","from","to","contains","isAmbiguous","checkForMoveAmbiguity","checkStatus","getCurrentCheckStatusAfterMove","mapPieceToNewSquare","squares","index","currentSquare","oldIndex","findIndex","x","updateArrayPreservingOrder","mapPieceToNewPiece","updatedPiece","mapToSpecialMove","type","squareId","mapSquareIdToPromotion","mapSquareIdToEnPassant","mapSquareIdToCastling","module","exports","require","__webpack_require__","r","__webpack_exports__","d","BOARD_SELECT_SQUARE","selectBoardSquare","BOARD_MOVE_PIECE","moveSelectedPiece","BOARD_TAKE_PIECE","takePiece","BOARD_SPECIAL_MOVE","performSpecialMove","BOARD_RESET","resetBoard","BOARD_IMPORT_GAME","importGame","BOARD_SAVE_GAME","saveGame","BOARD_LOAD_GAME","loadGame","BOARD_TOGGLE_REVERSE","toggleReverseBoard","BOARD_COMPUTER_MOVE","performComputerMove","targetSquareId","option","fileText","move","isWhitesTurn","getCurrentPlayerColour","getWinningPlayerColour","isValidMove","isValidTake","constants_index__WEBPACK_IMPORTED_MODULE_0__","_board__WEBPACK_IMPORTED_MODULE_1__","moveCount","moves","length","Constants","kingSquare","colour","hasFreePath","match","hasDiagonalMovement","files","ranks","_loop","i","square","isSameSquare","fileIndex","isOnDiagonal","v","isBetween","fromFileIndex","toFileIndex","_ret","fileDiff","Math","abs","rankDiff","name","attacker","toSquare","find","fromIndex","toIndex","performMovementFromCurrentToTarget","oldState","fromSquareId","toSquareId","targetIndex","movingPiece","defendingPiece","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","graveyard","filter","selectedSquareId","performRookMovementForCastling","currentSquares","kingSquareId","newKingSquare","rookFileIndex","rookSquare","rookTargetIndex","movingRook","updateBoardToRemovePassedPawn","movedPieceSquareId","movedToSquare","direction","offsetRank","passedSquareIndex","passedPiece","moveIndex","slice","updateSquaresToRemovePassedPawn","PLAYBACK_UPDATE_SLIDE_POSITION","updateSlidePosition","PLAYBACK_STEP_FORWARD","stepSliderForward","PLAYBACK_STEP_BACK","stepSliderBack","sliderName","sliderValue","stepDirection","willResultInCheck","pieceSquare","matchKingForGivenColour","getAttacksOnKingSquare","possibleMovesForSelectedPiece","reduce","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","getCheckStatusForColour","attackers","isCheckmate","some","colourHasPossibleMoves","_getCheckStatusForCol","isCheck","CannotBeAmbiguous","targetSquare","movedPiece","includes","potentiallyAmbiguiousSquares","oldSquares","checkFunc","getStartingPiece","indexOf","pieceId","_ref2","_ref3","_ref4","_ref5","_ref6","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","buildStartingBoard","letters","lastIndex","Array","fill","map","item","number","floor","letterIndex","push","shift","letter","s1","s2","num1","num2","middleNumber","MATCH_NEW_LINE","MATCH_DIGIT_DOT_SPACE","MATCH_PGN_COMMENTS_PGN_GAME_RESULT","MATCH_EVERYTHING_UPTO_EQUALS","MATCH_EVERYTHING_BEFORE_FILE_RANK_PAIR","MATCH_PGN_WITH_ADDITIONAL_FILE","Portal","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","document","createElement","parentTag","getTargetNode","querySelector","targetSelector","appendChild","targetNode","removeChild","ReactDOM","createPortal","children","React","Component","defaultProps","SelectBox","value","disabled","onSelect","text","options","react_default","a","className","onChange","e","key","Tickbox","checked","themeMapper","theme","class","appThemes","themes","boardThemes","AppSettings","state","isDropdownOpen","handleDropdownChange","bind","assertThisInitialized","handleCloseAppSettings","toggleDropdown","_this2","target","setState","prev","_this$props","appTheme","boardTheme","setApplicationTheme","setBoardTheme","reverseBoard","body","icon","htmlFor","title","components_Portal","role","onClick","selectBox_SelectBox","tickbox_Tickbox","mapDispatchToProps","connect","app","board","SvgLogo","letterClass","animate","sideLength","container","findDOMNode","characters","querySelectorAll","cycleCharacters","clearInterval","interval","setInterval","getAttribute","nextLetterIndex","setAttribute","word","toUpperCase","split","y","dy","renderLetters","xmlns","textLength","lengthAdjust","Header","react_router_dom_es","Paths","base","SVGLogo","appSettings_AppSettings","Toaster","stack","timer","toaster","register","time","Date","now","remainingToast","removeColdToast","clearTimeout","setTimeout","removeToast","toast","toConsumableArray","eatToast","_this3","list","classNames","tabIndex","toLowerCase","onKeyDown","message","resolveENVVariable","str","trim","AppInformation","hovered","handleHovered","branch","process","version","onMouseEnter","onMouseLeave","aria-label","app-information__detail--visible","PureComponent","App","memo","header_Header","toaster_Toaster","components_appInformation","Scales","array","renderScale","freeze","squareTarget","canDrop","monitor","dropActions","getItem","drop","onDrop","collectTarget","connectDropTarget","dropTarget","isOver","handleDrag","onDrag","pieceSource","beginDrag","endDrag","collectSource","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","isBrowser","window","testElement","classList","add","createMethod","method","original","DOMTokenList","prototype","token","len","arguments","toggle","_toggle","force","view","elemCtrProto","Element","objCtr","strTrim","String","replace","arrIndexOf","DOMEx","code","DOMException","checkTokenAndGetIndex","test","ClassList","elem","trimmedClasses","classes","_updateClassName","toString","classListProto","classListGetter","Error","tokens","l","updated","remove","splice","result","join","defineProperty","classListPropDesc","get","enumerable","configurable","ex","__defineGetter__","HTML5DND","DragDropContext","HTML5Backend","TouchDND","TouchBackend","withDropTarget","WrappedComponent","Target","_React$Component","apply","inherits","createClass","objectWithoutProperties","assign","ref","instance","DropTarget","DnDType","withDragSource","Source","DragSource","VIEW_BOX","PIECE_SIZE","setColour","c","withColour","WrappedPiece","PieceSvgWrapper","colourSettings","pieceName","colourString","isWhite","oppositeColourString","oppositeColour","outline","detail","stroke","topCap","mainBody","lines","face","mane","colourSettingsForPieces","displayName","size","viewBox","styleSettings","bishopStyleOuter","opacity","fillRule","fillOpacity","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeOpacity","bishopStyleOutline","bishopStyleDetail","Bishop","objectSpread","width","height","style","kingStyleOuter","kingStylePath1","kingStyleTopCap","kingStyleMainBody","kingStylePath4","kingStyleLines","King","knightStyleOuter","knightStyleMainBody","knightStyleFace","knightStyleMane","Knight","transform","pawnStyle","Pawn","queenStyleMainBody","queenStyleBlackCircles","queenStyleBlackSpikes","queenStylePath1","queenStyleBlackBaseline","queenStyleBlackCrownlines","queenStyleWhitePath2","Queen","cx","cy","rookStyleMainBody","rookStylePath1","rookStylePath2","rookStylePath3","Rook","pieceSvgs","nextProps","isDraggingChanged","dataChanged","objectsAreEqual","pieceColour","_classNames","renderCoolChessPieceSvg","Square","handleDragPiece","isSelected","isPotentialMove","isSpecialMove","isInCheck","hasPiece","label","selected","potential-move","potential-take","special-move","in-check","is-over","can-drop","piece_Piece","promotionChoices","promotionAt","dispatch","actions","bindActionCreators","promoteTo","Board","handleSquareSelection","handleCanDrop","handleDrop","potentialMoves","selectedSquare","currentPlayerColour","console","log","_this$props2","_this$props3","themeClass","isReversed","isReadOnly","nextMove","boardSquares","reverseArray","boardFiles","boardRanks","checkedKingSquareId","isLocked","onSquareClick","groupCollapsed","groupEnd","Fragment","read-only","scales_Scales","o","square_Square","promotionOptions_PromotionOptions","capitalise","getPossibleMovesForPiece","fakeBoardState","possibleMoves","possibleSMoves","availableSpecialMovesForSelectedPiece","getAllUniquePossibleMoves","pSquares","isCurrent","undefined","fakeMoves","fakeBoard","ids","acc","sq","_getPossibleMovesForP","Set","splitMirrorAndJoin","tableInteragator","pawns","knights","bishops","rooks","queens","kings","getTable","getPawns","getPawnAlignment","set","Map","getDoubledCount","m","values","getIsolatedCount","keys","FILES","left","right","has","Pieces","getPieceCount","arr","getScoreForPiece","weight","aSq","bSq","scoreKings","scoreQueens","scoreRooks","scoreBishops","scoreKnights","scorePawns","evaluateBoard","playingColour","sign","wp","bp","counts","getPieceSquareValue","pawnHealth","wAlign","bAlign","checkPawnHealth","wpMoves","PossibleMoves","bpMoves","mobility","score","engine","selectNextMove","currentColour","pieceSquares","pieceMoves","_PossibleMoves$getPos","moveResults","results","targetId","specialMoveResults","bestPieceMove","bestMove","curr","getMoveWithBestScore","bestTargetId","getKeyForMaxValue","engineMoveChoice","fromId","toId","BoardContainer","computerSelected","_this$props$board","vsComputer","isComputer","isComputerBlack","makeComputerMove","_this$props$board2","SJEngine","activeMoveIndex","playback","sliderPosition","_board$moves$slice","slicedToArray","selectNextMoveSquareId","createBoardLayoutForMoveList","currentBoardForDisplay","board_Board","HTML5DragDrop","confirmed","navigator","maxTouchPoints","msMaxTouchPoints","getElementsByTagName","isTouchDevice","DragAndDropContext","Graveyard","getCurrentMovesForPlaybackPosition","getPiecesForColour","resolveBoardDirection","whitePieces","blackPieces","graveyard_Graveyard","MoveItem","isActive","active","MoveList","MoveList_MoveItem","mapMovesToPGN","icons","PlaybackButton","Playback","isPlaying","previousPosition","handleTogglePlay","createSliderStepHandler","handleSliderChange","sliderMaximum","onSlide","SLIDER_START","stopPlaying","onStepForward","playbackInterval","handler","onStepBack","event","_event$target","Number","isDisabled","isHidden","AT_THE_START","AT_THE_END","toggleData","Icons","sliderStyle","backgroundImage","Playback_PlaybackButton","max","MAX_WIDTH_FALLBACK","AccountFor","header","status","MaintainAspectRatio","wrappedComponent","createRef","onResize","addEventListener","removeEventListener","current","rawValue","min","clientHeight","clientWidth","GameAction","NewGameOptions","display","Options","GG","components_GameAction","ChessGame","isStartingNewGame","fileSelector","handleImport","handleNewGame","Response","containers_MoveList","exportPGNForMoves","accept","getGameContainer","MaintainAspectRatio_MaintainAspectRatio","containers_Board","containers_Playback","containers_Graveyard","components_newGameOptions","SatsukiRoutes","exact","path","component","Routes","history","react_router_redux_es","containers_App","render","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","selectSquare","n","getElementById","getSquare","click","moveFromSquareToSquare","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","next","stop","_x","_x2","makeMoves","pop","prepareBoard","fastestGame","reverse","ambiguous","programmatic_board_moves","movesFor","examples","newGame","export","import","togglePlay","forward","back","Engine","AutomateBoard","createHistory","store","configureStore","es","src_Routes","URL","origin","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","createReducer","initialState","handlers","action","hasOwnProperty","persistUserThemeChoice","themeType","persistUserSettings","settings","getUserSettings","getUserTheme","_createReducer","SET_APP_THEME","SET_BOARD_THEME","specialMoveSubReducer","_action$specialMove","postPieceMovementToTargetState","promotionIndex","PLAYBACK_STARTING_VALUE","getPlaybackInitialState","handlePlaybackStep","resolveSliderValue","playbackSubReducer","importSubReducer","freshState","cleanState","data","importPGNFromFile","pgnMoves","processPGNToMove","toHasPiece","func","canDoSpecialMove","isCastling","isEnPassant","newState","setSelectedSquareId","updateSlideMaximum","composedPieceMovement","compose","composedSpecialMove","composedImport","board_createReducer","vsComputerYouBlack","vsPlayer","persistChessGame","success","savedGame","getSavedGame","upgradedState","upgradeSavedGameState","_action$move","midState","rootReducer","combineReducers","routing","preloadedState","createStore","applyMiddleware","routerMiddleware","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","KING_SIDE_CASTLE","generatePortableGameNotationForMove","generateUniqueId","_item$checkStatus","getKeyForFirstLetter","isKingSideCastle","s","resolveCastlingFromSquare","pgnStr","isWhiteMove","capturedColour","Regexes","resolveSpecialMove","_pgnStr$replace$split","_pgnStr$replace$split2","resolveCastlingToSquare","exec","resolveFromSquare","BLACK_BACK_ROW","BLACK_PAWN_ROW","WHITE_PAWN_ROW","WHITE_BACK_ROW","pawnSpecialMoves","pawnSquare","boardState","targetRank","checkPawnPromotion","_moves$slice","lastMove","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","fromRank","twoRanksForward","pawnIndex","checkPawnEnPassant","rookSquares","kingId","targetSquares","rookId","startId","endId","squareIds","every","sqId","squareIndex","kingSpecialMoves","ToasterService","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","newToast","popToast","newSquares","updateBoardUsingSpecialMove","getObjectFromLocalStorageByProperty","property","JSON","parse","localStorage","persistObjectToLocalStorage","newValues","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","setItem","stringify","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_toArray__WEBPACK_IMPORTED_MODULE_0__","first","rest","lowerRest","_len","fns","_key","f","g","t","crypto","getRandomValues","Uint8Array","padNumber","z","formatDate","date","getFullYear","getMonth","getDate","isObject","o1","o2","k","one","two","b","m1","m2","v1","v2","pairs","pk","ck","chunks","TEXT_IN_QUOTES","pgnForMoves","moveNumber","hasNumber","nextStr","players","dataForFile","downloadUrl","fileName","link","download","processDataIntoDownloadUrl","toLocaleString","dataStr","createObjectURL","Blob","getProcessedLine","line","_fileText$replace$spl","_fileText$replace$spl2","C_Users_Steven_Walsh_projects_chess_node_modules_babel_runtime_helpers_esm_toArray__WEBPACK_IMPORTED_MODULE_1__","gameInformation","movePair","isNaN","information","wPlayer","bPlayer","resolvePlayers"],"mappings":"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C,IACA,GACD,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAGW1U,GAAQ2B,OAAO+V,OAAOhD,IACtBzU,GAAQ+mB,aAAmBtS,ICpElCA,GAAO,EACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACD,EACA,EACA,EACA,GACC,IACA,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,IACA,GACD,EACA,EACA,EACA,GACC,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAGU1U,GAAQ2B,OAAO+V,OAAOhD,IACtBzU,GAAQ+mB,aAAmBtS,ICnElCA,GAAO,EACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,GACD,EACA,EACA,GACA,GACA,EACA,GACC,IACA,GACD,EACA,EACA,GACA,GACA,EACA,GACC,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,GACD,GACA,GACA,GACA,GACA,GACA,IACC,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAGU1U,GAAQ2B,OAAO+V,OAAOhD,IACtBzU,GAAQ+mB,aAAmBtS,ICpElCA,GAAO,CACX,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACC,EACD,EACA,EACA,EACA,EACA,EACA,GACC,GACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,GACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,GACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,GACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,EACD,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAGW1U,GAAQ2B,OAAO+V,OAAOhD,IACtBzU,GAAQ+mB,aAAmBtS,ICpElCA,GAAO,EACV,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,EACD,EACA,EACA,EACA,EACA,EACA,EACA,GACC,GACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IAGU1U,GAAQ2B,OAAO+V,OAAOhD,IACtBzU,GAAQ+mB,aAAmBtS,ICrElCA,GAAO,EACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACD,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,IAGW1U,GAAQ2B,OAAO+V,OAAOhD,IACtBzU,GAAQ+mB,aAAmBtS,IC5DhCtU,GAAWR,KAAXQ,OAqBO,SAAS6mB,GAAiB9f,GAAQ,IACvCnF,EAAiBmF,EAAjBnF,GAAIW,EAAawE,EAAbxE,SACJqF,EAAiBrF,EAAjBqF,KAAMrB,EAAWhE,EAAXgE,OAGd,OAxBF,SAAkBqB,GAChB,OAAQA,GACN,KAAK5H,GAAOC,KACV,OAAO6mB,EACT,KAAK9mB,GAAOG,OACV,OAAO4mB,EACT,KAAK/mB,GAAOI,OACV,OAAO4mB,EACT,KAAKhnB,GAAOE,KACV,OAAO+mB,EACT,KAAKjnB,GAAOK,MACV,OAAO6mB,EACT,KAAKlnB,GAAOM,KACV,OAAO6mB,EAC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","file":"static/js/main.606cbcf7.chunk.js","sourcesContent":["const colours = {\r\n  white: 'white',\r\n  black: 'black',\r\n  whiteHex: '#ffffff',\r\n  blackHex: '#000000'\r\n};\r\nconst pieces = {\r\n  pawn: 'pawn',\r\n  rook: 'rook',\r\n  knight: 'knight',\r\n  bishop: 'bishop',\r\n  queen: 'queen',\r\n  king: 'king'\r\n};\r\n\r\nconst specialMoves = {\r\n  promotionSelection: 'PROMOTION_SELECT',\r\n  promotion: 'PROMOTION_COMPLETE',\r\n  enPassant: 'EN_PASSANT',\r\n  castling: 'CASTLING'\r\n};\r\n\r\nconst pgn = {\r\n  piece: {\r\n    king: 'K',\r\n    queen: 'Q',\r\n    bishop: 'B',\r\n    knight: 'N',\r\n    rook: 'R',\r\n    pawn: ''\r\n  },\r\n  capture: 'x',\r\n  promotion: '=',\r\n  castle: { king: 'O-O', queen: 'O-O-O' },\r\n  enPassant: 'e.p.',\r\n  check: '+',\r\n  checkmate: '#'\r\n};\r\n\r\nconst castling = {\r\n  kingTargets: ['c', 'g'],\r\n  rookStarts: ['a', 'h'],\r\n  rookEnds: ['d', 'f']\r\n};\r\n\r\nconst Strings = {\r\n  localUserSettings: 'satsukiUserSettings',\r\n  localGameState: 'satsukiSavedGame',\r\n  colours,\r\n  pieces,\r\n  specialMoves,\r\n  castling,\r\n  pgn\r\n};\r\n\r\nexport default Strings;\r\n","import Strings from 'constants/strings';\r\nimport { getCurrentCheckStatusAfterMove, checkForMoveAmbiguity } from './piece';\r\nimport { updateArrayPreservingOrder } from './common';\r\n\r\nexport const mapPieceToMovedPiece = p => ({ ...p, hasMoved: true });\r\n\r\nconst squarePosition = ({ id, rank, file }) => ({ id, rank, file });\r\nexport const mapSquaresToMove = (\r\n  oldSquare,\r\n  newSquare,\r\n  squaresAfterMove,\r\n  captured,\r\n  specialMove\r\n) => ({\r\n  from: squarePosition(oldSquare),\r\n  to: squarePosition(newSquare),\r\n  piece: mapPieceToMovedPiece(newSquare.contains),\r\n  isAmbiguous: checkForMoveAmbiguity(\r\n    oldSquare,\r\n    newSquare,\r\n    squaresAfterMove,\r\n    captured\r\n  ),\r\n  checkStatus: getCurrentCheckStatusAfterMove(\r\n    newSquare.contains,\r\n    squaresAfterMove\r\n  ),\r\n  captured,\r\n  specialMove\r\n});\r\n\r\nexport const mapPieceToNewSquare = (squares, index, currentSquare) => {\r\n  const oldIndex = squares.findIndex(x => x.id === currentSquare.id);\r\n  return updateArrayPreservingOrder(\r\n    updateArrayPreservingOrder(squares, index, {\r\n      contains: currentSquare.contains\r\n    }),\r\n    oldIndex,\r\n    { contains: null }\r\n  );\r\n};\r\n\r\nexport const mapPieceToNewPiece = (squares, index, updatedPiece) =>\r\n  updateArrayPreservingOrder(squares, index, {\r\n    contains: updatedPiece\r\n      ? { ...(squares[index].contains || {}), ...updatedPiece }\r\n      : null\r\n  });\r\n\r\nconst mapToSpecialMove = type => squareId => ({\r\n  type,\r\n  squareId\r\n});\r\nexport const mapSquareIdToPromotion = mapToSpecialMove(\r\n  Strings.specialMoves.promotionSelection\r\n);\r\nexport const mapSquareIdToEnPassant = mapToSpecialMove(\r\n  Strings.specialMoves.enPassant\r\n);\r\nexport const mapSquareIdToCastling = mapToSpecialMove(\r\n  Strings.specialMoves.castling\r\n);\r\n","if (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./configureStore.prod');\r\n} else {\r\n  module.exports = require('./configureStore.dev');\r\n}\r\n","export const BOARD_SELECT_SQUARE = 'BOARD_SELECT_SQUARE';\r\nexport const selectBoardSquare = (squareId) => ({\r\n  type: BOARD_SELECT_SQUARE,\r\n  squareId\r\n});\r\n\r\nexport const BOARD_MOVE_PIECE = 'BOARD_MOVE_PIECE';\r\nexport const moveSelectedPiece = (targetSquareId) => ({\r\n  type: BOARD_MOVE_PIECE,\r\n  targetSquareId\r\n});\r\n\r\nexport const BOARD_TAKE_PIECE = 'BOARD_TAKE_PIECE';\r\nexport const takePiece = (targetSquareId) => ({\r\n  type: BOARD_TAKE_PIECE,\r\n  targetSquareId\r\n});\r\n\r\nexport const BOARD_SPECIAL_MOVE = 'BOARD_SPECIAL_MOVE';\r\nexport const performSpecialMove = (specialMove) => ({\r\n  type: BOARD_SPECIAL_MOVE,\r\n  specialMove\r\n});\r\n\r\nexport const BOARD_RESET = 'BOARD_RESET';\r\nexport const resetBoard = (option) => ({\r\n  type: BOARD_RESET,\r\n  option\r\n});\r\n\r\nexport const BOARD_IMPORT_GAME = 'BOARD_IMPORT_GAME';\r\nexport const importGame = (fileText) => ({\r\n  type: BOARD_IMPORT_GAME,\r\n  fileText\r\n});\r\n\r\nexport const BOARD_SAVE_GAME = 'BOARD_SAVE_GAME';\r\nexport const saveGame = () => ({\r\n  type: BOARD_SAVE_GAME\r\n});\r\n\r\nexport const BOARD_LOAD_GAME = 'BOARD_LOAD_GAME';\r\nexport const loadGame = () => ({\r\n  type: BOARD_LOAD_GAME\r\n});\r\n\r\nexport const BOARD_TOGGLE_REVERSE = 'BOARD_TOGGLE_REVERSE';\r\nexport const toggleReverseBoard = () => ({\r\n  type: BOARD_TOGGLE_REVERSE\r\n});\r\n\r\nexport const BOARD_COMPUTER_MOVE = 'BOARD_COMPUTER_MOVE';\r\nexport const performComputerMove = (move) => ({\r\n  type: BOARD_COMPUTER_MOVE,\r\n  move\r\n});\r\n","import Constants from 'constants/index';\r\n\r\nimport { isSameSquare, isOnDiagonal, isBetween } from './board';\r\n\r\nexport const isWhitesTurn = (moveCount) =>\r\n  moveCount === 0 || moveCount % 2 === 0;\r\n\r\nexport const getCurrentPlayerColour = (moves) =>\r\n  isWhitesTurn(moves.length)\r\n    ? Constants.Strings.colours.white\r\n    : Constants.Strings.colours.black;\r\n\r\nexport const getWinningPlayerColour = (kingSquare) =>\r\n  kingSquare.contains.colour === Constants.Strings.colours.white\r\n    ? Constants.Strings.colours.black\r\n    : Constants.Strings.colours.white;\r\n\r\nexport const hasFreePath = (from, to, match, squares) => {\r\n  const hasDiagonalMovement = !(match.files || match.ranks);\r\n  for (let i = 0, length = squares.length; i < length; i++) {\r\n    const square = squares[i];\r\n    if (square.contains === null) continue;\r\n    if (isSameSquare(from, square)) continue;\r\n\r\n    const fileIndex = Constants.files.findIndex((x) => x === square.file);\r\n    if (hasDiagonalMovement) {\r\n      if (isOnDiagonal(fileIndex, from, to, square)) return false;\r\n    } else if (match.files && square.file === to.file) {\r\n      if (isBetween(from.rank, to.rank, square.rank)) return false;\r\n    } else if (match.ranks && square.rank === to.rank) {\r\n      const fromFileIndex = Constants.files.findIndex((x) => x === from.file);\r\n      const toFileIndex = Constants.files.findIndex((x) => x === to.file);\r\n      if (isBetween(fromFileIndex, toFileIndex, fileIndex)) return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nexport const isValidMove = (from, to, squares) => {\r\n  const { contains: piece } = from;\r\n  const match = {\r\n    files: from.file === to.file,\r\n    ranks: from.rank === to.rank\r\n  };\r\n  const fromFileIndex = Constants.files.findIndex((x) => x === from.file);\r\n  const toFileIndex = Constants.files.findIndex((x) => x === to.file);\r\n  const fileDiff = Math.abs(toFileIndex - fromFileIndex);\r\n  const rankDiff = Math.abs(to.rank - from.rank);\r\n\r\n  switch (piece.name) {\r\n    case Constants.Strings.pieces.pawn:\r\n      if (!match.files) return false;\r\n      if (piece.colour === Constants.Strings.colours.white) {\r\n        if (from.rank === 2 && 3 === to.rank) return true;\r\n        if (from.rank === 2 && 4 === to.rank)\r\n          return hasFreePath(from, to, match, squares);\r\n        if (rankDiff === 1 && from.rank < to.rank) return true;\r\n      } else if (piece.colour === Constants.Strings.colours.black) {\r\n        if (from.rank === 7 && 6 === to.rank) return true;\r\n        if (from.rank === 7 && 5 === to.rank)\r\n          return hasFreePath(from, to, match, squares);\r\n        if (rankDiff === 1 && from.rank > to.rank) return true;\r\n      }\r\n      return false;\r\n    case Constants.Strings.pieces.rook:\r\n      if (match.files || match.ranks)\r\n        return hasFreePath(from, to, match, squares);\r\n      return false;\r\n    case Constants.Strings.pieces.knight:\r\n      if (match.files || match.ranks) return false;\r\n      if (rankDiff === 1 && fileDiff === 2) return true;\r\n      if (rankDiff === 2 && fileDiff === 1) return true;\r\n      return false;\r\n    case Constants.Strings.pieces.bishop:\r\n      if (fileDiff === rankDiff) return hasFreePath(from, to, match, squares);\r\n      return false;\r\n    case Constants.Strings.pieces.queen:\r\n      if (match.files || match.ranks)\r\n        return hasFreePath(from, to, match, squares);\r\n      if (fileDiff === rankDiff) return hasFreePath(from, to, match, squares);\r\n      return false;\r\n    case Constants.Strings.pieces.king:\r\n      if (match.ranks && fileDiff === 1) return true;\r\n      if (match.files && rankDiff === 1) return true;\r\n      if (rankDiff === 1 && fileDiff === 1) return true;\r\n      return false;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const isValidTake = (from, to, squares) => {\r\n  const { contains: attacker } = from;\r\n  const toSquare = squares.find(\r\n    (x) => x.file === to.file && x.rank === to.rank\r\n  );\r\n  if (!toSquare || !toSquare.contains) return false;\r\n  if (toSquare.contains.colour === attacker.colour) return false;\r\n\r\n  switch (attacker.name) {\r\n    case Constants.Strings.pieces.pawn:\r\n      const fromIndex = Constants.files.findIndex((x) => x === from.file);\r\n      const toIndex = Constants.files.findIndex((x) => x === to.file);\r\n      return (\r\n        Math.abs(toIndex - fromIndex) === 1 &&\r\n        Math.abs(to.rank - from.rank) === 1 &&\r\n        ((from.rank < to.rank &&\r\n          attacker.colour === Constants.Strings.colours.white) ||\r\n          (from.rank > to.rank &&\r\n            attacker.colour === Constants.Strings.colours.black))\r\n      );\r\n    case Constants.Strings.pieces.rook:\r\n    case Constants.Strings.pieces.knight:\r\n    case Constants.Strings.pieces.bishop:\r\n    case Constants.Strings.pieces.queen:\r\n    case Constants.Strings.pieces.king:\r\n      return isValidMove(from, to, squares);\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n","import Strings from 'constants/strings';\r\nimport {\r\n  mapSquaresToMove,\r\n  mapPieceToMovedPiece,\r\n  mapPieceToNewSquare,\r\n  mapPieceToNewPiece\r\n} from './mappers';\r\n\r\nexport default function performMovementFromCurrentToTarget(\r\n  oldState,\r\n  fromSquareId,\r\n  toSquareId,\r\n  specialMove\r\n) {\r\n  const currentSquare = oldState.squares.find(x => x.id === fromSquareId);\r\n  const targetIndex = oldState.squares.findIndex(x => x.id === toSquareId);\r\n  const movingPiece = mapPieceToMovedPiece(currentSquare.contains);\r\n  const defendingPiece = !!oldState.squares[targetIndex].contains\r\n    ? { ...oldState.squares[targetIndex].contains }\r\n    : null;\r\n\r\n  const squares = mapPieceToNewSquare(oldState.squares, targetIndex, {\r\n    ...currentSquare,\r\n    contains: movingPiece\r\n  });\r\n  const moves = [\r\n    ...oldState.moves,\r\n    mapSquaresToMove(\r\n      currentSquare,\r\n      squares[targetIndex],\r\n      squares,\r\n      defendingPiece,\r\n      specialMove\r\n    )\r\n  ];\r\n  const graveyard = !!defendingPiece\r\n    ? [...oldState.graveyard, defendingPiece].filter(x => !!x)\r\n    : oldState.graveyard;\r\n  return {\r\n    ...oldState,\r\n    selectedSquareId: null,\r\n    squares,\r\n    moves,\r\n    graveyard\r\n  };\r\n}\r\n\r\nexport function performRookMovementForCastling(currentSquares, kingSquareId) {\r\n  const newKingSquare = currentSquares.find(x => x.id === kingSquareId);\r\n  const rookFileIndex = Strings.castling.kingTargets.findIndex(\r\n    x => x === newKingSquare.file\r\n  );\r\n  const rookSquare = currentSquares.find(\r\n    x =>\r\n      x.rank === newKingSquare.rank &&\r\n      x.file === Strings.castling.rookStarts[rookFileIndex]\r\n  );\r\n  const rookTargetIndex = currentSquares.findIndex(\r\n    x =>\r\n      x.rank === newKingSquare.rank &&\r\n      x.file === Strings.castling.rookEnds[rookFileIndex]\r\n  );\r\n  const movingRook = mapPieceToMovedPiece(rookSquare.contains);\r\n  const squares = mapPieceToNewSquare(currentSquares, rookTargetIndex, {\r\n    ...rookSquare,\r\n    contains: movingRook\r\n  });\r\n\r\n  return squares;\r\n}\r\n\r\nexport function updateBoardToRemovePassedPawn(oldState, movedPieceSquareId) {\r\n  const movedToSquare = oldState.squares.find(x => x.id === movedPieceSquareId);\r\n  const direction =\r\n    movedToSquare.contains.colour === Strings.colours.white ? 1 : -1;\r\n  const offsetRank = movedToSquare.rank - direction;\r\n  const passedSquareIndex = oldState.squares.findIndex(\r\n    x => x.file === movedToSquare.file && x.rank === offsetRank\r\n  );\r\n  const passedPiece = {\r\n    ...oldState.squares[passedSquareIndex].contains\r\n  };\r\n  const squares = mapPieceToNewPiece(oldState.squares, passedSquareIndex, null);\r\n  const moveIndex = oldState.moves.length - 1;\r\n  const moves = [\r\n    ...oldState.moves.slice(0, moveIndex),\r\n    {\r\n      ...oldState.moves[moveIndex],\r\n      captured: { ...passedPiece }\r\n    }\r\n  ];\r\n\r\n  return {\r\n    ...oldState,\r\n    squares,\r\n    moves,\r\n    graveyard: [...oldState.graveyard, passedPiece]\r\n  };\r\n}\r\n\r\nexport function updateSquaresToRemovePassedPawn(squares, movedPieceSquareId) {\r\n  const fakeStateWithNewSquares = updateBoardToRemovePassedPawn(\r\n    { moves: [], graveyard: [], squares },\r\n    movedPieceSquareId\r\n  );\r\n  return fakeStateWithNewSquares.squares;\r\n}\r\n","export const PLAYBACK_UPDATE_SLIDE_POSITION = 'PLAYBACK_UPDATE_SLIDE_POSITION';\r\nexport const updateSlidePosition = (sliderName, sliderValue) => ({\r\n  type: PLAYBACK_UPDATE_SLIDE_POSITION,\r\n  sliderValue\r\n});\r\n\r\nexport const PLAYBACK_STEP_FORWARD = 'PLAYBACK_STEP_FORWARD';\r\nexport const stepSliderForward = (sliderName, stepDirection) => ({\r\n  type: PLAYBACK_STEP_FORWARD,\r\n  stepDirection\r\n});\r\n\r\nexport const PLAYBACK_STEP_BACK = 'PLAYBACK_STEP_BACK';\r\nexport const stepSliderBack = (sliderName, stepDirection) => ({\r\n  type: PLAYBACK_STEP_BACK,\r\n  stepDirection\r\n});\r\n","import Constants from 'constants/index';\r\n\r\nimport { mapPieceToNewSquare, mapPieceToNewPiece } from './mappers';\r\nimport { isValidMove, isValidTake } from './game';\r\n\r\nexport const willResultInCheck = (pieceSquare, squares) => {\r\n  const colour = pieceSquare.contains.colour;\r\n  const kingSquare = squares.find(matchKingForGivenColour(colour));\r\n  return !!getAttacksOnKingSquare(kingSquare, squares).length;\r\n};\r\n\r\nexport const possibleMovesForSelectedPiece = ({\r\n  selectedSquareId,\r\n  squares\r\n}) => {\r\n  if (selectedSquareId === null) return [];\r\n  const pieceSquare = squares.find(x => x.id === selectedSquareId);\r\n  return squares.reduce((p, square, index) => {\r\n    const func = square.contains ? isValidTake : isValidMove;\r\n    return func(pieceSquare, square, squares) &&\r\n      !willResultInCheck(\r\n        pieceSquare,\r\n        mapPieceToNewSquare(squares, index, pieceSquare)\r\n      )\r\n      ? [...p, square.id]\r\n      : p;\r\n  }, []);\r\n};\r\n\r\nconst matchKingForGivenColour = colour => x =>\r\n  x.contains &&\r\n  x.contains.name === Constants.Strings.pieces.king &&\r\n  x.contains.colour === colour;\r\n\r\nconst getAttacksOnKingSquare = (kingSquare, squares) =>\r\n  squares\r\n    .filter(\r\n      x =>\r\n        kingSquare &&\r\n        x.contains &&\r\n        x.contains.colour !== kingSquare.contains.colour\r\n    )\r\n    .reduce((p, square) => {\r\n      if (!isValidTake(square, kingSquare, squares)) return p;\r\n      return [...p, square];\r\n    }, []);\r\n\r\nconst colourHasPossibleMoves = (colour, squares) => {\r\n  const piecesForColour = squares.filter(\r\n    x => x.contains && x.contains.colour === colour\r\n  );\r\n  return piecesForColour.some(\r\n    x =>\r\n      !!possibleMovesForSelectedPiece({ selectedSquareId: x.id, squares })\r\n        .length\r\n  );\r\n};\r\n\r\nexport const getCheckStatusForColour = (colour, squares) => {\r\n  const kingSquare = squares.find(matchKingForGivenColour(colour));\r\n  const attackers = getAttacksOnKingSquare(kingSquare, squares);\r\n  const isCheckmate =\r\n    !!attackers.length && !colourHasPossibleMoves(colour, squares);\r\n  return {\r\n    kingSquare,\r\n    attackers,\r\n    isCheckmate\r\n  };\r\n};\r\n\r\nexport const getCurrentCheckStatusAfterMove = (piece, squares) => {\r\n  const colour =\r\n    piece.colour === Constants.Strings.colours.white\r\n      ? Constants.Strings.colours.black\r\n      : Constants.Strings.colours.white;\r\n  const { attackers, isCheckmate } = getCheckStatusForColour(colour, squares);\r\n  return {\r\n    isCheck: !!attackers.length,\r\n    isCheckmate\r\n  };\r\n};\r\n\r\nconst CannotBeAmbiguous = [\r\n  Constants.Strings.pieces.king,\r\n  Constants.Strings.pieces.queen,\r\n  Constants.Strings.pieces.bishop\r\n];\r\n\r\nexport const checkForMoveAmbiguity = (\r\n  oldSquare,\r\n  targetSquare,\r\n  squaresAfterMove,\r\n  captured\r\n) => {\r\n  const movedPiece = targetSquare.contains;\r\n  if (CannotBeAmbiguous.includes(movedPiece.name)) return false;\r\n\r\n  const potentiallyAmbiguiousSquares = squaresAfterMove.filter(\r\n    x =>\r\n      x.id !== targetSquare.id &&\r\n      x.contains &&\r\n      x.contains.name === movedPiece.name &&\r\n      x.contains.colour === movedPiece.colour\r\n  );\r\n  if (potentiallyAmbiguiousSquares.length === 0) return false;\r\n\r\n  const fromIndex = squaresAfterMove.findIndex(x => x.id === oldSquare.id);\r\n  const toIndex = squaresAfterMove.findIndex(x => x.id === targetSquare.id);\r\n  let oldSquares = mapPieceToNewPiece(squaresAfterMove, fromIndex, {\r\n    ...targetSquare.contains\r\n  });\r\n  oldSquares = mapPieceToNewPiece(oldSquares, toIndex, captured);\r\n\r\n  const checkFunc = captured ? isValidTake : isValidMove;\r\n  return potentiallyAmbiguiousSquares.some(x =>\r\n    checkFunc(x, targetSquare, oldSquares)\r\n  );\r\n};\r\n","import Constants from 'constants/index';\r\n\r\nconst { pieces, colours } = Constants.Strings;\r\n\r\nconst getStartingPiece = (rank, file) => {\r\n  if ([1, 2, 7, 8].indexOf(rank) === -1) return null;\r\n\r\n  let piece = '',\r\n    pieceId = '';\r\n  const colour = rank < 5 ? colours.white : colours.black;\r\n\r\n  if ([2, 7].indexOf(rank) > -1) {\r\n    [piece, pieceId] = [pieces.pawn, 'p'];\r\n  } else if (['a', 'h'].indexOf(file) > -1) {\r\n    [piece, pieceId] = [pieces.rook, 'r'];\r\n  } else if (['b', 'g'].indexOf(file) > -1) {\r\n    [piece, pieceId] = [pieces.knight, 'n'];\r\n  } else if (['c', 'f'].indexOf(file) > -1) {\r\n    [piece, pieceId] = [pieces.bishop, 'b'];\r\n  } else {\r\n    [piece, pieceId] = file === 'd' ? [pieces.queen, 'q'] : [pieces.king, 'k'];\r\n  }\r\n\r\n  return {\r\n    id: `${colour.slice(0, 1)}-${pieceId}-${file}`,\r\n    name: piece,\r\n    colour,\r\n    hasMoved: false\r\n  };\r\n};\r\n\r\nexport const buildStartingBoard = () => {\r\n  let letters = Constants.files.slice(0);\r\n  let lastIndex = -1;\r\n\r\n  return Array(64)\r\n    .fill(null)\r\n    .map((item, index) => {\r\n      const number = 8 - Math.floor(index / 8);\r\n      const letterIndex = (index + number) % 8;\r\n      if (letterIndex === lastIndex) {\r\n        letters.push(letters.shift());\r\n        lastIndex = -1;\r\n      }\r\n\r\n      const letter = letters[letterIndex];\r\n      lastIndex = letterIndex;\r\n      return {\r\n        id: index,\r\n        rank: number,\r\n        file: letter,\r\n        contains: getStartingPiece(number, letter)\r\n      };\r\n    });\r\n};\r\n\r\nexport const isSameSquare = (s1, s2) =>\r\n  s1.rank === s2.rank && s1.file === s2.file;\r\n\r\nexport const isBetween = (num1, num2, middleNumber) => {\r\n  if (num1 < middleNumber && middleNumber < num2) return true;\r\n  if (num1 > middleNumber && middleNumber > num2) return true;\r\n  return false;\r\n};\r\n\r\nexport const isOnDiagonal = (fileIndex, from, to, square) => {\r\n  const fromFileIndex = Constants.files.findIndex((x) => x === from.file);\r\n  const fileDiff = Math.abs(fileIndex - fromFileIndex);\r\n  const rankDiff = Math.abs(square.rank - from.rank);\r\n  if (!(fileDiff === rankDiff)) return false;\r\n  if (!isBetween(from.rank, to.rank, square.rank)) return false;\r\n\r\n  const toFileIndex = Constants.files.findIndex((x) => x === to.file);\r\n  if (!isBetween(fromFileIndex, toFileIndex, fileIndex)) return false;\r\n  return true;\r\n};\r\n","export const MATCH_NEW_LINE = /\\n/g;\r\nexport const MATCH_DIGIT_DOT_SPACE = /\\d\\. /g;\r\nexport const MATCH_PGN_COMMENTS_PGN_GAME_RESULT = /\\d\\/\\d-\\d\\/\\d$|\\d\\/\\d$|\\{.*\\}/g;\r\n\r\nexport const MATCH_EVERYTHING_UPTO_EQUALS = /.*=/;\r\nexport const MATCH_EVERYTHING_BEFORE_FILE_RANK_PAIR = /.*(?=[a-h]\\d)/g;\r\n\r\nexport const MATCH_PGN_WITH_ADDITIONAL_FILE = /[a-h]x[a-h]|[a-h]{2}/;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.el = document.createElement(props.parentTag);\r\n    this.getTargetNode = () => document.querySelector(props.targetSelector);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const targetNode = this.getTargetNode();\r\n    targetNode.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const targetNode = this.getTargetNode();\r\n    if (targetNode) targetNode.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nPortal.defaultProps = {\r\n  parentTag: 'div'\r\n};\r\n\r\nPortal.propTypes = {\r\n  parentTag: PropTypes.string,\r\n  targetSelector: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Portal;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst SelectBox = ({ name, value, disabled, onSelect, text, options }) => (\r\n  <div className=\"has-float-label select-container\">\r\n    <select\r\n      className=\"select-box\"\r\n      name={name}\r\n      value={value}\r\n      onChange={e => onSelect(e)}\r\n      disabled={disabled}\r\n    >\r\n      {options.map(item => (\r\n        <option key={item.value} value={item.value}>\r\n          {item.text}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    <label>{text}</label>\r\n  </div>\r\n);\r\n\r\nSelectBox.defaultProps = {\r\n  disabled: false\r\n};\r\n\r\nSelectBox.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.bool\r\n  ]).isRequired,\r\n  disabled: PropTypes.bool,\r\n  text: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SelectBox;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './tickbox.scss';\r\n\r\nconst Tickbox = ({ name, checked, disabled, onChange, text }) => (\r\n  <div className=\"input-container\">\r\n    <label className=\"tickbox\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        checked={checked}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n      />\r\n      {text}\r\n    </label>\r\n  </div>\r\n);\r\n\r\nTickbox.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n  text: PropTypes.string\r\n};\r\n\r\nexport default Tickbox;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Portal from 'components/Portal';\r\nimport SelectBox from 'components/selectBox/SelectBox';\r\nimport Tickbox from 'components/tickbox/Tickbox';\r\n\r\nimport { setApplicationTheme, setBoardTheme } from 'actions/theme';\r\nimport { toggleReverseBoard } from 'actions/board';\r\nimport Constants from 'constants/index';\r\nimport './appSettings.scss';\r\n\r\nconst themeMapper = (theme) => ({\r\n  text: theme.name,\r\n  value: theme.class\r\n});\r\nconst appThemes = Constants.themes.map(themeMapper);\r\nconst boardThemes = Constants.boardThemes.map(themeMapper);\r\n\r\nconst applyThemeToBody = (theme) => (document.body.className = theme);\r\n\r\nclass AppSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDropdownOpen: false\r\n    };\r\n\r\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n    this.handleCloseAppSettings = this.handleCloseAppSettings.bind(this);\r\n    this.toggleDropdown = this.toggleDropdown.bind(this);\r\n  }\r\n\r\n  handleDropdownChange(onChange) {\r\n    return (e) => {\r\n      onChange(e.target.value);\r\n      this.handleCloseAppSettings();\r\n    };\r\n  }\r\n\r\n  handleCloseAppSettings() {\r\n    this.setState({ isDropdownOpen: false });\r\n  }\r\n\r\n  toggleDropdown() {\r\n    this.setState((prev) => ({ isDropdownOpen: !prev.isDropdownOpen }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      appTheme,\r\n      boardTheme,\r\n      setApplicationTheme,\r\n      setBoardTheme,\r\n      reverseBoard,\r\n      toggleReverseBoard\r\n    } = this.props;\r\n    applyThemeToBody(appTheme);\r\n\r\n    return (\r\n      <div id=\"app-settings\">\r\n        <input\r\n          type=\"checkbox\"\r\n          value={this.state.isDropdownOpen}\r\n          id=\"app-settings-toggler\"\r\n          onChange={this.toggleDropdown}\r\n        />\r\n        <label\r\n          icon=\"&#x2699;\"\r\n          htmlFor=\"app-settings-toggler\"\r\n          title=\"App settings\"\r\n        />\r\n        {this.state.isDropdownOpen && (\r\n          <Portal targetSelector=\"main\">\r\n            <div\r\n              id=\"app-settings-backdrop\"\r\n              role=\"button\"\r\n              onClick={this.handleCloseAppSettings}\r\n            />\r\n            <ul id=\"app-settings-menu\" className=\"dropdown-menu\" role=\"menu\">\r\n              <li className=\"dropdown-arrow\" />\r\n              <li>\r\n                <SelectBox\r\n                  name=\"appTheme\"\r\n                  text=\"App Theme\"\r\n                  value={appTheme}\r\n                  options={appThemes}\r\n                  onSelect={this.handleDropdownChange(setApplicationTheme)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <SelectBox\r\n                  name=\"boardTheme\"\r\n                  text=\"Board Theme\"\r\n                  value={boardTheme}\r\n                  options={boardThemes}\r\n                  onSelect={this.handleDropdownChange(setBoardTheme)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <Tickbox\r\n                  name=\"reverseBoard\"\r\n                  text=\"Flip board on move\"\r\n                  checked={reverseBoard}\r\n                  onChange={toggleReverseBoard}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </Portal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAppSettings.propTypes = {\r\n  appTheme: PropTypes.string.isRequired,\r\n  boardTheme: PropTypes.string.isRequired,\r\n  setApplicationTheme: PropTypes.func.isRequired,\r\n  setBoardTheme: PropTypes.func.isRequired,\r\n  reverseBoard: PropTypes.bool.isRequired,\r\n  toggleReverseBoard: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appTheme: state.theme.app,\r\n  boardTheme: state.theme.board,\r\n  reverseBoard: state.board.reverseBoard\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setApplicationTheme,\r\n  setBoardTheme,\r\n  toggleReverseBoard\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppSettings);\r\n","import React, { Component } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport './svgLogo.scss';\r\n\r\nclass SvgLogo extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.letterClass = 'letter';\r\n    this.animate = 'hideshow';\r\n    this.sideLength = 50;\r\n  }\r\n  componentDidMount() {\r\n    const container = findDOMNode(this);\r\n    this.characters = container.querySelectorAll('text.letter');\r\n    this.cycleCharacters();\r\n  }\r\n  cycleCharacters() {\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(() => {\r\n      const letterIndex = Array.from(this.characters).findIndex((x) => {\r\n        return x.getAttribute('class').indexOf(this.animate) > -1;\r\n      });\r\n\r\n      const nextLetterIndex =\r\n        letterIndex + 1 < this.characters.length ? letterIndex + 1 : 0;\r\n      if (letterIndex !== -1)\r\n        this.characters[letterIndex].setAttribute('class', this.letterClass);\r\n\r\n      this.characters[nextLetterIndex].setAttribute(\r\n        'class',\r\n        `${this.letterClass} ${this.animate}`\r\n      );\r\n    }, 3000);\r\n  }\r\n  renderLetters(word) {\r\n    const characters = word\r\n      .toUpperCase()\r\n      .split('')\r\n      .map((item, index) => {\r\n        return (\r\n          <text key={index} className=\"letter\" x=\"50%\" y=\"50%\" dy=\"0.3em\">\r\n            {item}\r\n          </text>\r\n        );\r\n      });\r\n    return characters;\r\n  }\r\n  render() {\r\n    const letters = this.renderLetters(this.props.text);\r\n\r\n    return (\r\n      <div className=\"svg-logo\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\">\r\n          {letters}\r\n          <text\r\n            className=\"word diagonal\"\r\n            x=\"50%\"\r\n            y=\"50%\"\r\n            dy=\"0.3em\"\r\n            textLength={this.sideLength}\r\n            lengthAdjust=\"spacingAndGlyphs\"\r\n          >\r\n            {this.props.text.toUpperCase()}\r\n          </text>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SvgLogo;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AppSettings from 'containers/appSettings/AppSettings';\r\nimport SvgLogo from '../svgLogo/SVGLogo.js';\r\nimport { Paths } from 'constants/paths';\r\nimport './header.scss';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"satsuki-header center-contents\">\r\n        <NavLink className=\"ripple\" id=\"satsuki-svg\" to={Paths.base}>\r\n          <SvgLogo text=\"Satsuki Junketsu\" />\r\n        </NavLink>\r\n        <h1>SATSUKI JUNKETSU</h1>\r\n        <div id=\"navigation-links\">\r\n          <div className=\"flex-right center-vertically\">\r\n            <AppSettings />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport toaster from 'utils/toaster';\r\n\r\nimport './toaster.scss';\r\n\r\nclass Toaster extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stack: Array(0)\r\n    };\r\n    this.timer = null;\r\n\r\n    toaster.register(this);\r\n  }\r\n\r\n  removeColdToast() {\r\n    return this.state.stack.filter((x) => x.time > Date.now() - 3000);\r\n  }\r\n\r\n  removeToast(time) {\r\n    const warmToast = this.removeColdToast();\r\n    const remainingToast = warmToast.filter((x) => x.time !== time);\r\n    this.setState({ stack: remainingToast });\r\n  }\r\n\r\n  eatToast() {\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => this.removeToast(), 3000);\r\n  }\r\n\r\n  popToast(toast) {\r\n    this.setState({ stack: [...this.state.stack, toast] });\r\n    this.eatToast();\r\n  }\r\n\r\n  render() {\r\n    const list = this.state.stack || Array(0);\r\n\r\n    return (\r\n      <div className={classNames('toaster')}>\r\n        {list.map((item) => {\r\n          const removeToast = () => this.removeToast(item.time);\r\n          return (\r\n            <span\r\n              key={item.time}\r\n              role=\"button\"\r\n              tabIndex=\"0\"\r\n              className={classNames('toast', item.type.toLowerCase())}\r\n              onClick={removeToast}\r\n              onKeyDown={removeToast}\r\n            >\r\n              <span className={classNames('toast__title')}>{item.title}</span>\r\n              <span className={classNames('toast__message')}>\r\n                {item.message}\r\n              </span>\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toaster;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nimport './appInformation.scss';\r\n\r\nconst resolveENVVariable = (str) => (str || '').trim();\r\n\r\nclass AppInformation extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hovered: false\r\n    };\r\n\r\n    this.handleHovered = this.handleHovered.bind(this);\r\n  }\r\n\r\n  handleHovered(hovered) {\r\n    return () => this.setState({ hovered });\r\n  }\r\n\r\n  render() {\r\n    const branch = resolveENVVariable(process.env.REACT_APP_BRANCH);\r\n    const version = resolveENVVariable(process.env.REACT_APP_VERSION);\r\n\r\n    return (\r\n      <div\r\n        className={classNames('app-information')}\r\n        onMouseEnter={this.handleHovered(true)}\r\n        onMouseLeave={this.handleHovered(false)}\r\n        aria-label={`Branch ${branch}, version ${version}`}\r\n      >\r\n        <div\r\n          className={classNames('app-information__detail', {\r\n            'app-information__detail--visible': this.state.hovered\r\n          })}\r\n        >\r\n          Branch: {branch}\r\n          <br />\r\n          Version: {version}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppInformation;\r\n","import React from 'react';\r\n\r\nimport Header from 'components/header/Header';\r\nimport Toaster from 'components/toaster/Toaster';\r\nimport AppInformation from 'components/appInformation';\r\n\r\nconst App = React.memo(function App({ children }) {\r\n  return (\r\n    <div className=\"satsuki\">\r\n      <Header />\r\n      <main>{children}</main>\r\n      <Toaster />\r\n      <AppInformation />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport './scales.scss';\r\n\r\nclass Scales extends Component {\r\n  renderScale(array) {\r\n    return array.map((item) => <div key={item}>{item}</div>);\r\n  }\r\n\r\n  render() {\r\n    const files = this.renderScale(this.props.files);\r\n    const ranks = this.renderScale(this.props.ranks);\r\n\r\n    return (\r\n      <span className=\"scales\">\r\n        <span className=\"scale file top\">{files}</span>\r\n        <span className=\"scale file bottom\">{files}</span>\r\n        <span className=\"scale rank left\">{ranks}</span>\r\n        <span className=\"scale rank right\">{ranks}</span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scales;\r\n","export default Object.freeze({\r\n  piece: 'piece',\r\n  square: 'square'\r\n});","import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { DropTarget } from 'react-dnd';\r\n\r\nimport DnDType from 'constants/dnd-type';\r\n\r\nconst squareTarget = {\r\n  canDrop(props, monitor) {\r\n    return props.dropActions.canDrop(props.id, monitor.getItem());\r\n  },\r\n  drop(props, monitor) {\r\n    return props.dropActions.onDrop(props.id, monitor.getItem());\r\n  }\r\n};\r\n\r\nfunction collectTarget(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n    canDrop: monitor.canDrop()\r\n  };\r\n}\r\n\r\nexport default function withDropTarget(WrappedComponent) {\r\n  class Target extends React.Component {\r\n    render() {\r\n      const { connectDropTarget, ...props } = this.props;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          {...props}\r\n          ref={instance => connectDropTarget(findDOMNode(instance))}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return DropTarget(DnDType.piece, squareTarget, collectTarget)(Target);\r\n}","import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { DragSource } from 'react-dnd';\r\n\r\nimport DnDType from 'constants/dnd-type';\r\n\r\nfunction handleDrag(props) {\r\n  if (props.onDrag) {\r\n    props.onDrag(props);\r\n  }\r\n\r\n  return props;\r\n}\r\n\r\nconst pieceSource = {\r\n  beginDrag: handleDrag,\r\n  endDrag: handleDrag\r\n};\r\n\r\nfunction collectSource(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nexport default function withDragSource(WrappedComponent) {\r\n  class Source extends React.Component {\r\n    componentDidMount() {\r\n      // TODO add a special preview\r\n      // this.props.connectDragPreview();\r\n    }\r\n    render() {\r\n      const { connectDragSource, connectDragPreview, ...props } = this.props;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          {...props}\r\n          ref={instance => connectDragSource(findDOMNode(instance))}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return DragSource(DnDType.piece, pieceSource, collectSource)(Source);\r\n}","export const isBrowser = function() {\r\n  return typeof window !== 'undefined';\r\n};\r\n\r\nfunction enableClassListShim() {\r\n  if (isBrowser()) {\r\n    /*\r\n         * classList.js: Cross-browser full element.classList implementation.\r\n         * 2014-07-23\r\n         *\r\n         * By Eli Grey, http://eligrey.com\r\n         * Public Domain.\r\n         * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\r\n         */\r\n\r\n    /*global window, document, DOMException */\r\n\r\n    /*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\r\n\r\n    if ('document' in window) {\r\n      // Full polyfill for browsers with no classList support\r\n      if (!('classList' in document.createElement('_'))) {\r\n        (function(view) {\r\n          if (!('Element' in view)) return;\r\n\r\n          var classListProp = 'classList',\r\n            protoProp = 'prototype',\r\n            elemCtrProto = view.Element[protoProp],\r\n            objCtr = Object,\r\n            strTrim =\r\n              String[protoProp].trim ||\r\n              function() {\r\n                return this.replace(/^\\s+|\\s+$/g, '');\r\n              },\r\n            arrIndexOf =\r\n              Array[protoProp].indexOf ||\r\n              function(item) {\r\n                var i = 0,\r\n                  len = this.length;\r\n                for (; i < len; i++) {\r\n                  if (i in this && this[i] === item) {\r\n                    return i;\r\n                  }\r\n                }\r\n                return -1;\r\n              },\r\n            // Vendors: please allow content code to instantiate DOMExceptions\r\n            DOMEx = function(type, message) {\r\n              this.name = type;\r\n              this.code = DOMException[type];\r\n              this.message = message;\r\n            },\r\n            checkTokenAndGetIndex = function(classList, token) {\r\n              if (token === '') {\r\n                throw new DOMEx(\r\n                  'SYNTAX_ERR',\r\n                  'An invalid or illegal string was specified'\r\n                );\r\n              }\r\n              if (/\\s/.test(token)) {\r\n                throw new DOMEx(\r\n                  'INVALID_CHARACTER_ERR',\r\n                  'String contains an invalid character'\r\n                );\r\n              }\r\n              return arrIndexOf.call(classList, token);\r\n            },\r\n            ClassList = function(elem) {\r\n              var trimmedClasses = strTrim.call(\r\n                  elem.getAttribute('class') || ''\r\n                ),\r\n                classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : [],\r\n                i = 0,\r\n                len = classes.length;\r\n              for (; i < len; i++) {\r\n                this.push(classes[i]);\r\n              }\r\n              this._updateClassName = function() {\r\n                elem.setAttribute('class', this.toString());\r\n              };\r\n            },\r\n            classListProto = (ClassList[protoProp] = []),\r\n            classListGetter = function() {\r\n              return new ClassList(this);\r\n            };\r\n          // Most DOMException implementations don't allow calling DOMException's toString()\r\n          // on non-DOMExceptions. Error's toString() is sufficient here.\r\n          DOMEx[protoProp] = Error[protoProp];\r\n          classListProto.item = function(i) {\r\n            return this[i] || null;\r\n          };\r\n          classListProto.contains = function(token) {\r\n            token += '';\r\n            return checkTokenAndGetIndex(this, token) !== -1;\r\n          };\r\n          classListProto.add = function() {\r\n            var tokens = arguments,\r\n              i = 0,\r\n              l = tokens.length,\r\n              token,\r\n              updated = false;\r\n            do {\r\n              token = tokens[i] + '';\r\n              if (checkTokenAndGetIndex(this, token) === -1) {\r\n                this.push(token);\r\n                updated = true;\r\n              }\r\n            } while (++i < l);\r\n\r\n            if (updated) {\r\n              this._updateClassName();\r\n            }\r\n          };\r\n          classListProto.remove = function() {\r\n            var tokens = arguments,\r\n              i = 0,\r\n              l = tokens.length,\r\n              token,\r\n              updated = false,\r\n              index;\r\n            do {\r\n              token = tokens[i] + '';\r\n              index = checkTokenAndGetIndex(this, token);\r\n              while (index !== -1) {\r\n                this.splice(index, 1);\r\n                updated = true;\r\n                index = checkTokenAndGetIndex(this, token);\r\n              }\r\n            } while (++i < l);\r\n\r\n            if (updated) {\r\n              this._updateClassName();\r\n            }\r\n          };\r\n          classListProto.toggle = function(token, force) {\r\n            token += '';\r\n\r\n            var result = this.contains(token),\r\n              method = result\r\n                ? force !== true && 'remove'\r\n                : force !== false && 'add';\r\n\r\n            if (method) {\r\n              this[method](token);\r\n            }\r\n\r\n            if (force === true || force === false) {\r\n              return force;\r\n            } else {\r\n              return !result;\r\n            }\r\n          };\r\n          classListProto.toString = function() {\r\n            return this.join(' ');\r\n          };\r\n\r\n          if (objCtr.defineProperty) {\r\n            var classListPropDesc = {\r\n              get: classListGetter,\r\n              enumerable: true,\r\n              configurable: true\r\n            };\r\n            try {\r\n              objCtr.defineProperty(\r\n                elemCtrProto,\r\n                classListProp,\r\n                classListPropDesc\r\n              );\r\n            } catch (ex) {\r\n              // IE 8 doesn't support enumerable:true\r\n              if (ex.number === -0x7ff5ec54) {\r\n                classListPropDesc.enumerable = false;\r\n                objCtr.defineProperty(\r\n                  elemCtrProto,\r\n                  classListProp,\r\n                  classListPropDesc\r\n                );\r\n              }\r\n            }\r\n          } else if (objCtr[protoProp].__defineGetter__) {\r\n            elemCtrProto.__defineGetter__(classListProp, classListGetter);\r\n          }\r\n        })(window);\r\n      } else {\r\n        // There is full or partial native classList support, so just check if we need\r\n        // to normalize the add/remove and toggle APIs.\r\n\r\n        (function() {\r\n          var testElement = document.createElement('_');\r\n\r\n          testElement.classList.add('c1', 'c2');\r\n\r\n          // Polyfill for IE 10/11 and Firefox <26, where classList.add and\r\n          // classList.remove exist but support only one argument at a time.\r\n          if (!testElement.classList.contains('c2')) {\r\n            var createMethod = function(method) {\r\n              var original = DOMTokenList.prototype[method];\r\n\r\n              DOMTokenList.prototype[method] = function(token) {\r\n                var i,\r\n                  len = arguments.length;\r\n\r\n                for (i = 0; i < len; i++) {\r\n                  token = arguments[i];\r\n                  original.call(this, token);\r\n                }\r\n              };\r\n            };\r\n            createMethod('add');\r\n            createMethod('remove');\r\n          }\r\n\r\n          testElement.classList.toggle('c3', false);\r\n\r\n          // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\r\n          // support the second argument.\r\n          if (testElement.classList.contains('c3')) {\r\n            var _toggle = DOMTokenList.prototype.toggle;\r\n\r\n            DOMTokenList.prototype.toggle = function(token, force) {\r\n              if (1 in arguments && !this.contains(token) === !force) {\r\n                return force;\r\n              } else {\r\n                return _toggle.call(this, token);\r\n              }\r\n            };\r\n          }\r\n\r\n          testElement = null;\r\n        })();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nenableClassListShim();\r\n\r\nexport default function isTouchDevice() {\r\n  if (isBrowser()) {\r\n    var confirmed =\r\n      'ontouchstart' in window ||\r\n      navigator.maxTouchPoints > 0 ||\r\n      navigator.msMaxTouchPoints > 0;\r\n\r\n    if (confirmed) {\r\n      var html = document.getElementsByTagName('html')[0];\r\n      html.classList.add('touchevents');\r\n    }\r\n\r\n    return confirmed;\r\n  }\r\n\r\n  return false;\r\n}\r\n","import React from 'react';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\n\r\nimport _withDropTarget from './Target';\r\nimport _withDragSource from './Source';\r\nimport isTouchDevice from './supportsTouch';\r\n\r\nconst HTML5DND = DragDropContext(HTML5Backend);\r\nconst TouchDND = DragDropContext(TouchBackend);\r\n\r\nexport default function DnDBackend(WrappedComponent) {\r\n  class HTML5DragDrop extends React.Component {\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  if (isTouchDevice()) {\r\n    return TouchDND(HTML5DragDrop);\r\n  } else {\r\n    return HTML5DND(HTML5DragDrop);\r\n  }\r\n}\r\n\r\nexport const withDropTarget = _withDropTarget;\r\nexport const withDragSource = _withDragSource;\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\n\r\nconst VIEW_BOX = '-2 0 50 50';\r\nconst PIECE_SIZE = '100%';\r\nconst setColour = (c) =>\r\n  c === Strings.colours.white\r\n    ? Strings.colours.whiteHex\r\n    : Strings.colours.blackHex;\r\n\r\nfunction colourSettingsForPieces(pieceName, colourString) {\r\n  const isWhite = colourString === Strings.colours.white;\r\n  const oppositeColourString = isWhite\r\n    ? Strings.colours.black\r\n    : Strings.colours.white;\r\n  const colour = setColour(colourString);\r\n  const oppositeColour = setColour(oppositeColourString);\r\n\r\n  switch (pieceName) {\r\n    case Strings.pieces.bishop:\r\n      return {\r\n        outline: { fill: colour },\r\n        detail: { stroke: oppositeColour }\r\n      };\r\n    case Strings.pieces.king:\r\n      return {\r\n        topCap: { fill: colour },\r\n        mainBody: { fill: colour },\r\n        lines: { stroke: oppositeColour }\r\n      };\r\n    case Strings.pieces.knight:\r\n      return {\r\n        face: { fill: oppositeColour, stroke: oppositeColour },\r\n        mane: { fill: oppositeColour },\r\n        mainBody: { fill: colour }\r\n      };\r\n    case Strings.pieces.pawn:\r\n      return { fill: colour };\r\n    case Strings.pieces.queen:\r\n      return { isWhite, mainBody: { fill: colour } };\r\n    case Strings.pieces.rook:\r\n      return { fill: colour };\r\n    default:\r\n      return {};\r\n  }\r\n}\r\n\r\nexport default function withColour(WrappedPiece) {\r\n  class PieceSvgWrapper extends React.Component {\r\n    render() {\r\n      const colourSettings = colourSettingsForPieces(\r\n        WrappedPiece.displayName,\r\n        this.props.colour\r\n      );\r\n      return (\r\n        <WrappedPiece\r\n          size={PIECE_SIZE}\r\n          viewBox={VIEW_BOX}\r\n          styleSettings={colourSettings}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return PieceSvgWrapper;\r\n}\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst bishopStyleOuter = {\r\n  opacity: 1,\r\n  fill: 'none',\r\n  fillRule: 'evenodd',\r\n  fillOpacity: 1,\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst bishopStyleOutline = {\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst bishopStyleDetail = {\r\n  fill: 'none',\r\n  stroke: '#ffffff',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst Bishop = ({ size, viewBox, styleSettings }) => {\r\n  const outline = { ...bishopStyleOutline, ...styleSettings.outline };\r\n  const detail = { ...bishopStyleDetail, ...styleSettings.detail };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={bishopStyleOuter}>\r\n        <g style={outline}>\r\n          <path d=\"M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z\" />\r\n          <path d=\"M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z\" />\r\n          <path d=\"M 25 8 A 2.5 2.5 0 1 1  20,8 A 2.5 2.5 0 1 1  25 8 z\" />\r\n        </g>\r\n        <path\r\n          d=\"M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18\"\r\n          style={detail}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nBishop.displayName = Strings.pieces.bishop;\r\n\r\nexport default withColour(Bishop);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst kingStyleOuter = {\r\n  fill: 'none',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst kingStylePath1 = {\r\n  fill: 'none',\r\n  stroke: '#000000',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst kingStyleTopCap = {\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  strokeLinecap: 'butt',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst kingStyleMainBody = {\r\n  fill: '#000000',\r\n  stroke: '#000000'\r\n};\r\n\r\nconst kingStylePath4 = {\r\n  fill: 'none',\r\n  stroke: '#000000',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst kingStyleLines = {\r\n  fill: 'none',\r\n  stroke: '#ffffff'\r\n};\r\n\r\nconst King = ({ size, viewBox, styleSettings }) => {\r\n  const topCap = { ...kingStyleTopCap, ...styleSettings.topCap };\r\n  const mainBody = { ...kingStyleMainBody, ...styleSettings.mainBody };\r\n  const lines = { ...kingStyleLines, ...styleSettings.lines };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={kingStyleOuter}>\r\n        <path d=\"M 22.5,11.63 L 22.5,6\" style={kingStylePath1} />\r\n        <path\r\n          d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\"\r\n          style={topCap}\r\n        />\r\n        <path\r\n          d=\"M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z \"\r\n          style={mainBody}\r\n        />\r\n        <path d=\"M 20,8 L 25,8\" style={kingStylePath4} />\r\n        <path\r\n          d=\"M 32,29.5 C 32,29.5 40.5,25.5 38.03,19.85 C 34.15,14 25,18 22.5,24.5 L 22.51,26.6 L 22.5,24.5 C 20,18 9.906,14 6.997,19.85 C 4.5,25.5 11.85,28.85 11.85,28.85\"\r\n          style={lines}\r\n        />\r\n        <path\r\n          d=\"M 11.5,30 C 17,27 27,27 32.5,30 M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5 M 11.5,37 C 17,34 27,34 32.5,37\"\r\n          style={lines}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nKing.displayName = Strings.pieces.king;\r\n\r\nexport default withColour(King);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst knightStyleOuter = {\r\n  opacity: 1,\r\n  fill: 'none',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst knightStyleMainBody = {\r\n  fill: '#000000',\r\n  stroke: '#000000'\r\n};\r\n\r\nconst knightStyleFace = {\r\n  fill: '#ffffff',\r\n  stroke: '#ffffff'\r\n};\r\n\r\nconst knightStyleMane = {\r\n  fill: '#ffffff',\r\n  stroke: 'none'\r\n};\r\n\r\nconst Knight = ({ size, viewBox, styleSettings }) => {\r\n  const mane = { ...knightStyleMane, ...styleSettings.mane };\r\n  const face = { ...knightStyleFace, ...styleSettings.face };\r\n  const mainBody = { ...knightStyleMainBody, ...styleSettings.mainBody };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={knightStyleOuter}>\r\n        <path\r\n          d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\r\n          style={mainBody}\r\n        />\r\n        <path\r\n          d=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\r\n          style={mainBody}\r\n        />\r\n        <path\r\n          d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\r\n          style={face}\r\n        />\r\n        <path\r\n          d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\r\n          transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\r\n          style={face}\r\n        />\r\n        <path\r\n          d=\"M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49 32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L 37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5 L 24.55,10.4 z \"\r\n          style={mane}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nKnight.displayName = Strings.pieces.knight;\r\n\r\nexport default withColour(Knight);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst pawnStyle = {\r\n  opacity: 1,\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  fillRule: 'nonzero',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'miter',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst Pawn = ({ size, viewBox, styleSettings }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    version=\"1.1\"\r\n    viewBox={viewBox}\r\n    width={size}\r\n    height={size}\r\n  >\r\n    <path\r\n      d=\"M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z \"\r\n      style={{ ...pawnStyle, ...styleSettings }}\r\n    />\r\n  </svg>\r\n);\r\n\r\nPawn.displayName = Strings.pieces.pawn;\r\n\r\nexport default withColour(Pawn);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst queenStyleMainBody = {\r\n  opacity: 1,\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst queenStyleBlackCircles = {\r\n  fill: '#000000',\r\n  stroke: 'none'\r\n};\r\n\r\nconst queenStyleBlackSpikes = {\r\n  strokeLinecap: 'butt',\r\n  stroke: '#000000'\r\n};\r\n\r\nconst queenStylePath1 = {\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst queenStyleBlackBaseline = {\r\n  fill: 'none',\r\n  stroke: '#000000',\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst queenStyleBlackCrownlines = {\r\n  fill: 'none',\r\n  stroke: '#ffffff'\r\n};\r\n\r\nconst queenStyleWhitePath2 = {\r\n  fill: 'none'\r\n};\r\n\r\nconst Queen = ({ size, viewBox, styleSettings }) => {\r\n  if (styleSettings.isWhite)\r\n    return (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        version=\"1.1\"\r\n        viewBox={viewBox}\r\n        width={size}\r\n        height={size}\r\n      >\r\n        <g style={{ ...queenStyleMainBody, ...styleSettings.mainBody }}>\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(-1,-1)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(15.5,-5.5)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(32,-1)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(7,-4.5)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(24,-4)\"\r\n          />\r\n          <path\r\n            d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38,14 L 31,25 L 31,11 L 25.5,24.5 L 22.5,9.5 L 19.5,24.5 L 14,10.5 L 14,25 L 7,14 L 9,26 z \"\r\n            style={queenStylePath1}\r\n          />\r\n          <path\r\n            d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z \"\r\n            style={queenStylePath1}\r\n          />\r\n          <path\r\n            d=\"M 11.5,30 C 15,29 30,29 33.5,30\"\r\n            style={queenStyleWhitePath2}\r\n          />\r\n          <path\r\n            d=\"M 12,33.5 C 18,32.5 27,32.5 33,33.5\"\r\n            style={queenStyleWhitePath2}\r\n          />\r\n        </g>\r\n      </svg>\r\n    );\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={queenStyleMainBody}>\r\n        <g style={queenStyleBlackCircles}>\r\n          <circle cx=\"6\" cy=\"12\" r=\"2.75\" />\r\n          <circle cx=\"14\" cy=\"9\" r=\"2.75\" />\r\n          <circle cx=\"22.5\" cy=\"8\" r=\"2.75\" />\r\n          <circle cx=\"31\" cy=\"9\" r=\"2.75\" />\r\n          <circle cx=\"39\" cy=\"12\" r=\"2.75\" />\r\n        </g>\r\n        <path\r\n          d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38.5,13.5 L 31,25 L 30.7,10.9 L 25.5,24.5 L 22.5,10 L 19.5,24.5 L 14.3,10.9 L 14,25 L 6.5,13.5 L 9,26 z\"\r\n          style={queenStyleBlackSpikes}\r\n        />\r\n        <path\r\n          d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z\"\r\n          style={queenStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 11,38.5 A 35,35 1 0 0 34,38.5\"\r\n          style={queenStyleBlackBaseline}\r\n        />\r\n        <path\r\n          d=\"M 11,29 A 35,35 1 0 1 34,29\"\r\n          style={queenStyleBlackCrownlines}\r\n        />\r\n        <path d=\"M 12.5,31.5 L 32.5,31.5\" style={queenStyleBlackCrownlines} />\r\n        <path\r\n          d=\"M 11.5,34.5 A 35,35 1 0 0 33.5,34.5\"\r\n          style={queenStyleBlackCrownlines}\r\n        />\r\n        <path\r\n          d=\"M 10.5,37.5 A 35,35 1 0 0 34.5,37.5\"\r\n          style={queenStyleBlackCrownlines}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nQueen.displayName = Strings.pieces.queen;\r\n\r\nexport default withColour(Queen);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst rookStyleMainBody = {\r\n  opacity: 1,\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst rookStylePath1 = {\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst rookStylePath2 = {\r\n  strokeLinecap: 'butt',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst rookStylePath3 = {\r\n  fill: 'none',\r\n  stroke: '#ffffff',\r\n  strokeWidth: 1,\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst Rook = ({ size, viewBox, styleSettings }) => {\r\n  const mainBody = { ...rookStyleMainBody, ...styleSettings };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={mainBody}>\r\n        <path\r\n          d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z \"\r\n          style={rookStylePath2}\r\n        />\r\n        <path\r\n          d=\"M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 L 11,14 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path d=\"M 12,35.5 L 33,35.5 L 33,35.5\" style={rookStylePath3} />\r\n        <path d=\"M 13,31.5 L 32,31.5\" style={rookStylePath3} />\r\n        <path d=\"M 14,29.5 L 31,29.5\" style={rookStylePath3} />\r\n        <path d=\"M 14,16.5 L 31,16.5\" style={rookStylePath3} />\r\n        <path d=\"M 11,14 L 34,14\" style={rookStylePath3} />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nRook.displayName = Strings.pieces.rook;\r\n\r\nexport default withColour(Rook);\r\n","import Bishop from './Bishop';\r\nimport King from './King';\r\nimport Knight from './Knight';\r\nimport Pawn from './Pawn';\r\nimport Queen from './Queen';\r\nimport Rook from './Rook';\r\n\r\nexport default {\r\n  Bishop,\r\n  King,\r\n  Knight,\r\n  Pawn,\r\n  Queen,\r\n  Rook\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { withDragSource } from 'components/dragAndDrop';\r\nimport SVGS from './pieceSvgs';\r\nimport Strings from 'constants/strings';\r\nimport { objectsAreEqual } from 'utils/common';\r\n\r\nimport './piece.scss';\r\n\r\nclass Piece extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    const isDraggingChanged = nextProps.isDragging !== this.props.isDragging;\r\n    const dataChanged = !objectsAreEqual(nextProps, this.props);\r\n\r\n    return isDraggingChanged || dataChanged;\r\n  }\r\n\r\n  renderCoolChessPieceSvg(pieceName, pieceColour) {\r\n    switch (pieceName) {\r\n      case Strings.pieces.bishop:\r\n        return <SVGS.Bishop colour={pieceColour} />;\r\n      case Strings.pieces.king:\r\n        return <SVGS.King colour={pieceColour} />;\r\n      case Strings.pieces.knight:\r\n        return <SVGS.Knight colour={pieceColour} />;\r\n      case Strings.pieces.pawn:\r\n        return <SVGS.Pawn colour={pieceColour} />;\r\n      case Strings.pieces.queen:\r\n        return <SVGS.Queen colour={pieceColour} />;\r\n      case Strings.pieces.rook:\r\n        return <SVGS.Rook colour={pieceColour} />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, colour, isDragging } = this.props;\r\n\r\n    return (\r\n      <div\r\n        aria-label={`${colour} ${name}`}\r\n        className={classNames('piece', {\r\n          [`${colour}-${name}`]: true,\r\n          'piece--dragging': isDragging\r\n        })}\r\n      >\r\n        {this.renderCoolChessPieceSvg(name, colour)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withDragSource(Piece);\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { withDropTarget } from 'components/dragAndDrop';\r\nimport Piece from 'components/piece/Piece';\r\n\r\nimport './square.scss';\r\n\r\nclass Square extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleDragPiece = this.handleDragPiece.bind(this);\r\n  }\r\n\r\n  handleDragPiece(piece) {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(this.props.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      rank,\r\n      file,\r\n      isSelected,\r\n      isPotentialMove,\r\n      isSpecialMove,\r\n      isInCheck,\r\n      contains,\r\n      onClick\r\n    } = this.props;\r\n\r\n    const hasPiece = !!contains;\r\n    const label = `${file}${rank}${\r\n      hasPiece ? `, ${contains.colour} ${contains.name}` : ''\r\n    }`;\r\n    const classes = classNames('square', {\r\n      selected: isSelected,\r\n      'potential-move': isPotentialMove && !contains,\r\n      'potential-take': isPotentialMove && contains,\r\n      'special-move': isSpecialMove,\r\n      'in-check': isInCheck,\r\n      'is-over': this.props.isOver,\r\n      'can-drop': this.props.canDrop,\r\n      [`rank-${rank}`]: true,\r\n      [`file-${file}`]: true\r\n    });\r\n\r\n    return (\r\n      <button\r\n        id={id}\r\n        className={classes}\r\n        aria-label={label}\r\n        onClick={() => onClick(id)}\r\n      >\r\n        {hasPiece && <Piece {...contains} onDrag={this.handleDragPiece} />}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withDropTarget(Square);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Strings from 'constants/strings';\r\nimport { performSpecialMove } from 'actions/board';\r\n\r\nimport './promotionOptions.scss';\r\n\r\nconst promotionChoices = [\r\n  Strings.pieces.rook,\r\n  Strings.pieces.knight,\r\n  Strings.pieces.bishop,\r\n  Strings.pieces.queen\r\n];\r\n\r\nconst PromotionOptions = ({ promotionAt, actions }) => {\r\n  if (!promotionAt) return null;\r\n  const promotion = {\r\n    ...promotionAt,\r\n    type: Strings.specialMoves.promotion\r\n  };\r\n  return (\r\n    <div id=\"promotion-options-container\">\r\n      <div>Please select a piece to promote to: </div>\r\n      <ul className=\"list column\">\r\n        {promotionChoices.map((option) => {\r\n          const promoteTo = () =>\r\n            actions.performSpecialMove({ ...promotion, promoteTo: option });\r\n          return (\r\n            <li key={option} id={`promote-to-${option}`}>\r\n              <button type=\"button\" className=\"button\" onClick={promoteTo}>\r\n                {option}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  promotionAt: state.board.promotionAt\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators({ performSpecialMove }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PromotionOptions);\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport Portal from 'components/Portal';\r\nimport Scales from 'components/scales/Scales';\r\nimport Square from 'components/square/Square';\r\nimport PromotionOptions from 'components/promotionOptions/PromotionOptions';\r\n\r\nimport Constants from 'constants/index';\r\nimport { reverseArray, capitalise } from 'utils/common';\r\nimport { getWinningPlayerColour } from 'utils/game';\r\nimport './board.scss';\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSquareSelection = this.handleSquareSelection.bind(this);\r\n    this.handleCanDrop = this.handleCanDrop.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n  }\r\n\r\n  handleSquareSelection(squareId) {\r\n    const {\r\n      squares,\r\n      potentialMoves,\r\n      specialMoves,\r\n      selectedSquareId,\r\n      actions\r\n    } = this.props;\r\n    const selectedSquare = squares.find((x) => x.id === selectedSquareId);\r\n    const square = squares.find((x) => x.id === squareId);\r\n    const isSameSquare = selectedSquareId === squareId;\r\n    const currentPlayerColour = this.props.currentPlayerColour;\r\n    const isPotentialMove = potentialMoves.some((x) => x === squareId);\r\n    const specialMove = specialMoves.find((x) => x.squareId === squareId);\r\n    const isSpecialMove = !!specialMove;\r\n\r\n    if (!selectedSquare && !square.contains) return;\r\n\r\n    if (selectedSquare && !square.contains)\r\n      return isSpecialMove\r\n        ? actions.performSpecialMove(specialMove)\r\n        : isPotentialMove\r\n          ? actions.moveSelectedPiece(squareId)\r\n          : console.log(\r\n              '%c invalid move',\r\n              'color: red; font-size: 22px;',\r\n              selectedSquare,\r\n              square\r\n            );\r\n\r\n    if (!selectedSquare && square.contains.colour !== currentPlayerColour)\r\n      return;\r\n\r\n    if (!selectedSquare && square.contains.colour === currentPlayerColour)\r\n      return actions.selectBoardSquare(squareId);\r\n\r\n    if (selectedSquare && isSameSquare) return actions.selectBoardSquare(null);\r\n\r\n    if (selectedSquare && square.contains.colour === currentPlayerColour)\r\n      return actions.selectBoardSquare(squareId);\r\n\r\n    if (selectedSquare && square.contains.colour !== currentPlayerColour)\r\n      return isSpecialMove\r\n        ? actions.performSpecialMove(specialMove)\r\n        : isPotentialMove\r\n          ? actions.takePiece(squareId)\r\n          : console.log(\r\n              '%c invalid take',\r\n              'color: red; font-size: 22px;',\r\n              selectedSquare,\r\n              square\r\n            );\r\n\r\n    console.log(\r\n      '%c square selection case not handled!',\r\n      'color: red',\r\n      `Selected square: ${selectedSquareId}, Target square: ${squareId}`\r\n    );\r\n  }\r\n\r\n  handleCanDrop(squareId) {\r\n    const { potentialMoves, specialMoves } = this.props;\r\n    const isPotentialMove = potentialMoves.some((x) => x === squareId);\r\n    const specialMove = specialMoves.find((x) => x.squareId === squareId);\r\n    const isSpecialMove = !!specialMove;\r\n\r\n    return isPotentialMove || isSpecialMove;\r\n  }\r\n\r\n  handleDrop(squareId) {\r\n    this.handleSquareSelection(squareId);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      themeClass,\r\n      squares,\r\n      selectedSquareId,\r\n      currentPlayerColour,\r\n      potentialMoves,\r\n      specialMoves,\r\n      checkStatus,\r\n      isReversed,\r\n      isReadOnly,\r\n      nextMove\r\n    } = this.props;\r\n\r\n    const boardSquares = isReversed ? reverseArray(squares) : squares;\r\n    const boardFiles = isReversed\r\n      ? reverseArray(Constants.files)\r\n      : Constants.files;\r\n    const boardRanks = isReversed\r\n      ? reverseArray(Constants.ranks)\r\n      : Constants.ranks;\r\n\r\n    const checkedKingSquareId =\r\n      !!checkStatus.attackers.length && checkStatus.kingSquare.id;\r\n    const isCheck = !!checkedKingSquareId;\r\n    const isLocked = isReadOnly || checkStatus.isCheckmate;\r\n    const onSquareClick = isLocked ? () => null : this.handleSquareSelection;\r\n\r\n    const dropActions = {\r\n      canDrop: this.handleCanDrop,\r\n      onDrop: this.handleDrop\r\n    };\r\n    console.groupCollapsed('BOARD RENDER');\r\n    console.log('selectedSquareId', selectedSquareId);\r\n    console.log('boardSquares', boardSquares);\r\n    console.log('props', this.props);\r\n    console.log('isLocked', isLocked);\r\n    console.groupEnd();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={style}\r\n          className={classNames('chess-board', themeClass, {\r\n            'read-only': isLocked\r\n          })}\r\n        >\r\n          <Scales files={boardFiles} ranks={boardRanks} />\r\n          {boardSquares.map((o) => {\r\n            let isPotentialMove = potentialMoves.some((x) => x === o.id);\r\n            isPotentialMove =\r\n              isPotentialMove &&\r\n              (!isReadOnly || (isReadOnly && nextMove.to.id === o.id));\r\n\r\n            let isSpecialMove = specialMoves.some((x) => x.squareId === o.id);\r\n            isSpecialMove =\r\n              isSpecialMove &&\r\n              (!isReadOnly || (isReadOnly && nextMove.to.id === o.id));\r\n\r\n            return (\r\n              <Square\r\n                key={o.id}\r\n                {...o}\r\n                isPotentialMove={isPotentialMove}\r\n                isSpecialMove={isSpecialMove}\r\n                isInCheck={o.id === checkedKingSquareId}\r\n                isSelected={o.id === selectedSquareId}\r\n                onClick={onSquareClick}\r\n                dropActions={dropActions}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <Portal targetSelector=\"#chess-game-status\">\r\n          {!checkStatus.isCheckmate && (\r\n            <React.Fragment>\r\n              <PromotionOptions />\r\n              {`${capitalise(currentPlayerColour)}'s turn`}\r\n              {isCheck && `\\n${capitalise(currentPlayerColour)} is in Check!`}\r\n            </React.Fragment>\r\n          )}\r\n          {checkStatus.isCheckmate &&\r\n            `Winner: ${getWinningPlayerColour(checkStatus.kingSquare)}`}\r\n        </Portal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import { possibleMovesForSelectedPiece } from 'utils/piece';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\n\r\nexport function getPossibleMovesForPiece(board, squares, squareId) {\r\n  const fakeBoardState = {\r\n    ...board,\r\n    selectedSquareId: squareId,\r\n    squares\r\n  };\r\n  return {\r\n    possibleMoves: possibleMovesForSelectedPiece(fakeBoardState),\r\n    possibleSMoves: availableSpecialMovesForSelectedPiece(fakeBoardState)\r\n  };\r\n}\r\n\r\nexport function getAllUniquePossibleMoves(board, pSquares, isCurrent = true) {\r\n  const { moves, squares } = board;\r\n  const fakeMoves = isCurrent ? moves : moves.slice(1);\r\n  const fakeBoard = {\r\n    ...board,\r\n    moves: fakeMoves\r\n  };\r\n  const ids = pSquares.reduce((acc, sq) => {\r\n    const { possibleMoves, possibleSMoves } = getPossibleMovesForPiece(\r\n      fakeBoard,\r\n      squares,\r\n      sq.id\r\n    );\r\n    return [...acc, ...possibleMoves, ...possibleSMoves];\r\n  }, []);\r\n\r\n  return new Set(ids);\r\n}\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\nconst base = [\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  10,\r\n  10,\r\n  20,\r\n  30,\r\n  30,\r\n  20,\r\n  10,\r\n  10,\r\n  5,\r\n  5,\r\n  10,\r\n  25,\r\n  25,\r\n  10,\r\n  5,\r\n  5,\r\n  0,\r\n  0,\r\n  0,\r\n  20,\r\n  20,\r\n  0,\r\n  0,\r\n  0,\r\n  5,\r\n  -5,\r\n  -10,\r\n  0,\r\n  0,\r\n  -10,\r\n  -5,\r\n  5,\r\n  5,\r\n  10,\r\n  10,\r\n  -20,\r\n  -20,\r\n  10,\r\n  10,\r\n  5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\nconst base = [\r\n  -50,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -50,\r\n  -40,\r\n  -20,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -20,\r\n  -40,\r\n  -30,\r\n  0,\r\n  10,\r\n  15,\r\n  15,\r\n  10,\r\n  0,\r\n  -30,\r\n  -30,\r\n  5,\r\n  15,\r\n  20,\r\n  20,\r\n  15,\r\n  5,\r\n  -30,\r\n  -30,\r\n  0,\r\n  15,\r\n  20,\r\n  20,\r\n  15,\r\n  0,\r\n  -30,\r\n  -30,\r\n  5,\r\n  10,\r\n  15,\r\n  15,\r\n  10,\r\n  5,\r\n  -30,\r\n  -40,\r\n  -20,\r\n  0,\r\n  5,\r\n  5,\r\n  0,\r\n  -20,\r\n  -40,\r\n  -50,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -50\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\n\r\nconst base = [\r\n  -20,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -20,\r\n  -10,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -10,\r\n  -10,\r\n  0,\r\n  5,\r\n  10,\r\n  10,\r\n  5,\r\n  0,\r\n  -10,\r\n  -10,\r\n  5,\r\n  5,\r\n  10,\r\n  10,\r\n  5,\r\n  5,\r\n  -10,\r\n  -10,\r\n  0,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  0,\r\n  -10,\r\n  -10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  -10,\r\n  -10,\r\n  5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  5,\r\n  -10,\r\n  -20,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -20\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\n\r\nconst base = [\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  5,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  5,\r\n  5,\r\n  0,\r\n  0,\r\n  0\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\n\r\nconst base = [\r\n  -20,\r\n  -10,\r\n  -10,\r\n  -5,\r\n  -5,\r\n  -10,\r\n  -10,\r\n  -20,\r\n  -10,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -10,\r\n  -10,\r\n  0,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  0,\r\n  -10,\r\n  -5,\r\n  0,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  0,\r\n  -5,\r\n  0,\r\n  0,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  0,\r\n  -5,\r\n  -10,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  0,\r\n  -10,\r\n  -10,\r\n  0,\r\n  5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -10,\r\n  -20,\r\n  -10,\r\n  -10,\r\n  -5,\r\n  -5,\r\n  -10,\r\n  -10,\r\n  -20\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\nconst base = [\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -50,\r\n  -50,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -50,\r\n  -50,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -50,\r\n  -50,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -50,\r\n  -50,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -20,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -20,\r\n  -10,\r\n  -20,\r\n  -20,\r\n  -20,\r\n  -20,\r\n  -20,\r\n  -20,\r\n  -10,\r\n  20,\r\n  20,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  20,\r\n  20,\r\n  20,\r\n  30,\r\n  10,\r\n  0,\r\n  0,\r\n  10,\r\n  30,\r\n  20\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import Strings from 'constants/strings';\r\n\r\nimport * as pawns from './pawn';\r\nimport * as knights from './knight';\r\nimport * as bishops from './bishop';\r\nimport * as rooks from './rook';\r\nimport * as queens from './queen';\r\nimport * as kings from './king-middle';\r\n\r\nconst { pieces } = Strings;\r\n\r\nfunction getTable(name) {\r\n  switch (name) {\r\n    case pieces.pawn:\r\n      return pawns;\r\n    case pieces.knight:\r\n      return knights;\r\n    case pieces.bishop:\r\n      return bishops;\r\n    case pieces.rook:\r\n      return rooks;\r\n    case pieces.queen:\r\n      return queens;\r\n    case pieces.king:\r\n      return kings;\r\n    default:\r\n      return {};\r\n  }\r\n}\r\n\r\nexport default function tableInteragator(square) {\r\n  const { id, contains } = square;\r\n  const { name, colour } = contains;\r\n\r\n  const table = getTable(name);\r\n  return table[colour][id];\r\n}\r\n","import Strings from 'constants/strings';\r\nimport { files as FILES } from 'constants/board';\r\n\r\nconst getPawns = (colour) => (x) =>\r\n  x.contains &&\r\n  x.contains.colour === colour &&\r\n  x.contains.name === Strings.pieces.pawn;\r\n\r\nconst getPawnAlignment = (pieces) =>\r\n  pieces.reduce((p, c) => {\r\n    const value = p.get(c.file) || 0;\r\n    return p.set(c.file, value + 1);\r\n  }, new Map([]));\r\n\r\nconst getDoubledCount = (m) =>\r\n  [...m.values()].reduce((p, c) => (c > 1 ? p + 1 : p), 0);\r\n\r\nconst getIsolatedCount = (m) =>\r\n  [...m.keys()].reduce((p, c) => {\r\n    const index = FILES.findIndex((x) => x === c);\r\n    const left = FILES[index - 1];\r\n    const right = FILES[index + 1];\r\n\r\n    return (!left && m.has(right)) ||\r\n      (!right && m.has(left)) ||\r\n      (m.has(left) || m.has(right))\r\n      ? p\r\n      : p + 1;\r\n  }, 0);\r\n\r\nexport default function checkPawnHealth(squares) {\r\n  const wp = squares.filter(getPawns(Strings.colours.white));\r\n  const bp = squares.filter(getPawns(Strings.colours.black));\r\n\r\n  const wAlign = getPawnAlignment(wp);\r\n  const bAlign = getPawnAlignment(bp);\r\n\r\n  const doubled = getDoubledCount(wAlign) - getDoubledCount(bAlign);\r\n  const isolated = getIsolatedCount(wAlign) - getIsolatedCount(bAlign);\r\n\r\n  const blocked = 0;\r\n\r\n  return doubled + blocked + isolated;\r\n}\r\n","import Strings from 'constants/strings';\r\n\r\nimport getPieceSquareValue from './piece-sqaure-tables';\r\nimport * as PossibleMoves from './possible-moves';\r\nimport checkPawnHealth from './pawn-health';\r\n\r\nconst { pieces: Pieces } = Strings;\r\n\r\nconst getPieceCount = (arr, pieceName) =>\r\n  arr.filter((x) => x.contains.name === pieceName).length;\r\n\r\nconst getScoreForPiece = (weight, pieceName) => (aSq, bSq) =>\r\n  weight * (getPieceCount(aSq, pieceName) - getPieceCount(bSq, pieceName));\r\n\r\nconst scoreKings = getScoreForPiece(20000, Pieces.king);\r\nconst scoreQueens = getScoreForPiece(900, Pieces.queen);\r\nconst scoreRooks = getScoreForPiece(500, Pieces.rook);\r\nconst scoreBishops = getScoreForPiece(330, Pieces.bishop);\r\nconst scoreKnights = getScoreForPiece(320, Pieces.knight);\r\nconst scorePawns = getScoreForPiece(100, Pieces.pawn);\r\n\r\nexport default function evaluateBoard(playingColour, board) {\r\n  const { squares } = board;\r\n\r\n  const isWhite = playingColour === Strings.colours.white;\r\n  const sign = isWhite ? 1 : -1;\r\n\r\n  const wp = squares.filter(\r\n    (x) => x.contains && x.contains.colour === Strings.colours.white\r\n  );\r\n  const bp = squares.filter(\r\n    (x) => x.contains && x.contains.colour === Strings.colours.black\r\n  );\r\n\r\n  // KQRBNP counts\r\n  const counts =\r\n    scoreKings(wp, bp) +\r\n    scoreQueens(wp, bp) +\r\n    scoreRooks(wp, bp) +\r\n    scoreBishops(wp, bp) +\r\n    scoreKnights(wp, bp) +\r\n    scorePawns(wp, bp);\r\n\r\n  // Account for piece-square rating\r\n  const pieceSquare = squares\r\n    .filter((x) => x.contains)\r\n    .reduce((v, sq) => v + getPieceSquareValue(sq), 0);\r\n\r\n  // Doubled, Blocked, and Isolated pawns\r\n  const pawnHealth = 50 * checkPawnHealth(squares);\r\n\r\n  // Mobility\r\n  const wpMoves = PossibleMoves.getAllUniquePossibleMoves(board, wp, isWhite);\r\n  const bpMoves = PossibleMoves.getAllUniquePossibleMoves(board, bp, !isWhite);\r\n  const mobility = 10 * (wpMoves.size - bpMoves.size);\r\n\r\n  const score = (counts - pawnHealth + mobility) * sign + pieceSquare;\r\n  console.groupCollapsed('score', score);\r\n  console.log('couunts', counts);\r\n  console.log('pieceSquare', pieceSquare);\r\n  console.log('mobility', wpMoves, bpMoves, mobility);\r\n  console.groupEnd();\r\n\r\n  return score;\r\n}\r\n","import { getMoveWithBestScore, getKeyForMaxValue } from 'utils/common';\r\nimport { getCurrentPlayerColour } from 'utils/game';\r\n\r\nimport performMovementFromCurrentToTarget from 'utils/squaresUpdate';\r\nimport * as PossibleMoves from './possible-moves';\r\nimport evaluateBoard from './evaluate-board';\r\n\r\nfunction selectNextMove(board) {\r\n  const { moves, squares } = board;\r\n  const currentColour = getCurrentPlayerColour(moves);\r\n  const pieceSquares = squares.filter(\r\n    (x) => x.contains && x.contains.colour === currentColour\r\n  );\r\n\r\n  const pieceMoves = pieceSquares.reduce((p, sq) => {\r\n    const squareId = sq.id;\r\n    const {\r\n      possibleMoves,\r\n      possibleSMoves\r\n    } = PossibleMoves.getPossibleMovesForPiece(board, squares, squareId);\r\n\r\n    const moveResults = possibleMoves.reduce(\r\n      (results, targetId) =>\r\n        results.set(\r\n          targetId,\r\n          evaluateBoard(\r\n            currentColour,\r\n            performMovementFromCurrentToTarget(board, squareId, targetId)\r\n          )\r\n        ),\r\n      new Map([])\r\n    );\r\n\r\n    // TODO will require refactor of board-specialMove reducer\r\n    const specialMoveResults = possibleSMoves.map((targetId) => targetId);\r\n\r\n    return [...p, { squareId, moveResults, specialMoveResults }];\r\n  }, []);\r\n\r\n  const bestPieceMove = pieceMoves.reduce((bestMove, curr) =>\r\n    getMoveWithBestScore(bestMove, curr)\r\n  );\r\n  const bestTargetId = getKeyForMaxValue(bestPieceMove.moveResults);\r\n  const engineMoveChoice = {\r\n    fromId: bestPieceMove.squareId,\r\n    toId: bestTargetId\r\n  };\r\n\r\n  console.groupCollapsed('%c engine in progress', 'color: magenta');\r\n  console.log('input > ', board);\r\n  console.log('current player > ', currentColour);\r\n  console.log('pieces > ', pieceSquares);\r\n  console.log('moves for pieces > ', pieceMoves);\r\n  console.log('best >> ', bestPieceMove);\r\n  console.log('output > ', engineMoveChoice);\r\n  console.groupEnd();\r\n\r\n  return engineMoveChoice;\r\n  /* TODO\r\n   *\r\n   * Account for next player taking pieces!\r\n   * Account for special moves!\r\n   * \r\n   */\r\n}\r\n\r\nexport default {\r\n  selectNextMove\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Board from 'components/board/Board';\r\nimport DragAndDropContext from 'components/dragAndDrop';\r\n\r\nimport * as actions from 'actions/board';\r\nimport { isWhitesTurn, getCurrentPlayerColour } from 'utils/game';\r\nimport {\r\n  possibleMovesForSelectedPiece,\r\n  getCheckStatusForColour\r\n} from 'utils/piece';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\nimport {\r\n  selectNextMoveSquareId,\r\n  createBoardLayoutForMoveList\r\n} from 'utils/playback';\r\nimport SJEngine from 'utils/engine';\r\n\r\nclass BoardContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      computerSelected: null\r\n    };\r\n    this.timer = null;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { vsComputer, moves } = this.props.board;\r\n    const { isComputer, isComputerBlack } = vsComputer;\r\n    const isWhite = isWhitesTurn(moves.length);\r\n    const notComputerTurn =\r\n      (isComputerBlack && isWhite) || (!isComputerBlack && !isWhite);\r\n\r\n    if (!isComputer || notComputerTurn) return;\r\n\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => this.makeComputerMove(), 1000);\r\n  }\r\n\r\n  makeComputerMove() {\r\n    const { moves, squares } = this.props.board;\r\n\r\n    const currentPlayerColour = getCurrentPlayerColour(moves);\r\n    const checkStatus = getCheckStatusForColour(currentPlayerColour, squares);\r\n    if (checkStatus && checkStatus.isCheckmate) return;\r\n\r\n    const computerSelected = SJEngine.selectNextMove(this.props.board);\r\n    if (!computerSelected) return;\r\n\r\n    this.props.actions.performComputerMove(computerSelected);\r\n  }\r\n\r\n  render() {\r\n    const { board, ...props } = this.props;\r\n    const activeMoveIndex = board.playback.sliderPosition;\r\n    const isReadOnly = activeMoveIndex !== board.moves.length;\r\n    /*  For Playback\r\n   *  Here we need to calculate the moves, squares, and set the selectedSquareId\r\n   *  for the currently active move according to the playback.sliderPosition\r\n  */\r\n    const moves = board.moves.slice(0, activeMoveIndex);\r\n    const [nextMove] = board.moves.slice(activeMoveIndex, activeMoveIndex + 1);\r\n\r\n    const selectedSquareId = !isReadOnly\r\n      ? board.selectedSquareId\r\n      : selectNextMoveSquareId(board.moves, activeMoveIndex);\r\n\r\n    const squares = !isReadOnly\r\n      ? board.squares\r\n      : createBoardLayoutForMoveList(moves);\r\n\r\n    const currentBoardForDisplay = {\r\n      ...board,\r\n      selectedSquareId,\r\n      moves,\r\n      squares\r\n    };\r\n\r\n    const currentPlayerColour = getCurrentPlayerColour(moves);\r\n    const potentialMoves = possibleMovesForSelectedPiece(\r\n      currentBoardForDisplay\r\n    );\r\n    const specialMoves = availableSpecialMovesForSelectedPiece(\r\n      currentBoardForDisplay\r\n    );\r\n    const checkStatus = getCheckStatusForColour(currentPlayerColour, squares);\r\n    const isReversed = board.reverseBoard && !isWhitesTurn(moves.length);\r\n\r\n    return (\r\n      <Board\r\n        {...props}\r\n        {...currentBoardForDisplay}\r\n        currentPlayerColour={currentPlayerColour}\r\n        nextMove={nextMove}\r\n        potentialMoves={potentialMoves}\r\n        specialMoves={specialMoves}\r\n        checkStatus={checkStatus}\r\n        isReversed={isReversed}\r\n        isReadOnly={isReadOnly}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeClass: state.theme.board,\r\n  board: state.board\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(\r\n  DragAndDropContext(BoardContainer)\r\n);\r\n","import React from 'react';\r\n\r\nimport Piece from 'components/piece/Piece';\r\n\r\nimport './graveyard.scss';\r\n\r\nconst Graveyard = ({ pieces }) => (\r\n  <div className=\"graveyard\">\r\n    {pieces.map((p, i) => <Piece key={i} {...p} />)}\r\n  </div>\r\n);\r\n\r\nexport default Graveyard;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Graveyard from 'components/graveyard/Graveyard';\r\n\r\nimport Constants from 'constants/index';\r\nimport { isWhitesTurn } from 'utils/game';\r\n\r\nconst DualGraveyards = ({ isReversed, whitePieces, blackPieces }) => (\r\n  <div id=\"paired-graveyards\">\r\n    <Graveyard pieces={isReversed ? blackPieces : whitePieces} />\r\n    <Graveyard pieces={isReversed ? whitePieces : blackPieces} />\r\n  </div>\r\n);\r\n\r\nconst getCurrentMovesForPlaybackPosition = state => {\r\n  const activeMoveIndex = state.board.playback.sliderPosition;\r\n  return state.board.moves.slice(0, activeMoveIndex);\r\n};\r\n\r\nconst getPiecesForColour = (state, colour) => {\r\n  const moves = getCurrentMovesForPlaybackPosition(state);\r\n  return state.board.graveyard.filter(\r\n    x =>\r\n      x.colour === colour &&\r\n      moves.some(y => y.captured && y.captured.id === x.id)\r\n  );\r\n};\r\n\r\nconst resolveBoardDirection = state => {\r\n  const moves = getCurrentMovesForPlaybackPosition(state);\r\n  return state.board.reverseBoard && !isWhitesTurn(moves.length);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isReversed: resolveBoardDirection(state),\r\n  whitePieces: getPiecesForColour(state, Constants.Strings.colours.white),\r\n  blackPieces: getPiecesForColour(state, Constants.Strings.colours.black)\r\n});\r\n\r\nexport default connect(mapStateToProps)(DualGraveyards);\r\n","import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport './moveList.scss';\r\n\r\nconst MoveItem = ({ pgn, isActive, onClick }) => (\r\n  <li className={classNames({ active: isActive })}>\r\n    <button\r\n      type=\"button\"\r\n      className=\"button\"\r\n      disabled={isActive}\r\n      onClick={onClick}\r\n    >\r\n      {pgn}\r\n    </button>\r\n  </li>\r\n);\r\n\r\nconst MoveList = ({ moves, activeMoveIndex, ...props }) => {\r\n  return (\r\n    <div id=\"move-list\">\r\n      <ul className=\"list column two\">\r\n        <li key=\"WHITE\" className=\"title\">\r\n          {Strings.colours.white}\r\n        </li>\r\n        <li key=\"BLACK\" className=\"title\">\r\n          {Strings.colours.black}\r\n        </li>\r\n        {moves.map((move, i) => {\r\n          const onClick = !!props.onSelect\r\n            ? () => props.onSelect('PLACEHOLDER NAME', i)\r\n            : () => null;\r\n          return (\r\n            <MoveItem\r\n              key={move.id}\r\n              isActive={i === activeMoveIndex}\r\n              onClick={onClick}\r\n              {...move}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoveList.propTypes = {\r\n  moves: PropTypes.arrayOf(PropTypes.object),\r\n  activeMoveIndex: PropTypes.number,\r\n  onSelect: PropTypes.func\r\n};\r\n\r\nexport default MoveList;\r\n","import { connect } from 'react-redux';\r\n\r\nimport MoveList from 'components/moveList/MoveList';\r\n\r\nimport { updateSlidePosition } from 'actions/playback';\r\nimport { mapMovesToPGN } from 'utils/pgn';\r\n\r\nconst mapStateToProps = state => ({\r\n  moves: mapMovesToPGN(state.board.moves),\r\n  activeMoveIndex: state.board.playback.sliderPosition\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onSelect: updateSlidePosition\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveList);\r\n","export default {\r\n  play: '\\u25B6',\r\n  pause: '\\u2223\\u2223',\r\n  back: '\\u2039',\r\n  forward: '\\u203A'\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nimport Icons from 'constants/icons';\r\nimport { SLIDER_START } from 'constants/slider';\r\nimport './playback.scss';\r\n\r\nconst PlaybackButton = ({ className, ...props }) => (\r\n  <button\r\n    type=\"button\"\r\n    className={classNames('button-icon ripple playback-button', className)}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst STEP_FORWARD = 1;\r\nconst STEP_BACK = -1;\r\n\r\nclass Playback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPlaying: false\r\n    };\r\n    this.timer = null;\r\n    this.previousPosition = null;\r\n\r\n    this.handleTogglePlay = this.handleTogglePlay.bind(this);\r\n    this.createSliderStepHandler = this.createSliderStepHandler.bind(this);\r\n    this.handleSliderChange = this.handleSliderChange.bind(this);\r\n  }\r\n\r\n  handleTogglePlay() {\r\n    this.setState(\r\n      (prev) => ({ isPlaying: !prev.isPlaying }),\r\n      () => {\r\n        clearInterval(this.timer);\r\n        if (!this.state.isPlaying) {\r\n          return;\r\n        }\r\n\r\n        if (this.props.sliderPosition === this.props.sliderMaximum) {\r\n          this.props.actions.onSlide(this.props.name, SLIDER_START);\r\n        }\r\n\r\n        this.timer = setInterval(() => {\r\n          if (this.previousPosition === this.props.sliderMaximum) {\r\n            return this.stopPlaying();\r\n          }\r\n\r\n          this.previousPosition = this.props.sliderPosition;\r\n          this.props.actions.onStepForward(this.props.name, STEP_FORWARD);\r\n        }, this.props.playbackInterval);\r\n      }\r\n    );\r\n  }\r\n\r\n  stopPlaying() {\r\n    clearInterval(this.timer);\r\n    this.previousPosition = null;\r\n    this.setState({ isPlaying: false });\r\n  }\r\n\r\n  createSliderStepHandler(stepDirection) {\r\n    const handler =\r\n      stepDirection === STEP_FORWARD\r\n        ? this.props.actions.onStepForward\r\n        : this.props.actions.onStepBack;\r\n    return () => handler(this.props.name, stepDirection);\r\n  }\r\n\r\n  handleSliderChange(event) {\r\n    const { name, value } = event.target;\r\n    this.props.actions.onSlide(name, Number(value));\r\n  }\r\n\r\n  render() {\r\n    const { isPlaying } = this.state;\r\n    const {\r\n      name,\r\n      isDisabled,\r\n      isHidden,\r\n      sliderPosition,\r\n      sliderMaximum\r\n    } = this.props;\r\n\r\n    if (isHidden) {\r\n      return null;\r\n    }\r\n\r\n    const AT_THE_START = sliderPosition === SLIDER_START;\r\n    const AT_THE_END = sliderPosition === sliderMaximum;\r\n    const width = sliderPosition / sliderMaximum * 100;\r\n    const toggleData = isPlaying\r\n      ? { icon: Icons.pause, 'aria-label': 'Pause playback' }\r\n      : { icon: Icons.play, 'aria-label': 'Start playback' };\r\n\r\n    const sliderStyle = {\r\n      backgroundImage: `linear-gradient(90deg, currentcolor, currentcolor ${width}%, transparent ${width}%)`\r\n    };\r\n\r\n    return (\r\n      <div id=\"playback-control\">\r\n        <div className=\"button-group\">\r\n          <PlaybackButton\r\n            className=\"playback-toggle-play\"\r\n            {...toggleData}\r\n            onClick={this.handleTogglePlay}\r\n            disabled={isDisabled}\r\n          />\r\n        </div>\r\n        <div id=\"playback-progress-container\" className=\"range-slider\">\r\n          <input\r\n            type=\"range\"\r\n            name={name}\r\n            aria-label=\"playback slider\"\r\n            style={sliderStyle}\r\n            value={sliderPosition}\r\n            max={sliderMaximum}\r\n            disabled={isDisabled}\r\n            onChange={this.handleSliderChange}\r\n          />\r\n        </div>\r\n        <div className=\"button-group\">\r\n          <PlaybackButton\r\n            className=\"playback-back\"\r\n            aria-label=\"Move playback backward a step\"\r\n            icon={Icons.back}\r\n            onClick={this.createSliderStepHandler(STEP_BACK)}\r\n            disabled={AT_THE_START || isDisabled}\r\n          />\r\n          <PlaybackButton\r\n            className=\"playback-forward\"\r\n            aria-label=\"Move playback forward a step\"\r\n            icon={Icons.forward}\r\n            onClick={this.createSliderStepHandler(STEP_FORWARD)}\r\n            disabled={AT_THE_END || isDisabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPlayback.defaultProps = {\r\n  name: 'slider',\r\n  sliderMaximum: 100,\r\n  playbackInterval: 1000,\r\n  isDisabled: false,\r\n  isHidden: false\r\n};\r\n\r\nPlayback.propTypes = {\r\n  name: PropTypes.string,\r\n  sliderMaximum: PropTypes.number,\r\n  playbackInterval: PropTypes.number,\r\n  isDisabled: PropTypes.bool,\r\n  isHidden: PropTypes.bool,\r\n  sliderPosition: PropTypes.number.isRequired,\r\n  actions: PropTypes.shape({\r\n    onSlide: PropTypes.func.isRequired,\r\n    onStepForward: PropTypes.func.isRequired,\r\n    onStepBack: PropTypes.func.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default Playback;\r\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Playback from 'components/playback/Playback';\r\nimport * as actions from 'actions/playback';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.board.playback,\r\n  isDisabled: state.board.moves.length < 2\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(\r\n    {\r\n      onSlide: actions.updateSlidePosition,\r\n      onStepForward: actions.stepSliderForward,\r\n      onStepBack: actions.stepSliderBack\r\n    },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Playback);\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst MAX_WIDTH_FALLBACK = '525px';\r\n\r\nconst AccountFor = {\r\n  header: 50,\r\n  actions: 45,\r\n  status: 52,\r\n  playback: 62\r\n};\r\n\r\nexport default class MaintainAspectRatio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: MAX_WIDTH_FALLBACK,\r\n      height: MAX_WIDTH_FALLBACK\r\n    };\r\n    this.wrappedComponent = React.createRef();\r\n\r\n    this.onResize = this.onResize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n    this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize(e) {\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => {\r\n      const el = this.wrappedComponent.current;\r\n      const rawValue = Math.min(el.clientHeight, el.clientWidth);\r\n      const value = Object.keys(AccountFor).reduce(\r\n        (p, c) => p - AccountFor[c],\r\n        rawValue\r\n      );\r\n      // const { width, height } = el.getBoundingClientRect();\r\n      // console.group(\"resize\")\r\n      // console.log(\"client > \", el.clientWidth, el.clientHeight)\r\n      // console.log(\"offset > \", el.offsetWidth, el.offsetHeight)\r\n      // console.log(\"bounding > \", width, height)\r\n      // console.groupEnd()\r\n      this.setState({\r\n        width: `${value}px`,\r\n        height: `${value}px`\r\n      });\r\n    }, 200);\r\n  }\r\n\r\n  render() {\r\n    return this.props.children(this.wrappedComponent, this.state);\r\n  }\r\n}\r\n\r\nMaintainAspectRatio.propTypes = {\r\n  children: PropTypes.func.isRequired\r\n};\r\n\r\nexport function withMaintainAspectRatio(WrappedComponent) {\r\n  return class extends React.Component {\r\n    render() {\r\n      return (\r\n        <MaintainAspectRatio>\r\n          {(ref, values) => <WrappedComponent ref={ref} {...this.props} />}\r\n        </MaintainAspectRatio>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst GameAction = ({ children, ...props }) => (\r\n  <button type=\"button\" className=\"button ripple primary\" {...props}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default GameAction;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Portal from 'components/Portal';\r\nimport GameAction from 'components/GameAction';\r\n\r\nimport Options, { NewGameOptions as GG } from 'constants/new-game-options';\r\n\r\nimport './newGameOptions.scss';\r\n\r\nconst NewGameOptions = ({ display, targetSelector, onSelect }) => {\r\n  if (!display) return null;\r\n  console.log(Options, GG);\r\n  return (\r\n    <Portal targetSelector={targetSelector}>\r\n      <div className=\"game-options\">\r\n        <p>Select game type</p>\r\n        <ul className=\"list column one\">\r\n          {Options.map((o) => (\r\n            <li key={o.id}>\r\n              <GameAction onClick={() => onSelect(o.id)}>{o.text}</GameAction>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nNewGameOptions.propTypes = {\r\n  targetSelector: PropTypes.string.isRequired,\r\n  display: PropTypes.bool,\r\n  onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NewGameOptions;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Board from './Board';\r\nimport Graveyard from './Graveyard';\r\nimport MoveList from './MoveList';\r\nimport Playback from './Playback';\r\nimport MaintainAspectRatio from './MaintainAspectRatio';\r\nimport GameAction from 'components/GameAction';\r\nimport NewGameOptions from 'components/newGameOptions';\r\n\r\nimport { resetBoard, importGame, saveGame, loadGame } from 'actions/board';\r\nimport { exportPGNForMoves } from 'utils/exportImport';\r\n\r\nconst ACTIONS_ID = 'chess-game-actions';\r\n\r\nclass ChessGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isStartingNewGame: false\r\n    };\r\n\r\n    this.fileSelector = React.createRef();\r\n    this.handleImport = this.handleImport.bind(this);\r\n    this.handleNewGame = this.handleNewGame.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.actions.loadGame();\r\n  }\r\n\r\n  async handleImport(event) {\r\n    const file = event.target.files && event.target.files[0];\r\n    if (!file) return;\r\n    const fileText = await new Response(file).text();\r\n    this.props.actions.importGame(fileText);\r\n  }\r\n\r\n  handleNewGame(option) {\r\n    if (!this.state.isStartingNewGame) {\r\n      this.setState({ isStartingNewGame: true });\r\n    } else {\r\n      this.setState({ isStartingNewGame: false }, () =>\r\n        this.props.actions.resetBoard(option)\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { moves, vsComputer, actions } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MoveList />\r\n        <div id={ACTIONS_ID} className=\"button-group right\">\r\n          <GameAction id=\"new-game\" onClick={this.handleNewGame}>\r\n            New Game\r\n          </GameAction>\r\n          <GameAction id=\"save-game\" onClick={actions.saveGame}>\r\n            Save Game\r\n          </GameAction>\r\n          <GameAction\r\n            id=\"export-game\"\r\n            onClick={() => exportPGNForMoves(moves, vsComputer)}\r\n          >\r\n            Export\r\n          </GameAction>\r\n          <label\r\n            id=\"import-game\"\r\n            role=\"button\"\r\n            className=\"button ripple primary\"\r\n          >\r\n            Import\r\n            <input\r\n              ref={this.fileSelector}\r\n              type=\"file\"\r\n              accept=\".pgn\"\r\n              onChange={this.handleImport}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div id=\"chess-game\" ref={this.getGameContainer}>\r\n          <MaintainAspectRatio>\r\n            {(ref, style) => (\r\n              <div ref={ref} className=\"left-column\">\r\n                <div id=\"chess-game-status\" />\r\n                <Board style={style} />\r\n                <Playback />\r\n              </div>\r\n            )}\r\n          </MaintainAspectRatio>\r\n          <div className=\"right-column\">\r\n            <Graveyard />\r\n          </div>\r\n        </div>\r\n        <NewGameOptions\r\n          targetSelector={`#${ACTIONS_ID}`}\r\n          display={this.state.isStartingNewGame}\r\n          onSelect={this.handleNewGame}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  moves: state.board.moves,\r\n  vsComputer: state.board.vsComputer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators(\r\n    { resetBoard, importGame, saveGame, loadGame },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChessGame);\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ConnectedRouter } from 'react-router-redux';\r\n\r\nimport App from 'containers/App';\r\nimport ChessGame from 'containers/ChessGame';\r\n\r\nimport { Paths } from 'constants/paths';\r\n\r\nconst SatsukiRoutes = ({ match }) => (\r\n  <Switch>\r\n    <Route exact path={match.path} component={ChessGame} />\r\n  </Switch>\r\n);\r\n\r\nconst Routes = ({ history }) => (\r\n  <ConnectedRouter history={history}>\r\n    <App>\r\n      <Switch>\r\n        <Redirect exact from=\"/\" to={Paths.base} />\r\n        <Route path={Paths.base} component={SatsukiRoutes} />\r\n\r\n        <Route path=\"*\" render={() => <div>Page not found</div>} />\r\n      </Switch>\r\n    </App>\r\n  </ConnectedRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const getSquare = n => document.getElementById(n);\r\nconst selectSquare = n =>\r\n  (getSquare(n) || { click: () => console.log('nothing to click') }).click();\r\nconst moveFromSquareToSquare = async (n, m) => {\r\n  await selectSquare(n);\r\n  await selectSquare(m);\r\n};\r\n\r\nconst prepareBoard = arr => moveFromSquareToSquare(...arr);\r\nconst makeMoves = arr => {\r\n  const move = arr.pop();\r\n  if (!move) return console.log('board ready');\r\n\r\n  let timer;\r\n  clearTimeout(timer);\r\n  timer = setTimeout(() => {\r\n    prepareBoard(move);\r\n    makeMoves(arr);\r\n  }, 200);\r\n};\r\n\r\n// fastest checkmate\r\nlet fastestGame = [[53, 37], [12, 28], [54, 38], [3, 39]].reverse();\r\n\r\n// check - evade with [54, 46]\r\nlet check = [[53, 45], [12, 28], [45, 37], [3, 39]].reverse();\r\n\r\n// castling tests\r\nlet castling = [\r\n  [53, 37],\r\n  [8, 16],\r\n  [54, 38],\r\n  [9, 17],\r\n  [61, 47],\r\n  [10, 18],\r\n  [62, 45],\r\n  [11, 19],\r\n  [60] // 62\r\n].reverse();\r\n\r\n// en passant test\r\nlet enPassant = [[51, 35], [8, 16], [35, 27], [12, 28], [27]].reverse(); // 20\r\n\r\n// promotion tests\r\nlet promotion = [\r\n  [54, 38],\r\n  [15, 31],\r\n  [38, 31],\r\n  [7, 23],\r\n  [53, 45],\r\n  [23, 22],\r\n  [31, 23],\r\n  [22, 21],\r\n  [23, 15],\r\n  [21, 20],\r\n  [15] // 7\r\n].reverse();\r\n\r\n// ambiguous movement tests\r\nlet ambiguous = [[50, 34], [11, 27], [52, 36], [8, 16], [34, 27]].reverse();\r\n\r\nexport default {\r\n  selectSquare,\r\n  moveFromSquareToSquare,\r\n  makeMoves,\r\n  movesFor: {\r\n    fastestGame,\r\n    check,\r\n    castling,\r\n    enPassant,\r\n    promotion\r\n  },\r\n  examples: {\r\n    fastestGame: () => makeMoves(fastestGame),\r\n    check: () => makeMoves(check),\r\n    promotion: () => makeMoves(promotion),\r\n    enPassant: () => makeMoves(enPassant),\r\n    castling: () => makeMoves(castling),\r\n    ambiguous: () => makeMoves(ambiguous)\r\n  },\r\n  actions: {\r\n    newGame: () => document.getElementById('new-game').click(),\r\n    saveGame: () => document.getElementById('save-game').click(),\r\n    export: () => document.getElementById('export-game').click(),\r\n    import: () => document.getElementById('import-game').click()\r\n  },\r\n  playback: {\r\n    togglePlay: () =>\r\n      document.querySelector('.playback-button.playback-toggle-play').click(),\r\n    forward: () =>\r\n      document.querySelector('.playback-button.playback-forward').click(),\r\n    back: () => document.querySelector('.playback-button.playback-back').click()\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport configureStore from './store/configureStore';\r\n\r\nimport Routes from './Routes';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport AutomateBoard from './programmatic-board-moves';\r\nimport Engine from 'utils/engine';\r\nimport './styles/index.scss';\r\n\r\nwindow.Engine = Engine;\r\nwindow.AutomateBoard = AutomateBoard;\r\n\r\nconst history = createHistory();\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Routes history={history} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n","export function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    } else {\r\n      return state;\r\n    }\r\n  };\r\n}\r\n","import { SET_APP_THEME, SET_BOARD_THEME } from 'actions/theme';\r\nimport Constants from 'constants/index';\r\nimport { getUserSettings, persistUserSettings } from 'utils/common';\r\nimport { createReducer } from './utils';\r\n\r\nconst getUserTheme = () => {\r\n  const settings = getUserSettings();\r\n  if (!settings || !settings.theme)\r\n    return {\r\n      app: Constants.themes[0].class,\r\n      board: Constants.boardThemes[0].class\r\n    };\r\n  return settings.theme;\r\n};\r\n\r\nconst persistUserThemeChoice = themeType => (state, action) => {\r\n  const updatedSettings = persistUserSettings({\r\n    theme: { ...state, [themeType]: action.theme }\r\n  });\r\n  return updatedSettings.theme;\r\n};\r\n\r\nconst theme = createReducer(getUserTheme(), {\r\n  [SET_APP_THEME]: persistUserThemeChoice('app'),\r\n  [SET_BOARD_THEME]: persistUserThemeChoice('board')\r\n});\r\n\r\nexport default theme;\r\n","import Strings from 'constants/strings';\r\n\r\nimport { mapPieceToNewPiece } from 'utils/mappers';\r\nimport performMovementFromCurrentToTarget, {\r\n  performRookMovementForCastling,\r\n  updateBoardToRemovePassedPawn\r\n} from 'utils/squaresUpdate';\r\n\r\nfunction specialMoveSubReducer(state, action) {\r\n  const { type, squareId: targetSquareId } = action.specialMove;\r\n  if (type === Strings.specialMoves.promotionSelection)\r\n    return { ...state, promotionAt: action.specialMove };\r\n\r\n  const postPieceMovementToTargetState = performMovementFromCurrentToTarget(\r\n    state,\r\n    state.selectedSquareId,\r\n    action.specialMove.squareId,\r\n    action.specialMove\r\n  );\r\n  switch (type) {\r\n    case Strings.specialMoves.promotion: {\r\n      const promotionIndex = postPieceMovementToTargetState.squares.findIndex(\r\n        x => x.id === targetSquareId\r\n      );\r\n      const squares = mapPieceToNewPiece(\r\n        postPieceMovementToTargetState.squares,\r\n        promotionIndex,\r\n        {\r\n          name: action.specialMove.promoteTo\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...postPieceMovementToTargetState,\r\n        squares,\r\n        promotionAt: null\r\n      };\r\n    }\r\n    case Strings.specialMoves.enPassant: {\r\n      return updateBoardToRemovePassedPawn(\r\n        postPieceMovementToTargetState,\r\n        targetSquareId\r\n      );\r\n    }\r\n    case Strings.specialMoves.castling: {\r\n      const squares = performRookMovementForCastling(\r\n        postPieceMovementToTargetState.squares,\r\n        targetSquareId\r\n      );\r\n      return {\r\n        ...postPieceMovementToTargetState,\r\n        squares\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default specialMoveSubReducer;\r\n","import {\r\n  PLAYBACK_UPDATE_SLIDE_POSITION,\r\n  PLAYBACK_STEP_FORWARD,\r\n  PLAYBACK_STEP_BACK\r\n} from 'actions/playback';\r\nimport { resolveSliderValue } from 'utils/playback';\r\n\r\nexport const PLAYBACK_STARTING_VALUE = 0;\r\nexport const getPlaybackInitialState = n => ({\r\n  sliderMaximum: n,\r\n  sliderPosition: n\r\n});\r\n\r\nfunction handlePlaybackStep(state, action) {\r\n  const sliderPosition = resolveSliderValue(\r\n    state.playback.sliderPosition + action.stepDirection,\r\n    state.playback.sliderMaximum\r\n  );\r\n  return {\r\n    ...state,\r\n    playback: {\r\n      ...state.playback,\r\n      sliderPosition\r\n    }\r\n  };\r\n}\r\n\r\nfunction playbackSubReducer(state, action) {\r\n  switch (action.type) {\r\n    case PLAYBACK_UPDATE_SLIDE_POSITION: {\r\n      const sliderPosition = action.sliderValue;\r\n      return {\r\n        ...state,\r\n        playback: {\r\n          ...state.playback,\r\n          sliderPosition\r\n        }\r\n      };\r\n    }\r\n    case PLAYBACK_STEP_FORWARD:\r\n      return handlePlaybackStep(state, action);\r\n    case PLAYBACK_STEP_BACK:\r\n      return handlePlaybackStep(state, action);\r\n    default:\r\n      return {\r\n        ...state,\r\n        playback: getPlaybackInitialState(PLAYBACK_STARTING_VALUE)\r\n      };\r\n  }\r\n}\r\n\r\nexport default playbackSubReducer;\r\n","import Strings from 'constants/strings';\r\n\r\nimport { isValidMove, isValidTake } from 'utils/game';\r\nimport { importPGNFromFile } from 'utils/exportImport';\r\nimport {\r\n  mapPieceToMovedPiece,\r\n  mapPieceToNewSquare,\r\n  mapSquaresToMove\r\n} from 'utils/mappers';\r\nimport {\r\n  performRookMovementForCastling,\r\n  updateBoardToRemovePassedPawn\r\n} from 'utils/squaresUpdate';\r\nimport { processPGNToMove } from 'utils/pgn';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\n\r\nfunction canDoSpecialMove(state, move, square) {\r\n  if (!move.specialMove) return false;\r\n\r\n  const specialMovesPieceCanDo = availableSpecialMovesForSelectedPiece({\r\n    ...state,\r\n    selectedSquareId: square.id\r\n  });\r\n  const containsTheMatchingMove = specialMovesPieceCanDo.some(\r\n    (x) => x.type === move.specialMove.type\r\n  );\r\n  return containsTheMatchingMove;\r\n}\r\n\r\nfunction importSubReducer(cleanState, action) {\r\n  const { fileText } = action;\r\n  const data = importPGNFromFile(fileText);\r\n  const processedMoves = data.pgnMoves.map(processPGNToMove);\r\n\r\n  return processedMoves.reduce((p, move) => {\r\n    const toIndex = p.squares.findIndex(\r\n      (x) => x.file === move.to.file && x.rank === move.to.rank\r\n    );\r\n    const to = { ...p.squares[toIndex] };\r\n    const toHasPiece = !!to && !!to.contains;\r\n    const captured = toHasPiece ? { ...to.contains } : null;\r\n    const func = toHasPiece ? isValidTake : isValidMove;\r\n\r\n    const from = p.squares.find(\r\n      (x) =>\r\n        (!move.from ||\r\n          (move.from &&\r\n            x.file === move.from.file &&\r\n            (!move.from.rank || x.rank === move.from.rank))) &&\r\n        x.contains &&\r\n        x.contains.colour === move.piece.colour &&\r\n        x.contains.name === move.piece.name &&\r\n        (func(x, to, p.squares) || canDoSpecialMove(p, move, x))\r\n    );\r\n\r\n    const movingPiece = mapPieceToMovedPiece(from.contains);\r\n    let squares = mapPieceToNewSquare(p.squares, toIndex, {\r\n      ...from,\r\n      contains: movingPiece\r\n    });\r\n\r\n    const specialMove = move.specialMove\r\n      ? { ...move.specialMove, squareId: to.id }\r\n      : null;\r\n    const isCastling =\r\n      move.specialMove &&\r\n      move.specialMove.type === Strings.specialMoves.castling;\r\n    const isEnPassant =\r\n      move.specialMove &&\r\n      move.specialMove.type === Strings.specialMoves.enPassant;\r\n\r\n    squares = !isCastling\r\n      ? squares\r\n      : performRookMovementForCastling(squares, to.id);\r\n\r\n    const newState = {\r\n      ...p,\r\n      squares,\r\n      graveyard: [...p.graveyard, captured].filter((x) => !!x),\r\n      moves: [\r\n        ...p.moves,\r\n        mapSquaresToMove(from, squares[toIndex], squares, captured, specialMove)\r\n      ],\r\n      vsComputer: data.vsComputer\r\n    };\r\n\r\n    return !isEnPassant\r\n      ? newState\r\n      : updateBoardToRemovePassedPawn(newState, to.id);\r\n  }, cleanState);\r\n}\r\n\r\nexport default importSubReducer;\r\n","import { createReducer } from './utils';\r\nimport { compose, getSavedGame, persistChessGame } from 'utils/common';\r\nimport { buildStartingBoard } from 'utils/board';\r\nimport performMovementFromCurrentToTarget from 'utils/squaresUpdate';\r\nimport upgradeSavedGameState from 'utils/state';\r\nimport toaster from 'utils/toaster';\r\n\r\nimport {\r\n  BOARD_SELECT_SQUARE,\r\n  BOARD_MOVE_PIECE,\r\n  BOARD_TAKE_PIECE,\r\n  BOARD_SPECIAL_MOVE,\r\n  BOARD_RESET,\r\n  BOARD_IMPORT_GAME,\r\n  BOARD_SAVE_GAME,\r\n  BOARD_LOAD_GAME,\r\n  BOARD_TOGGLE_REVERSE\r\n} from 'actions/board';\r\nimport {\r\n  PLAYBACK_UPDATE_SLIDE_POSITION,\r\n  PLAYBACK_STEP_FORWARD,\r\n  PLAYBACK_STEP_BACK\r\n} from 'actions/playback';\r\nimport specialMoveSubReducer from './board-specialMove';\r\nimport playbackSubReducer, {\r\n  PLAYBACK_STARTING_VALUE,\r\n  getPlaybackInitialState\r\n} from './board-playback';\r\nimport importSubReducer from './board-import';\r\nimport { BOARD_COMPUTER_MOVE } from '../actions/board';\r\n\r\nimport { NewGameOptions } from 'constants/new-game-options';\r\n\r\nconst initialState = {\r\n  reverseBoard: false,\r\n  graveyard: [],\r\n  moves: [],\r\n  squares: buildStartingBoard(),\r\n  selectedSquareId: null,\r\n  promotionAt: null,\r\n  playback: getPlaybackInitialState(PLAYBACK_STARTING_VALUE),\r\n  vsComputer: {\r\n    isComputer: true,\r\n    isComputerBlack: true\r\n  }\r\n};\r\n\r\nconst setSelectedSquareId = (state, action) => ({\r\n  ...state,\r\n  selectedSquareId: action.squareId\r\n});\r\n\r\nconst updateSlideMaximum = (state) => ({\r\n  ...state,\r\n  playback: getPlaybackInitialState(state.moves.length)\r\n});\r\n\r\nconst handlePieceMovement = (state, action) =>\r\n  performMovementFromCurrentToTarget(\r\n    state,\r\n    state.selectedSquareId,\r\n    action.targetSquareId\r\n  );\r\n\r\nconst handleImport = (freshState) => (state, action) =>\r\n  importSubReducer(freshState, action);\r\n\r\nconst composedPieceMovement = compose(updateSlideMaximum, handlePieceMovement);\r\nconst composedSpecialMove = compose(updateSlideMaximum, specialMoveSubReducer);\r\nconst composedImport = compose(updateSlideMaximum, handleImport(initialState));\r\n\r\nconst board = createReducer(initialState, {\r\n  [BOARD_SELECT_SQUARE]: setSelectedSquareId,\r\n  [BOARD_MOVE_PIECE]: composedPieceMovement,\r\n  [BOARD_TAKE_PIECE]: composedPieceMovement,\r\n  [BOARD_SPECIAL_MOVE]: composedSpecialMove,\r\n  [PLAYBACK_UPDATE_SLIDE_POSITION]: playbackSubReducer,\r\n  [PLAYBACK_STEP_FORWARD]: playbackSubReducer,\r\n  [PLAYBACK_STEP_BACK]: playbackSubReducer,\r\n  [BOARD_IMPORT_GAME]: composedImport,\r\n  [BOARD_RESET]: (state, action) => {\r\n    const { option } = action;\r\n    if (option === NewGameOptions.vsComputerYouBlack)\r\n      return {\r\n        ...initialState,\r\n        vsComputer: { ...initialState.vsComputer, isComputerBlack: false }\r\n      };\r\n    if (option === NewGameOptions.vsPlayer)\r\n      return {\r\n        ...initialState,\r\n        vsComputer: { ...initialState.vsComputer, isComputer: false }\r\n      };\r\n\r\n    return initialState;\r\n  },\r\n  [BOARD_SAVE_GAME]: (state) => {\r\n    const newState = persistChessGame(state);\r\n    toaster.success('Saved Game');\r\n    return newState;\r\n  },\r\n  [BOARD_LOAD_GAME]: (state) => {\r\n    const savedGame = getSavedGame();\r\n    if (!savedGame) return state;\r\n\r\n    toaster.success('Loaded Game');\r\n    return upgradeSavedGameState(savedGame);\r\n  },\r\n  [BOARD_TOGGLE_REVERSE]: (state) => ({\r\n    ...state,\r\n    reverseBoard: !state.reverseBoard\r\n  }),\r\n  [BOARD_COMPUTER_MOVE]: (state, action) => {\r\n    const { fromId, toId } = action.move;\r\n    const midState = setSelectedSquareId(state, { squareId: fromId });\r\n    return composedPieceMovement(midState, { targetSquareId: toId });\r\n  }\r\n});\r\n\r\nexport default board;\r\n","export default function upgradeSavedGameState(state) {\r\n  let upgradedState = { ...state };\r\n\r\n  if (!state.hasOwnProperty('vsComputer')) {\r\n    upgradedState = {\r\n      ...upgradedState,\r\n      vsComputer: {\r\n        isComputer: false,\r\n        isComputerBlack: true\r\n      }\r\n    };\r\n  }\r\n\r\n  return upgradedState;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { routerReducer as routing } from 'react-router-redux';\r\n\r\nimport theme from './theme';\r\nimport board from './board';\r\n\r\nconst rootReducer = combineReducers({\r\n  routing,\r\n  theme,\r\n  board\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport rootReducer from 'reducers/index';\r\n\r\nconst configureStore = (history, preloadedState) =>\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(routerMiddleware(history))\r\n  );\r\n\r\nexport default configureStore;\r\n","import { Paths } from './paths';\r\nimport Strings from './strings';\r\nimport * as board from './board';\r\n\r\nconst Constants = {\r\n  Paths,\r\n  Strings,\r\n  themes: [\r\n    { name: 'Junketsu', class: 'theme-one' },\r\n    { name: 'Senketsu', class: 'theme-two' }\r\n  ],\r\n  boardThemes: [\r\n    { name: 'Standard', class: 'board-one' },\r\n    { name: 'Desert', class: 'board-two' },\r\n    { name: 'Forest', class: 'board-three' }\r\n  ],\r\n  ...board\r\n};\r\n\r\nexport default Constants;\r\n","export const Paths = {\r\n  base: '/satsuki-junketsu'\r\n};\r\n","const options = Object.freeze([\r\n  { id: 1, text: 'vs Computer (You as White)' },\r\n  { id: 2, text: 'vs Computer (You as Black)' },\r\n  { id: 3, text: 'vs Player' }\r\n]);\r\n\r\nexport default options;\r\n\r\nexport const NewGameOptions = Object.freeze(\r\n  options.reduce((p, c) => {\r\n    const key = c.text.replace(/\\(|\\)| |as/g, '');\r\n\r\n    return {\r\n      ...p,\r\n      [key]: c.id\r\n    };\r\n  }, {})\r\n);\r\n","import Strings from 'constants/strings';\r\nimport * as Regexes from 'constants/regex';\r\n\r\nimport { isWhitesTurn } from 'utils/game';\r\nimport { generateUniqueId } from 'utils/common';\r\n\r\nconst KING_SIDE_CASTLE = 'g';\r\n\r\nfunction generatePortableGameNotationForMove(item) {\r\n  const id = generateUniqueId();\r\n  let pgn = '';\r\n  if (\r\n    item.specialMove &&\r\n    item.specialMove.type === Strings.specialMoves.castling\r\n  ) {\r\n    const isKingSide = item.to.file === KING_SIDE_CASTLE;\r\n    return {\r\n      id,\r\n      pgn: isKingSide ? Strings.pgn.castle.king : Strings.pgn.castle.queen\r\n    };\r\n  }\r\n  pgn += Strings.pgn.piece[item.piece.name];\r\n  if (item.isAmbiguous) pgn += `${item.from.file}`;\r\n  if (item.captured) pgn += `${Strings.pgn.capture}`;\r\n  pgn += `${item.to.file}${item.to.rank}`;\r\n  if (\r\n    item.specialMove &&\r\n    item.specialMove.type === Strings.specialMoves.promotion\r\n  ) {\r\n    pgn += `${Strings.pgn.promotion}${Strings.pgn.piece[\r\n      item.specialMove.promoteTo\r\n    ] || ''}`;\r\n  }\r\n  if (\r\n    item.specialMove &&\r\n    item.specialMove.type === Strings.specialMoves.enPassant\r\n  ) {\r\n    pgn += `${Strings.pgn.enPassant}`;\r\n  }\r\n  const { isCheck, isCheckmate } = item.checkStatus;\r\n  if (!isCheckmate && isCheck) pgn += Strings.pgn.check;\r\n  if (isCheckmate) pgn += Strings.pgn.checkmate;\r\n  return {\r\n    id,\r\n    pgn\r\n  };\r\n}\r\n\r\nexport const mapMovesToPGN = arr =>\r\n  arr.map(generatePortableGameNotationForMove);\r\n\r\n/* Above, generating pgn from board state\r\n * Below, importing pgn, using it to create moves.\r\n */\r\n\r\nconst getKeyForFirstLetter = l => {\r\n  const keys = Object.keys(Strings.pgn.piece);\r\n  return keys.find(x => Strings.pgn.piece[x] === l) || Strings.pieces.pawn;\r\n};\r\n\r\nconst isKingSideCastle = s => s.length === 3;\r\nconst resolveCastlingFromSquare = (pgnStr, isWhiteMove) => ({\r\n  file: 'e',\r\n  rank: isWhiteMove ? 1 : 8\r\n});\r\n\r\nfunction resolveCastlingToSquare(pgnStr, isWhiteMove) {\r\n  const rank = isWhiteMove ? 1 : 8;\r\n  return isKingSideCastle(pgnStr) ? { file: 'g', rank } : { file: 'c', rank };\r\n}\r\n\r\nfunction resolveSpecialMove(pgnStr) {\r\n  if (pgnStr === Strings.pgn.castle.king || pgnStr === Strings.pgn.castle.queen)\r\n    return { type: Strings.specialMoves.castling };\r\n\r\n  if (pgnStr.includes(Strings.pgn.promotion))\r\n    return {\r\n      type: Strings.specialMoves.promotion,\r\n      promoteTo: getKeyForFirstLetter(\r\n        pgnStr.replace(Regexes.MATCH_EVERYTHING_UPTO_EQUALS, '')\r\n      )\r\n    };\r\n\r\n  if (pgnStr.includes(Strings.pgn.enPassant))\r\n    return { type: Strings.specialMoves.enPassant };\r\n\r\n  return null;\r\n}\r\n\r\nfunction resolveFromSquare(pgnStr) {\r\n  const result = Regexes.MATCH_PGN_WITH_ADDITIONAL_FILE.exec(pgnStr);\r\n  if (!result) return null;\r\n  return { file: result[0].slice(0, 1) };\r\n}\r\n\r\nexport function processPGNToMove(pgnStr, index) {\r\n  const isWhiteMove = isWhitesTurn(index);\r\n  const colour = isWhiteMove ? Strings.colours.white : Strings.colours.black;\r\n  const capturedColour = !isWhiteMove\r\n    ? Strings.colours.white\r\n    : Strings.colours.black;\r\n\r\n  const specialMove = resolveSpecialMove(pgnStr);\r\n  const isCastling =\r\n    specialMove && specialMove.type === Strings.specialMoves.castling;\r\n\r\n  const name = getKeyForFirstLetter(pgnStr.slice(0, 1));\r\n  const piece = isCastling\r\n    ? { colour, name: Strings.pieces.king, hasMoved: true }\r\n    : { colour, name, hasMoved: true };\r\n\r\n  const [file, rank] = pgnStr\r\n    .replace(Regexes.MATCH_EVERYTHING_BEFORE_FILE_RANK_PAIR, '')\r\n    .split('');\r\n  const to = !isCastling\r\n    ? { file, rank: Number(rank) }\r\n    : resolveCastlingToSquare(pgnStr, isWhiteMove);\r\n\r\n  const from = isCastling\r\n    ? resolveCastlingFromSquare(pgnStr, isWhiteMove)\r\n    : resolveFromSquare(pgnStr);\r\n  const captured = pgnStr.includes('x') ? { colour: capturedColour } : null;\r\n\r\n  return {\r\n    from,\r\n    piece,\r\n    to,\r\n    isAmbiguous: !isCastling && !!from,\r\n    specialMove,\r\n    captured,\r\n    checkStatus: {\r\n      isCheck: pgnStr.includes('+'),\r\n      isCheckmate: pgnStr.includes('#')\r\n    }\r\n  };\r\n}\r\n","import Constants from 'constants/index';\r\n\r\nimport {\r\n  mapSquareIdToPromotion,\r\n  mapSquareIdToEnPassant,\r\n  mapSquareIdToCastling,\r\n  mapPieceToNewSquare\r\n} from './mappers';\r\nimport { possibleMovesForSelectedPiece, willResultInCheck } from './piece';\r\n\r\nconst { Strings } = Constants;\r\n\r\nconst BLACK_BACK_ROW = 8;\r\nconst BLACK_PAWN_ROW = 7;\r\nconst WHITE_PAWN_ROW = 2;\r\nconst WHITE_BACK_ROW = 1;\r\n\r\nfunction checkPawnPromotion(pawnSquare, squares) {\r\n  const colour = pawnSquare.contains.colour;\r\n  const targetRank =\r\n    colour === Strings.colours.white ? BLACK_BACK_ROW : WHITE_BACK_ROW;\r\n  if (Math.abs(pawnSquare.rank - targetRank) !== 1) return [];\r\n  return possibleMovesForSelectedPiece({\r\n    selectedSquareId: pawnSquare.id,\r\n    squares\r\n  }).map(mapSquareIdToPromotion);\r\n}\r\n\r\nfunction checkPawnEnPassant(pawnSquare, boardState) {\r\n  const { squares, moves } = boardState;\r\n  const [lastMove] = moves.slice(-1);\r\n  if (!lastMove) return [];\r\n  if (lastMove.piece.name !== Strings.pieces.pawn) return [];\r\n\r\n  const fromRank =\r\n    lastMove.piece.colour === Strings.colours.white\r\n      ? WHITE_PAWN_ROW\r\n      : BLACK_PAWN_ROW;\r\n\r\n  const direction =\r\n    pawnSquare.contains.colour === Strings.colours.white ? -1 : 1;\r\n  const twoRanksForward = fromRank + 2 * direction;\r\n\r\n  if (\r\n    lastMove.from.rank !== fromRank ||\r\n    lastMove.to.rank !== pawnSquare.rank ||\r\n    lastMove.to.rank !== twoRanksForward\r\n  )\r\n    return [];\r\n\r\n  const toIndex = Constants.files.findIndex((x) => x === lastMove.to.file);\r\n  const pawnIndex = Constants.files.findIndex((x) => x === pawnSquare.file);\r\n  if (Math.abs(toIndex - pawnIndex) !== 1) return [];\r\n\r\n  const targetSquare = squares.find(\r\n    (x) =>\r\n      x.file === lastMove.to.file && x.rank === lastMove.to.rank - direction\r\n  );\r\n  return [mapSquareIdToEnPassant(targetSquare.id)];\r\n}\r\n\r\nfunction pawnSpecialMoves(pawnSquare, boardState) {\r\n  return [\r\n    ...checkPawnPromotion(pawnSquare, boardState.squares),\r\n    ...checkPawnEnPassant(pawnSquare, boardState)\r\n  ];\r\n}\r\n\r\nfunction kingSpecialMoves(kingSquare, squares) {\r\n  if (kingSquare.contains.hasMoved) return [];\r\n  if (willResultInCheck(kingSquare, squares)) return [];\r\n  const rookSquares = squares.filter(\r\n    (x) =>\r\n      x.contains &&\r\n      x.contains.name === Strings.pieces.rook &&\r\n      x.contains.colour === kingSquare.contains.colour &&\r\n      !x.contains.hasMoved\r\n  );\r\n  if (!rookSquares.length) return [];\r\n  const kingId = kingSquare.id;\r\n  const targetSquares = rookSquares.reduce((p, sq) => {\r\n    const rookId = sq.id;\r\n    const [startId, endId] =\r\n      rookId < kingId ? [rookId, kingId] : [kingId, rookId];\r\n    const squareIds = Array.from(\r\n      new Array(endId - startId - 1),\r\n      (x, i) => 1 + i + startId\r\n    );\r\n    if (\r\n      !squares.filter((x) => squareIds.includes(x.id)).every((x) => !x.contains)\r\n    )\r\n      return p;\r\n\r\n    return squareIds.slice(0, 2).every((sqId) => {\r\n      const squareIndex = squares.findIndex((x) => x.id === sqId);\r\n      return !willResultInCheck(\r\n        kingSquare,\r\n        mapPieceToNewSquare(squares, squareIndex, kingSquare)\r\n      );\r\n    })\r\n      ? [...p, squareIds[1]]\r\n      : p;\r\n  }, []);\r\n\r\n  if (!targetSquares.length) return [];\r\n  return targetSquares.map(mapSquareIdToCastling);\r\n}\r\n\r\nfunction availableSpecialMovesForSelectedPiece(boardState) {\r\n  const { squares, selectedSquareId } = boardState;\r\n  const square = squares.find((x) => x.id === selectedSquareId);\r\n  if (!square) return [];\r\n\r\n  switch (square.contains.name) {\r\n    case Strings.pieces.pawn:\r\n      return pawnSpecialMoves(square, boardState);\r\n    case Strings.pieces.king:\r\n      return kingSpecialMoves(square, squares);\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nexport default availableSpecialMovesForSelectedPiece;\r\n","export const SET_APP_THEME = 'SET_APP_THEME';\r\nexport const setApplicationTheme = theme => ({\r\n  type: SET_APP_THEME,\r\n  theme\r\n});\r\n\r\nexport const SET_BOARD_THEME = 'SET_BOARD_THEME';\r\nexport const setBoardTheme = theme => ({\r\n  type: SET_BOARD_THEME,\r\n  theme\r\n});\r\n","export const files = Object.freeze(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']);\r\nexport const ranks = Object.freeze([8, 7, 6, 5, 4, 3, 2, 1]);\r\n","export const SLIDER_START = 0;\r\nexport const SLIDER_END = 100;\r\n","const INFO = 'INFO';\r\nconst SUCCESS = 'SUCCESS';\r\nconst ERROR = 'ERROR';\r\nconst WARNING = 'WARNING';\r\n\r\nclass ToasterService {\r\n  constructor() {\r\n    this.toaster = {};\r\n  }\r\n\r\n  register(toaster) {\r\n    this.toaster = toaster;\r\n  }\r\n\r\n  popToast(newToast) {\r\n    this.toaster.popToast(\r\n      Object.assign(\r\n        {},\r\n        {\r\n          time: Date.now(),\r\n          type: INFO,\r\n          title: 'Just so your aware',\r\n          message: 'This is the default toast text!'\r\n        },\r\n        newToast\r\n      )\r\n    );\r\n  }\r\n\r\n  info(title, message) {\r\n    this.popToast({ type: INFO, title, message });\r\n  }\r\n  success(title, message) {\r\n    this.popToast({ type: SUCCESS, title, message });\r\n  }\r\n  error(title, message) {\r\n    this.popToast({ type: ERROR, title, message });\r\n  }\r\n  warning(title, message) {\r\n    this.popToast({ type: WARNING, title, message });\r\n  }\r\n}\r\n\r\nconst toaster = new ToasterService();\r\nexport default toaster;\r\n","import Strings from 'constants/strings';\r\nimport { SLIDER_START } from 'constants/slider';\r\nimport { buildStartingBoard } from './board';\r\nimport {\r\n  mapPieceToMovedPiece,\r\n  mapPieceToNewSquare,\r\n  mapPieceToNewPiece\r\n} from './mappers';\r\nimport {\r\n  performRookMovementForCastling,\r\n  updateSquaresToRemovePassedPawn\r\n} from './squaresUpdate';\r\n\r\nexport const resolveSliderValue = (v, max) =>\r\n  v > max ? max : v < SLIDER_START ? SLIDER_START : v;\r\n\r\nexport const selectNextMoveSquareId = (moves, moveIndex) => {\r\n  const nextMove = moves[moveIndex];\r\n  if (!nextMove) return null;\r\n  return nextMove.from.id;\r\n};\r\n\r\nconst updateBoardUsingSpecialMove = (specialMove, squares) => {\r\n  const { type, squareId: targetSquareId } = specialMove;\r\n  switch (type) {\r\n    case Strings.specialMoves.castling:\r\n      return performRookMovementForCastling(squares, targetSquareId);\r\n    case Strings.specialMoves.enPassant:\r\n      return updateSquaresToRemovePassedPawn(squares, targetSquareId);\r\n    case Strings.specialMoves.promotion: {\r\n      const promotionIndex = squares.findIndex(x => x.id === targetSquareId);\r\n      return mapPieceToNewPiece(squares, promotionIndex, {\r\n        name: specialMove.promoteTo\r\n      });\r\n    }\r\n    default:\r\n      return squares;\r\n  }\r\n};\r\n\r\nexport const createBoardLayoutForMoveList = moves =>\r\n  moves.reduce((squares, m) => {\r\n    const from = squares.find(x => x.id === m.from.id);\r\n    const toIndex = squares.findIndex(x => x.id === m.to.id);\r\n    const contains = mapPieceToMovedPiece(from.contains);\r\n    let newSquares = mapPieceToNewSquare(squares, toIndex, {\r\n      ...from,\r\n      contains\r\n    });\r\n\r\n    if (m.specialMove) {\r\n      newSquares = updateBoardUsingSpecialMove(m.specialMove, newSquares);\r\n    }\r\n\r\n    return newSquares;\r\n  }, buildStartingBoard());\r\n","import Strings from 'constants/strings';\r\n\r\nconst getObjectFromLocalStorageByProperty = (property) =>\r\n  JSON.parse(localStorage.getItem(property)) || null;\r\n\r\nconst persistObjectToLocalStorage = (property) => (newValues) => {\r\n  const values = getObjectFromLocalStorageByProperty(property) || {};\r\n  const updated = { ...values, ...newValues };\r\n  localStorage.setItem(property, JSON.stringify(updated));\r\n  return updated;\r\n};\r\n\r\nexport const getUserSettings = () =>\r\n  getObjectFromLocalStorageByProperty(Strings.localUserSettings);\r\n\r\nexport const persistUserSettings = persistObjectToLocalStorage(\r\n  Strings.localUserSettings\r\n);\r\n\r\nexport const getSavedGame = () =>\r\n  getObjectFromLocalStorageByProperty(Strings.localGameState);\r\n\r\nexport const persistChessGame = persistObjectToLocalStorage(\r\n  Strings.localGameState\r\n);\r\n\r\nexport const updateArrayPreservingOrder = (arr, i, o) => [\r\n  ...arr.slice(0, i),\r\n  { ...arr[i], ...o },\r\n  ...arr.slice(i + 1)\r\n];\r\n\r\nexport const reverseArray = (arr) => arr.slice(0).reverse();\r\n\r\nexport const capitalise = ([first, ...rest], lowerRest = false) =>\r\n  first.toUpperCase() +\r\n  (lowerRest ? rest.join('').toLowerCase() : rest.join(''));\r\n\r\nexport const compose = (...fns) =>\r\n  fns.reduce((f, g) => (...args) => f(g(...args)));\r\n\r\nexport function curry(uncurried) {\r\n  const parameters = Array.prototype.slice.call(arguments, 1);\r\n  return function() {\r\n    return uncurried.apply(\r\n      this,\r\n      parameters.concat(Array.prototype.slice.call(arguments, 0))\r\n    );\r\n  };\r\n}\r\n\r\nexport const generateUniqueId = () =>\r\n  ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n    (\r\n      c ^\r\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n    ).toString(16)\r\n  );\r\n\r\nexport const padNumber = (n, width, z = 0) => {\r\n  n += '';\r\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n};\r\n\r\nexport const formatDate = (d) => {\r\n  if (!d) return '';\r\n  const date = new Date(d);\r\n  return `${date.getFullYear()}-${padNumber(\r\n    date.getMonth() + 1,\r\n    2\r\n  )}-${padNumber(date.getDate(), 2)}`;\r\n};\r\n\r\nconst isTypeOf = (t) => (v) => typeof v === t;\r\nexport const isObject = isTypeOf('object');\r\nexport const isArray = (v) => v instanceof Array;\r\n\r\nexport const objectsAreEqual = (o1, o2) => {\r\n  if (!isObject(o1) || !isObject(o2)) return o1 === o2;\r\n  return Object.keys(o1).every((k) => {\r\n    const one = o1[k];\r\n    const two = o2[k];\r\n    return isArray(one)\r\n      ? one\r\n          .map((t, i) => objectsAreEqual(one[i], two[i]))\r\n          .every((b) => b === true)\r\n      : one === two;\r\n  });\r\n};\r\n\r\nexport const getMoveWithBestScore = (o1, o2) => {\r\n  const { moveResults: m1 } = o1;\r\n  const { moveResults: m2 } = o2;\r\n\r\n  const v1 = [...m1.values()];\r\n  const v2 = [...m2.values()];\r\n\r\n  const max1 = Math.max(...v1);\r\n  const max2 = Math.max(...v2);\r\n\r\n  return max1 >= max2 ? o1 : o2;\r\n};\r\n\r\nexport const getKeyForMaxValue = (pairs) =>\r\n  [...pairs.keys()].reduce(\r\n    (pk, ck) => (pairs.get(pk) >= pairs.get(ck) ? pk : ck)\r\n  );\r\n\r\nconst mirrorMatrix = (arr) => arr.map((a) => a.reverse());\r\nconst splitArray = (arr, len = 8) => {\r\n  const chunks = [];\r\n  let i = 0,\r\n    n = arr.length;\r\n\r\n  while (i < n) {\r\n    chunks.push(arr.slice(i, (i += len)));\r\n  }\r\n\r\n  return chunks;\r\n};\r\n\r\nexport const splitMirrorAndJoin = compose(\r\n  (arr) => arr.reduce((a, b) => [...a, ...b]),\r\n  mirrorMatrix,\r\n  splitArray\r\n);\r\n","import { formatDate } from './common';\r\nimport { mapMovesToPGN } from './pgn';\r\n\r\nimport * as Regexes from 'constants/regex';\r\n\r\nconst PLAYER = 'Player';\r\nconst COMPUTER = 'Computer';\r\nconst TEXT_IN_QUOTES = /\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"/;\r\n\r\nexport const exportPGNForMoves = (moves, vsComputer) => {\r\n  const pgnForMoves = mapMovesToPGN(moves);\r\n  let moveNumber = 1;\r\n  const pgn = pgnForMoves.reduce((p, c, i) => {\r\n    const hasNumber = i === 0 || i % 2 === 0;\r\n    const nextStr = hasNumber ? ` ${moveNumber}. ${c.pgn}` : `${c.pgn}`;\r\n    if (!hasNumber) moveNumber++;\r\n    return `${p} ${nextStr}${!hasNumber && moveNumber % 5 === 0 ? `\\n ` : ''}`;\r\n  }, '');\r\n\r\n  const date = formatDate(new Date());\r\n  const players = !vsComputer.isComputer\r\n    ? [PLAYER, PLAYER]\r\n    : vsComputer.isComputerBlack ? [PLAYER, COMPUTER] : [COMPUTER, PLAYER];\r\n\r\n  const dataForFile = `\r\n  [Site \"https://bakuzan.github.io/satsuki-junketsu/\"]\r\n  [Date \"${date}\"]\r\n  [White \"${players[0]}\"]\r\n  [Black \"${players[1]}\"]\r\n  ${pgn}\r\n  `;\r\n\r\n  download(\r\n    processDataIntoDownloadUrl(dataForFile),\r\n    `chess-game-${new Date().toLocaleString()}.pgn`\r\n  );\r\n};\r\n\r\nconst processDataIntoDownloadUrl = (dataStr) =>\r\n  URL.createObjectURL(new Blob([dataStr]));\r\n\r\nexport function download(downloadUrl, fileName) {\r\n  const link = document.createElement('a');\r\n  link.setAttribute('href', downloadUrl);\r\n  link.setAttribute('download', fileName);\r\n  document.body.appendChild(link); // Required for FF\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}\r\n\r\nconst getProcessedLine = (arr, str) => {\r\n  const line = arr.find((x) => x.includes(str));\r\n  if (!line) return '';\r\n  return line.match(TEXT_IN_QUOTES)[0].replace(/\"/g, '');\r\n};\r\n\r\nconst resolvePlayers = (information) => {\r\n  const lines = information.split('\\n');\r\n  const wPlayer = getProcessedLine(lines, 'White');\r\n  const bPlayer = getProcessedLine(lines, 'Black');\r\n\r\n  return {\r\n    isComputer: wPlayer === COMPUTER || bPlayer === COMPUTER,\r\n    isComputerBlack: bPlayer === COMPUTER\r\n  };\r\n};\r\n\r\nexport const importPGNFromFile = (fileText) => {\r\n  const [gameInformation, ...movePairs] = fileText\r\n    .replace(Regexes.MATCH_PGN_COMMENTS_PGN_GAME_RESULT, '')\r\n    .split(Regexes.MATCH_DIGIT_DOT_SPACE);\r\n\r\n  const pgnMoves = movePairs.reduce(\r\n    (p, movePair) => [\r\n      ...p,\r\n      ...movePair\r\n        .replace(Regexes.MATCH_NEW_LINE, ' ')\r\n        .split(' ')\r\n        .filter((x) => !!x && isNaN(x))\r\n    ],\r\n    []\r\n  );\r\n\r\n  const vsComputer = resolvePlayers(gameInformation);\r\n\r\n  return { gameInformation, pgnMoves, vsComputer };\r\n};\r\n"],"sourceRoot":""}