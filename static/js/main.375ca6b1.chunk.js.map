{"version":3,"sources":["constants/strings.js","store/configureStore.js","utils/mappers.js","actions/board.js","utils/game.js","utils/squaresUpdate.js","actions/playback.js","utils/piece.js","utils/board.js","constants/regex.js","constants/paths.js","constants/new-game-options.js","constants/index.js","components/Portal.js","components/selectBox/SelectBox.js","components/tickbox/Tickbox.js","containers/appSettings/AppSettings.js","components/svgLogo/SVGLogo.js","components/header/Header.js","components/toaster/Toaster.js","containers/App.js","components/scales/Scales.js","constants/dnd-type.js","components/dragAndDrop/Target.js","components/dragAndDrop/Source.js","components/dragAndDrop/index.js","components/piece/pieceSvgs/PieceSvgWrapper.js","components/piece/pieceSvgs/Bishop.js","components/piece/pieceSvgs/King.js","components/piece/pieceSvgs/Knight.js","components/piece/pieceSvgs/Pawn.js","components/piece/pieceSvgs/Queen.js","components/piece/pieceSvgs/Rook.js","components/piece/pieceSvgs/index.js","components/piece/Piece.js","components/square/Square.js","components/promotionOptions/PromotionOptions.js","components/board/Board.js","utils/engine/possible-moves.js","utils/engine/piece-sqaure-tables/pawn.js","utils/engine/piece-sqaure-tables/knight.js","utils/engine/piece-sqaure-tables/bishop.js","utils/engine/piece-sqaure-tables/rook.js","utils/engine/piece-sqaure-tables/queen.js","utils/engine/piece-sqaure-tables/king-middle.js","utils/engine/piece-sqaure-tables/index.js","utils/engine/pawn-health.js","utils/engine/evaluate-board.js","utils/engine/index.js","containers/Board.js","components/graveyard/Graveyard.js","containers/Graveyard.js","components/moveList/MoveList.js","containers/MoveList.js","constants/icons.js","components/playback/Playback.js","containers/Playback.js","containers/MaintainAspectRatio.js","components/GameAction.js","components/newGameOptions/index.js","containers/ChessGame.js","Routes.js","registerServiceWorker.js","programmatic-board-moves.js","index.js","reducers/utils.js","reducers/theme.js","reducers/board-specialMove.js","reducers/board-playback.js","reducers/board-import.js","reducers/board.js","utils/state.js","reducers/index.js","store/configureStore.prod.js","utils/pgn.js","utils/specialMoves.js","actions/theme.js","constants/board.js","constants/slider.js","utils/toaster.js","utils/playback.js","utils/common.js","utils/exportImport.js"],"names":["Strings","localUserSettings","localGameState","colours","white","black","whiteHex","blackHex","pieces","pawn","rook","knight","bishop","queen","king","specialMoves","promotionSelection","promotion","enPassant","castling","kingTargets","rookStarts","rookEnds","pgn","piece","capture","castle","check","checkmate","module","exports","require","mapPieceToMovedPiece","p","Object","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","hasMoved","squarePosition","_ref","id","rank","file","mapSquaresToMove","oldSquare","newSquare","squaresAfterMove","captured","specialMove","from","to","contains","isAmbiguous","checkForMoveAmbiguity","checkStatus","getCurrentCheckStatusAfterMove","mapPieceToNewSquare","squares","index","currentSquare","oldIndex","findIndex","x","updateArrayPreservingOrder","mapPieceToNewPiece","updatedPiece","mapToSpecialMove","type","squareId","mapSquareIdToPromotion","mapSquareIdToEnPassant","mapSquareIdToCastling","__webpack_require__","r","__webpack_exports__","d","BOARD_SELECT_SQUARE","selectBoardSquare","BOARD_MOVE_PIECE","moveSelectedPiece","BOARD_TAKE_PIECE","takePiece","BOARD_SPECIAL_MOVE","performSpecialMove","BOARD_RESET","resetBoard","BOARD_IMPORT_GAME","importGame","BOARD_SAVE_GAME","saveGame","BOARD_LOAD_GAME","loadGame","BOARD_TOGGLE_REVERSE","toggleReverseBoard","BOARD_COMPUTER_MOVE","performComputerMove","targetSquareId","option","fileText","move","isWhitesTurn","getCurrentPlayerColour","getWinningPlayerColour","isValidMove","isValidTake","constants_index__WEBPACK_IMPORTED_MODULE_0__","_board__WEBPACK_IMPORTED_MODULE_1__","moveCount","moves","length","Constants","kingSquare","colour","hasFreePath","match","hasDiagonalMovement","files","ranks","_loop","i","square","isSameSquare","fileIndex","isOnDiagonal","v","isBetween","fromFileIndex","toFileIndex","_ret","fileDiff","Math","abs","rankDiff","name","attacker","toSquare","find","fromIndex","toIndex","performMovementFromCurrentToTarget","oldState","fromSquareId","toSquareId","targetIndex","movingPiece","defendingPiece","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","concat","graveyard","filter","selectedSquareId","performRookMovementForCastling","currentSquares","kingSquareId","newKingSquare","rookFileIndex","rookSquare","rookTargetIndex","movingRook","updateBoardToRemovePassedPawn","movedPieceSquareId","movedToSquare","direction","offsetRank","passedSquareIndex","passedPiece","moveIndex","slice","updateSquaresToRemovePassedPawn","PLAYBACK_UPDATE_SLIDE_POSITION","updateSlidePosition","PLAYBACK_STEP_FORWARD","stepSliderForward","PLAYBACK_STEP_BACK","stepSliderBack","sliderName","sliderValue","stepDirection","willResultInCheck","pieceSquare","matchKingForGivenColour","getAttacksOnKingSquare","possibleMovesForSelectedPiece","reduce","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","getCheckStatusForColour","attackers","isCheckmate","some","colourHasPossibleMoves","_getCheckStatusForCol","isCheck","CannotBeAmbiguous","targetSquare","movedPiece","includes","potentiallyAmbiguiousSquares","oldSquares","checkFunc","buildStartingBoard","letters","lastIndex","Array","fill","map","item","number","floor","letterIndex","push","shift","letter","indexOf","generateUniqueId","getStartingPiece","s1","s2","num1","num2","middleNumber","MATCH_NEW_LINE","MATCH_DIGIT_DOT_SPACE","MATCH_PGN_COMMENTS_PGN_GAME_RESULT","MATCH_EVERYTHING_UPTO_EQUALS","MATCH_EVERYTHING_BEFORE_FILE_RANK_PAIR","MATCH_PGN_WITH_ADDITIONAL_FILE","Paths","base","options","freeze","text","NewGameOptions","c","key","replace","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","themes","class","boardThemes","board","Portal","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","document","createElement","parentTag","getTargetNode","querySelector","targetSelector","appendChild","targetNode","removeChild","ReactDOM","createPortal","children","React","Component","defaultProps","SelectBox","value","disabled","onSelect","react_default","a","className","onChange","e","Tickbox","checked","themeMapper","theme","appThemes","AppSettings","state","isDropdownOpen","handleDropdownChange","bind","assertThisInitialized","handleCloseAppSettings","toggleDropdown","_this2","target","setState","prev","_this$props","appTheme","boardTheme","setApplicationTheme","setBoardTheme","reverseBoard","body","icon","htmlFor","title","components_Portal","role","onClick","selectBox_SelectBox","tickbox_Tickbox","mapDispatchToProps","connect","app","SvgLogo","letterClass","animate","sideLength","container","findDOMNode","characters","querySelectorAll","cycleCharacters","clearInterval","interval","setInterval","getAttribute","nextLetterIndex","setAttribute","word","toUpperCase","split","y","dy","renderLetters","xmlns","textLength","lengthAdjust","Header","react_router_dom_es","SVGLogo","appSettings_AppSettings","Toaster","stack","timer","toaster","register","time","Date","now","remainingToast","removeColdToast","clearTimeout","setTimeout","removeToast","toast","toConsumableArray","eatToast","_this3","list","classNames","tabIndex","toLowerCase","onKeyDown","message","App","header_Header","toaster_Toaster","Scales","array","renderScale","squareTarget","canDrop","monitor","dropActions","getItem","drop","onDrop","collectTarget","connectDropTarget","dropTarget","isOver","handleDrag","onDrag","pieceSource","beginDrag","endDrag","collectSource","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","dragAndDrop","DragDropContext","HTML5Backend","withDropTarget","WrappedComponent","Target","_React$Component","apply","arguments","inherits","createClass","objectWithoutProperties","assign","ref","instance","DropTarget","DnDType","withDragSource","Source","DragSource","VIEW_BOX","PIECE_SIZE","setColour","withColour","WrappedPiece","PieceSvgWrapper","colourSettings","pieceName","colourString","isWhite","oppositeColourString","oppositeColour","outline","detail","stroke","topCap","mainBody","lines","face","mane","colourSettingsForPieces","displayName","size","viewBox","styleSettings","bishopStyleOuter","opacity","fillRule","fillOpacity","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeOpacity","bishopStyleOutline","bishopStyleDetail","Bishop","objectSpread","version","width","height","style","kingStyleOuter","kingStylePath1","kingStyleTopCap","kingStyleMainBody","kingStylePath4","kingStyleLines","King","knightStyleOuter","knightStyleMainBody","knightStyleFace","knightStyleMane","Knight","transform","pawnStyle","Pawn","queenStyleMainBody","queenStyleBlackCircles","queenStyleBlackSpikes","queenStylePath1","queenStyleBlackBaseline","queenStyleBlackCrownlines","queenStyleWhitePath2","Queen","cx","cy","rookStyleMainBody","rookStylePath1","rookStylePath2","rookStylePath3","Rook","pieceSvgs","nextProps","isDraggingChanged","dataChanged","objectsAreEqual","pieceColour","_classNames","defineProperty","renderCoolChessPieceSvg","Square","handleDragPiece","isSelected","isPotentialMove","isSpecialMove","isInCheck","classes","selected","potential-move","potential-take","special-move","in-check","is-over","can-drop","piece_Piece","promotionChoices","promotionAt","dispatch","actions","bindActionCreators","promoteTo","Board","handleSquareSelection","handleCanDrop","handleDrop","potentialMoves","selectedSquare","currentPlayerColour","console","log","_this$props2","_this$props3","themeClass","isReversed","isReadOnly","nextMove","boardSquares","reverseArray","boardFiles","boardRanks","checkedKingSquareId","isLocked","onSquareClick","groupCollapsed","groupEnd","Fragment","read-only","scales_Scales","o","square_Square","promotionOptions_PromotionOptions","capitalise","getPossibleMovesForPiece","fakeBoardState","possibleMoves","possibleSMoves","availableSpecialMovesForSelectedPiece","getAllUniquePossibleMoves","pSquares","isCurrent","undefined","fakeMoves","fakeBoard","ids","acc","sq","_getPossibleMovesForP","Set","splitMirrorAndJoin","tableInteragator","pawns","knights","bishops","rooks","queens","kings","getTable","getPawns","getPawnAlignment","get","set","Map","getDoubledCount","m","values","getIsolatedCount","keys","FILES","left","right","has","Pieces","getPieceCount","arr","getScoreForPiece","weight","aSq","bSq","scoreKings","scoreQueens","scoreRooks","scoreBishops","scoreKnights","scorePawns","evaluateBoard","playingColour","sign","wp","bp","counts","getPieceSquareValue","pawnHealth","wAlign","bAlign","checkPawnHealth","wpMoves","PossibleMoves","bpMoves","mobility","score","engine","selectNextMove","currentColour","pieceSquares","pieceMoves","_PossibleMoves$getPos","moveResults","results","targetId","specialMoveResults","bestPieceMove","bestMove","curr","getMoveWithBestScore","bestTargetId","getKeyForMaxValue","engineMoveChoice","fromId","toId","BoardContainer","computerSelected","_this$props$board","vsComputer","isComputer","isComputerBlack","makeComputerMove","_this$props$board2","SJEngine","activeMoveIndex","playback","sliderPosition","_board$moves$slice","slicedToArray","selectNextMoveSquareId","createBoardLayoutForMoveList","currentBoardForDisplay","board_Board","DragAndDropContext","Graveyard","getCurrentMovesForPlaybackPosition","getPiecesForColour","resolveBoardDirection","whitePieces","blackPieces","graveyard_Graveyard","MoveItem","isActive","active","MoveList","_ref2","MoveList_MoveItem","mapMovesToPGN","icons","PlaybackButton","Playback","isPlaying","previousPosition","handleTogglePlay","createSliderStepHandler","handleSliderChange","sliderMaximum","onSlide","SLIDER_START","stopPlaying","onStepForward","playbackInterval","handler","onStepBack","event","_event$target","Number","isDisabled","isHidden","AT_THE_START","AT_THE_END","toggleIcon","Icons","sliderStyle","backgroundImage","Playback_PlaybackButton","max","MAX_WIDTH_FALLBACK","AccountFor","header","status","MaintainAspectRatio","wrappedComponent","createRef","onResize","window","addEventListener","removeEventListener","current","rawValue","min","clientHeight","clientWidth","GameAction","display","Options","GG","components_GameAction","ChessGame","isStartingNewGame","fileSelector","handleImport","handleNewGame","Response","containers_MoveList","exportPGNForMoves","accept","getGameContainer","MaintainAspectRatio_MaintainAspectRatio","containers_Board","containers_Playback","containers_Graveyard","components_newGameOptions","SatsukiRoutes","exact","path","component","Routes","history","react_router_redux_es","containers_App","render","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","selectSquare","n","getElementById","getSquare","click","moveFromSquareToSquare","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","next","stop","_x","_x2","makeMoves","pop","prepareBoard","fastestGame","reverse","ambiguous","programmatic_board_moves","movesFor","examples","newGame","export","import","togglePlay","forward","back","Engine","AutomateBoard","createHistory","store","configureStore","es","src_Routes","URL","process","origin","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","createReducer","initialState","handlers","action","hasOwnProperty","persistUserThemeChoice","themeType","persistUserSettings","settings","getUserSettings","getUserTheme","_createReducer","SET_APP_THEME","SET_BOARD_THEME","specialMoveSubReducer","_action$specialMove","postPieceMovementToTargetState","promotionIndex","PLAYBACK_STARTING_VALUE","getPlaybackInitialState","handlePlaybackStep","resolveSliderValue","playbackSubReducer","importSubReducer","freshState","cleanState","data","importPGNFromFile","pgnMoves","processPGNToMove","toHasPiece","func","canDoSpecialMove","isCastling","isEnPassant","newState","setSelectedSquareId","updateSlideMaximum","composedPieceMovement","compose","composedSpecialMove","composedImport","board_createReducer","vsComputerYouBlack","vsPlayer","persistChessGame","success","savedGame","getSavedGame","upgradedState","upgradeSavedGameState","_action$move","midState","rootReducer","combineReducers","routing","preloadedState","createStore","applyMiddleware","routerMiddleware","KING_SIDE_CASTLE","generatePortableGameNotationForMove","_item$checkStatus","getKeyForFirstLetter","l","isKingSideCastle","s","resolveCastlingFromSquare","pgnStr","isWhiteMove","capturedColour","Regexes","resolveSpecialMove","_pgnStr$replace$split","_pgnStr$replace$split2","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","resolveCastlingToSquare","result","exec","resolveFromSquare","BLACK_BACK_ROW","BLACK_PAWN_ROW","WHITE_PAWN_ROW","WHITE_BACK_ROW","pawnSpecialMoves","pawnSquare","boardState","targetRank","checkPawnPromotion","_moves$slice","lastMove","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","fromRank","twoRanksForward","pawnIndex","checkPawnEnPassant","rookSquares","kingId","targetSquares","rookId","startId","endId","squareIds","every","sqId","squareIndex","kingSpecialMoves","ToasterService","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","newToast","popToast","newSquares","updateBoardUsingSpecialMove","getObjectFromLocalStorageByProperty","property","JSON","parse","localStorage","persistObjectToLocalStorage","newValues","updated","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","setItem","stringify","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_toArray__WEBPACK_IMPORTED_MODULE_0__","first","rest","lowerRest","join","_len","fns","_key","f","g","t","crypto","getRandomValues","Uint8Array","toString","padNumber","z","formatDate","date","getFullYear","getMonth","getDate","isObject","o1","o2","k","one","two","b","m1","m2","v1","v2","pairs","pk","ck","len","chunks","TEXT_IN_QUOTES","pgnForMoves","moveNumber","hasNumber","nextStr","players","dataForFile","downloadUrl","fileName","link","download","processDataIntoDownloadUrl","toLocaleString","dataStr","createObjectURL","Blob","getProcessedLine","str","line","_fileText$replace$spl","_fileText$replace$spl2","C_Users_Steven_Documents_projects_satsuki_junketsu_node_modules_babel_runtime_helpers_esm_toArray__WEBPACK_IMPORTED_MODULE_1__","gameInformation","movePair","isNaN","information","wPlayer","bPlayer","resolvePlayers"],"mappings":"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A,EAAA5T,CAAIugB,GAAXtZ,OAAAjH,OAAA4T,EAAA,EAAA5T,CAAmB6f,GAAnB7f,OAAA4T,EAAA,EAAA5T,CAAqC8f,KACpC,IAEH,OAAO,IAAIY,IAAIJ,GC9BjB,IAAMrU,GAAO,CACX,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,EACA,GACC,GACA,GACD,EACA,GACC,IACA,EACD,EACA,EACA,GACA,IACC,IACA,GACD,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAGW/N,GAAQ8B,OAAOmM,OAAOF,IACtB9N,GAAQwiB,aAAmB1U,ICpElCA,GAAO,EACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACD,EACA,EACA,EACA,GACC,IACA,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,IACA,GACD,EACA,EACA,EACA,GACC,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAGU/N,GAAQ8B,OAAOmM,OAAOF,IACtB9N,GAAQwiB,aAAmB1U,ICnElCA,GAAO,EACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,GACD,EACA,EACA,GACA,GACA,EACA,GACC,IACA,GACD,EACA,EACA,GACA,GACA,EACA,GACC,IACA,GACD,EACA,GACA,GACA,GACA,GACA,GACC,IACA,GACD,GACA,GACA,GACA,GACA,GACA,IACC,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAGU/N,GAAQ8B,OAAOmM,OAAOF,IACtB9N,GAAQwiB,aAAmB1U,ICpElCA,GAAO,CACX,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACC,EACD,EACA,EACA,EACA,EACA,EACA,GACC,GACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,GACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,GACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,GACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,EACD,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAGW/N,GAAQ8B,OAAOmM,OAAOF,IACtB9N,GAAQwiB,aAAmB1U,ICpElCA,GAAO,EACV,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,EACD,EACA,EACA,EACA,EACA,EACA,GACC,EACD,EACA,EACA,EACA,EACA,EACA,EACA,GACC,GACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,GACD,EACA,EACA,EACA,EACA,EACA,GACC,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IAGU/N,GAAQ8B,OAAOmM,OAAOF,IACtB9N,GAAQwiB,aAAmB1U,ICrElCA,GAAO,EACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACD,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,IAGW/N,GAAQ8B,OAAOmM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","file":"static/js/main.375ca6b1.chunk.js","sourcesContent":["const colours = {\r\n  white: 'white',\r\n  black: 'black',\r\n  whiteHex: '#ffffff',\r\n  blackHex: '#000000'\r\n};\r\nconst pieces = {\r\n  pawn: 'pawn',\r\n  rook: 'rook',\r\n  knight: 'knight',\r\n  bishop: 'bishop',\r\n  queen: 'queen',\r\n  king: 'king'\r\n};\r\n\r\nconst specialMoves = {\r\n  promotionSelection: 'PROMOTION_SELECT',\r\n  promotion: 'PROMOTION_COMPLETE',\r\n  enPassant: 'EN_PASSANT',\r\n  castling: 'CASTLING'\r\n};\r\n\r\nconst pgn = {\r\n  piece: {\r\n    king: 'K',\r\n    queen: 'Q',\r\n    bishop: 'B',\r\n    knight: 'N',\r\n    rook: 'R',\r\n    pawn: ''\r\n  },\r\n  capture: 'x',\r\n  promotion: '=',\r\n  castle: { king: 'O-O', queen: 'O-O-O' },\r\n  enPassant: 'e.p.',\r\n  check: '+',\r\n  checkmate: '#'\r\n};\r\n\r\nconst castling = {\r\n  kingTargets: ['c', 'g'],\r\n  rookStarts: ['a', 'h'],\r\n  rookEnds: ['d', 'f']\r\n};\r\n\r\nconst Strings = {\r\n  localUserSettings: 'satsukiUserSettings',\r\n  localGameState: 'satsukiSavedGame',\r\n  colours,\r\n  pieces,\r\n  specialMoves,\r\n  castling,\r\n  pgn\r\n};\r\n\r\nexport default Strings;\r\n","if (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./configureStore.prod');\r\n} else {\r\n  module.exports = require('./configureStore.dev');\r\n}\r\n","import Strings from 'constants/strings';\r\nimport { getCurrentCheckStatusAfterMove, checkForMoveAmbiguity } from './piece';\r\nimport { updateArrayPreservingOrder } from './common';\r\n\r\nexport const mapPieceToMovedPiece = p => ({ ...p, hasMoved: true });\r\n\r\nconst squarePosition = ({ id, rank, file }) => ({ id, rank, file });\r\nexport const mapSquaresToMove = (\r\n  oldSquare,\r\n  newSquare,\r\n  squaresAfterMove,\r\n  captured,\r\n  specialMove\r\n) => ({\r\n  from: squarePosition(oldSquare),\r\n  to: squarePosition(newSquare),\r\n  piece: mapPieceToMovedPiece(newSquare.contains),\r\n  isAmbiguous: checkForMoveAmbiguity(\r\n    oldSquare,\r\n    newSquare,\r\n    squaresAfterMove,\r\n    captured\r\n  ),\r\n  checkStatus: getCurrentCheckStatusAfterMove(\r\n    newSquare.contains,\r\n    squaresAfterMove\r\n  ),\r\n  captured,\r\n  specialMove\r\n});\r\n\r\nexport const mapPieceToNewSquare = (squares, index, currentSquare) => {\r\n  const oldIndex = squares.findIndex(x => x.id === currentSquare.id);\r\n  return updateArrayPreservingOrder(\r\n    updateArrayPreservingOrder(squares, index, {\r\n      contains: currentSquare.contains\r\n    }),\r\n    oldIndex,\r\n    { contains: null }\r\n  );\r\n};\r\n\r\nexport const mapPieceToNewPiece = (squares, index, updatedPiece) =>\r\n  updateArrayPreservingOrder(squares, index, {\r\n    contains: updatedPiece\r\n      ? { ...(squares[index].contains || {}), ...updatedPiece }\r\n      : null\r\n  });\r\n\r\nconst mapToSpecialMove = type => squareId => ({\r\n  type,\r\n  squareId\r\n});\r\nexport const mapSquareIdToPromotion = mapToSpecialMove(\r\n  Strings.specialMoves.promotionSelection\r\n);\r\nexport const mapSquareIdToEnPassant = mapToSpecialMove(\r\n  Strings.specialMoves.enPassant\r\n);\r\nexport const mapSquareIdToCastling = mapToSpecialMove(\r\n  Strings.specialMoves.castling\r\n);\r\n","export const BOARD_SELECT_SQUARE = 'BOARD_SELECT_SQUARE';\r\nexport const selectBoardSquare = (squareId) => ({\r\n  type: BOARD_SELECT_SQUARE,\r\n  squareId\r\n});\r\n\r\nexport const BOARD_MOVE_PIECE = 'BOARD_MOVE_PIECE';\r\nexport const moveSelectedPiece = (targetSquareId) => ({\r\n  type: BOARD_MOVE_PIECE,\r\n  targetSquareId\r\n});\r\n\r\nexport const BOARD_TAKE_PIECE = 'BOARD_TAKE_PIECE';\r\nexport const takePiece = (targetSquareId) => ({\r\n  type: BOARD_TAKE_PIECE,\r\n  targetSquareId\r\n});\r\n\r\nexport const BOARD_SPECIAL_MOVE = 'BOARD_SPECIAL_MOVE';\r\nexport const performSpecialMove = (specialMove) => ({\r\n  type: BOARD_SPECIAL_MOVE,\r\n  specialMove\r\n});\r\n\r\nexport const BOARD_RESET = 'BOARD_RESET';\r\nexport const resetBoard = (option) => ({\r\n  type: BOARD_RESET,\r\n  option\r\n});\r\n\r\nexport const BOARD_IMPORT_GAME = 'BOARD_IMPORT_GAME';\r\nexport const importGame = (fileText) => ({\r\n  type: BOARD_IMPORT_GAME,\r\n  fileText\r\n});\r\n\r\nexport const BOARD_SAVE_GAME = 'BOARD_SAVE_GAME';\r\nexport const saveGame = () => ({\r\n  type: BOARD_SAVE_GAME\r\n});\r\n\r\nexport const BOARD_LOAD_GAME = 'BOARD_LOAD_GAME';\r\nexport const loadGame = () => ({\r\n  type: BOARD_LOAD_GAME\r\n});\r\n\r\nexport const BOARD_TOGGLE_REVERSE = 'BOARD_TOGGLE_REVERSE';\r\nexport const toggleReverseBoard = () => ({\r\n  type: BOARD_TOGGLE_REVERSE\r\n});\r\n\r\nexport const BOARD_COMPUTER_MOVE = 'BOARD_COMPUTER_MOVE';\r\nexport const performComputerMove = (move) => ({\r\n  type: BOARD_COMPUTER_MOVE,\r\n  move\r\n});\r\n","import Constants from 'constants/index';\r\n\r\nimport { isSameSquare, isOnDiagonal, isBetween } from './board';\r\n\r\nexport const isWhitesTurn = (moveCount) =>\r\n  moveCount === 0 || moveCount % 2 === 0;\r\n\r\nexport const getCurrentPlayerColour = (moves) =>\r\n  isWhitesTurn(moves.length)\r\n    ? Constants.Strings.colours.white\r\n    : Constants.Strings.colours.black;\r\n\r\nexport const getWinningPlayerColour = (kingSquare) =>\r\n  kingSquare.contains.colour === Constants.Strings.colours.white\r\n    ? Constants.Strings.colours.black\r\n    : Constants.Strings.colours.white;\r\n\r\nexport const hasFreePath = (from, to, match, squares) => {\r\n  const hasDiagonalMovement = !(match.files || match.ranks);\r\n  for (let i = 0, length = squares.length; i < length; i++) {\r\n    const square = squares[i];\r\n    if (square.contains === null) continue;\r\n    if (isSameSquare(from, square)) continue;\r\n\r\n    const fileIndex = Constants.files.findIndex((x) => x === square.file);\r\n    if (hasDiagonalMovement) {\r\n      if (isOnDiagonal(fileIndex, from, to, square)) return false;\r\n    } else if (match.files && square.file === to.file) {\r\n      if (isBetween(from.rank, to.rank, square.rank)) return false;\r\n    } else if (match.ranks && square.rank === to.rank) {\r\n      const fromFileIndex = Constants.files.findIndex((x) => x === from.file);\r\n      const toFileIndex = Constants.files.findIndex((x) => x === to.file);\r\n      if (isBetween(fromFileIndex, toFileIndex, fileIndex)) return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nexport const isValidMove = (from, to, squares) => {\r\n  const { contains: piece } = from;\r\n  const match = {\r\n    files: from.file === to.file,\r\n    ranks: from.rank === to.rank\r\n  };\r\n  const fromFileIndex = Constants.files.findIndex((x) => x === from.file);\r\n  const toFileIndex = Constants.files.findIndex((x) => x === to.file);\r\n  const fileDiff = Math.abs(toFileIndex - fromFileIndex);\r\n  const rankDiff = Math.abs(to.rank - from.rank);\r\n\r\n  switch (piece.name) {\r\n    case Constants.Strings.pieces.pawn:\r\n      if (!match.files) return false;\r\n      if (piece.colour === Constants.Strings.colours.white) {\r\n        if (from.rank === 2 && 3 === to.rank) return true;\r\n        if (from.rank === 2 && 4 === to.rank)\r\n          return hasFreePath(from, to, match, squares);\r\n        if (rankDiff === 1 && from.rank < to.rank) return true;\r\n      } else if (piece.colour === Constants.Strings.colours.black) {\r\n        if (from.rank === 7 && 6 === to.rank) return true;\r\n        if (from.rank === 7 && 5 === to.rank)\r\n          return hasFreePath(from, to, match, squares);\r\n        if (rankDiff === 1 && from.rank > to.rank) return true;\r\n      }\r\n      return false;\r\n    case Constants.Strings.pieces.rook:\r\n      if (match.files || match.ranks)\r\n        return hasFreePath(from, to, match, squares);\r\n      return false;\r\n    case Constants.Strings.pieces.knight:\r\n      if (match.files || match.ranks) return false;\r\n      if (rankDiff === 1 && fileDiff === 2) return true;\r\n      if (rankDiff === 2 && fileDiff === 1) return true;\r\n      return false;\r\n    case Constants.Strings.pieces.bishop:\r\n      if (fileDiff === rankDiff) return hasFreePath(from, to, match, squares);\r\n      return false;\r\n    case Constants.Strings.pieces.queen:\r\n      if (match.files || match.ranks)\r\n        return hasFreePath(from, to, match, squares);\r\n      if (fileDiff === rankDiff) return hasFreePath(from, to, match, squares);\r\n      return false;\r\n    case Constants.Strings.pieces.king:\r\n      if (match.ranks && fileDiff === 1) return true;\r\n      if (match.files && rankDiff === 1) return true;\r\n      if (rankDiff === 1 && fileDiff === 1) return true;\r\n      return false;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const isValidTake = (from, to, squares) => {\r\n  const { contains: attacker } = from;\r\n  const toSquare = squares.find(\r\n    (x) => x.file === to.file && x.rank === to.rank\r\n  );\r\n  if (!toSquare || !toSquare.contains) return false;\r\n  if (toSquare.contains.colour === attacker.colour) return false;\r\n\r\n  switch (attacker.name) {\r\n    case Constants.Strings.pieces.pawn:\r\n      const fromIndex = Constants.files.findIndex((x) => x === from.file);\r\n      const toIndex = Constants.files.findIndex((x) => x === to.file);\r\n      return (\r\n        Math.abs(toIndex - fromIndex) === 1 &&\r\n        Math.abs(to.rank - from.rank) === 1 &&\r\n        ((from.rank < to.rank &&\r\n          attacker.colour === Constants.Strings.colours.white) ||\r\n          (from.rank > to.rank &&\r\n            attacker.colour === Constants.Strings.colours.black))\r\n      );\r\n    case Constants.Strings.pieces.rook:\r\n    case Constants.Strings.pieces.knight:\r\n    case Constants.Strings.pieces.bishop:\r\n    case Constants.Strings.pieces.queen:\r\n    case Constants.Strings.pieces.king:\r\n      return isValidMove(from, to, squares);\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n","import Strings from 'constants/strings';\r\nimport {\r\n  mapSquaresToMove,\r\n  mapPieceToMovedPiece,\r\n  mapPieceToNewSquare,\r\n  mapPieceToNewPiece\r\n} from './mappers';\r\n\r\nexport default function performMovementFromCurrentToTarget(\r\n  oldState,\r\n  fromSquareId,\r\n  toSquareId,\r\n  specialMove\r\n) {\r\n  const currentSquare = oldState.squares.find(x => x.id === fromSquareId);\r\n  const targetIndex = oldState.squares.findIndex(x => x.id === toSquareId);\r\n  const movingPiece = mapPieceToMovedPiece(currentSquare.contains);\r\n  const defendingPiece = !!oldState.squares[targetIndex].contains\r\n    ? { ...oldState.squares[targetIndex].contains }\r\n    : null;\r\n\r\n  const squares = mapPieceToNewSquare(oldState.squares, targetIndex, {\r\n    ...currentSquare,\r\n    contains: movingPiece\r\n  });\r\n  const moves = [\r\n    ...oldState.moves,\r\n    mapSquaresToMove(\r\n      currentSquare,\r\n      squares[targetIndex],\r\n      squares,\r\n      defendingPiece,\r\n      specialMove\r\n    )\r\n  ];\r\n  const graveyard = !!defendingPiece\r\n    ? [...oldState.graveyard, defendingPiece].filter(x => !!x)\r\n    : oldState.graveyard;\r\n  return {\r\n    ...oldState,\r\n    selectedSquareId: null,\r\n    squares,\r\n    moves,\r\n    graveyard\r\n  };\r\n}\r\n\r\nexport function performRookMovementForCastling(currentSquares, kingSquareId) {\r\n  const newKingSquare = currentSquares.find(x => x.id === kingSquareId);\r\n  const rookFileIndex = Strings.castling.kingTargets.findIndex(\r\n    x => x === newKingSquare.file\r\n  );\r\n  const rookSquare = currentSquares.find(\r\n    x =>\r\n      x.rank === newKingSquare.rank &&\r\n      x.file === Strings.castling.rookStarts[rookFileIndex]\r\n  );\r\n  const rookTargetIndex = currentSquares.findIndex(\r\n    x =>\r\n      x.rank === newKingSquare.rank &&\r\n      x.file === Strings.castling.rookEnds[rookFileIndex]\r\n  );\r\n  const movingRook = mapPieceToMovedPiece(rookSquare.contains);\r\n  const squares = mapPieceToNewSquare(currentSquares, rookTargetIndex, {\r\n    ...rookSquare,\r\n    contains: movingRook\r\n  });\r\n\r\n  return squares;\r\n}\r\n\r\nexport function updateBoardToRemovePassedPawn(oldState, movedPieceSquareId) {\r\n  const movedToSquare = oldState.squares.find(x => x.id === movedPieceSquareId);\r\n  const direction =\r\n    movedToSquare.contains.colour === Strings.colours.white ? 1 : -1;\r\n  const offsetRank = movedToSquare.rank - direction;\r\n  const passedSquareIndex = oldState.squares.findIndex(\r\n    x => x.file === movedToSquare.file && x.rank === offsetRank\r\n  );\r\n  const passedPiece = {\r\n    ...oldState.squares[passedSquareIndex].contains\r\n  };\r\n  const squares = mapPieceToNewPiece(oldState.squares, passedSquareIndex, null);\r\n  const moveIndex = oldState.moves.length - 1;\r\n  const moves = [\r\n    ...oldState.moves.slice(0, moveIndex),\r\n    {\r\n      ...oldState.moves[moveIndex],\r\n      captured: { ...passedPiece }\r\n    }\r\n  ];\r\n\r\n  return {\r\n    ...oldState,\r\n    squares,\r\n    moves,\r\n    graveyard: [...oldState.graveyard, passedPiece]\r\n  };\r\n}\r\n\r\nexport function updateSquaresToRemovePassedPawn(squares, movedPieceSquareId) {\r\n  const fakeStateWithNewSquares = updateBoardToRemovePassedPawn(\r\n    { moves: [], graveyard: [], squares },\r\n    movedPieceSquareId\r\n  );\r\n  return fakeStateWithNewSquares.squares;\r\n}\r\n","export const PLAYBACK_UPDATE_SLIDE_POSITION = 'PLAYBACK_UPDATE_SLIDE_POSITION';\r\nexport const updateSlidePosition = (sliderName, sliderValue) => ({\r\n  type: PLAYBACK_UPDATE_SLIDE_POSITION,\r\n  sliderValue\r\n});\r\n\r\nexport const PLAYBACK_STEP_FORWARD = 'PLAYBACK_STEP_FORWARD';\r\nexport const stepSliderForward = (sliderName, stepDirection) => ({\r\n  type: PLAYBACK_STEP_FORWARD,\r\n  stepDirection\r\n});\r\n\r\nexport const PLAYBACK_STEP_BACK = 'PLAYBACK_STEP_BACK';\r\nexport const stepSliderBack = (sliderName, stepDirection) => ({\r\n  type: PLAYBACK_STEP_BACK,\r\n  stepDirection\r\n});\r\n","import Constants from 'constants/index';\r\n\r\nimport { mapPieceToNewSquare, mapPieceToNewPiece } from './mappers';\r\nimport { isValidMove, isValidTake } from './game';\r\n\r\nexport const willResultInCheck = (pieceSquare, squares) => {\r\n  const colour = pieceSquare.contains.colour;\r\n  const kingSquare = squares.find(matchKingForGivenColour(colour));\r\n  return !!getAttacksOnKingSquare(kingSquare, squares).length;\r\n};\r\n\r\nexport const possibleMovesForSelectedPiece = ({\r\n  selectedSquareId,\r\n  squares\r\n}) => {\r\n  if (selectedSquareId === null) return [];\r\n  const pieceSquare = squares.find(x => x.id === selectedSquareId);\r\n  return squares.reduce((p, square, index) => {\r\n    const func = square.contains ? isValidTake : isValidMove;\r\n    return func(pieceSquare, square, squares) &&\r\n      !willResultInCheck(\r\n        pieceSquare,\r\n        mapPieceToNewSquare(squares, index, pieceSquare)\r\n      )\r\n      ? [...p, square.id]\r\n      : p;\r\n  }, []);\r\n};\r\n\r\nconst matchKingForGivenColour = colour => x =>\r\n  x.contains &&\r\n  x.contains.name === Constants.Strings.pieces.king &&\r\n  x.contains.colour === colour;\r\n\r\nconst getAttacksOnKingSquare = (kingSquare, squares) =>\r\n  squares\r\n    .filter(\r\n      x =>\r\n        kingSquare &&\r\n        x.contains &&\r\n        x.contains.colour !== kingSquare.contains.colour\r\n    )\r\n    .reduce((p, square) => {\r\n      if (!isValidTake(square, kingSquare, squares)) return p;\r\n      return [...p, square];\r\n    }, []);\r\n\r\nconst colourHasPossibleMoves = (colour, squares) => {\r\n  const piecesForColour = squares.filter(\r\n    x => x.contains && x.contains.colour === colour\r\n  );\r\n  return piecesForColour.some(\r\n    x =>\r\n      !!possibleMovesForSelectedPiece({ selectedSquareId: x.id, squares })\r\n        .length\r\n  );\r\n};\r\n\r\nexport const getCheckStatusForColour = (colour, squares) => {\r\n  const kingSquare = squares.find(matchKingForGivenColour(colour));\r\n  const attackers = getAttacksOnKingSquare(kingSquare, squares);\r\n  const isCheckmate =\r\n    !!attackers.length && !colourHasPossibleMoves(colour, squares);\r\n  return {\r\n    kingSquare,\r\n    attackers,\r\n    isCheckmate\r\n  };\r\n};\r\n\r\nexport const getCurrentCheckStatusAfterMove = (piece, squares) => {\r\n  const colour =\r\n    piece.colour === Constants.Strings.colours.white\r\n      ? Constants.Strings.colours.black\r\n      : Constants.Strings.colours.white;\r\n  const { attackers, isCheckmate } = getCheckStatusForColour(colour, squares);\r\n  return {\r\n    isCheck: !!attackers.length,\r\n    isCheckmate\r\n  };\r\n};\r\n\r\nconst CannotBeAmbiguous = [\r\n  Constants.Strings.pieces.king,\r\n  Constants.Strings.pieces.queen,\r\n  Constants.Strings.pieces.bishop\r\n];\r\n\r\nexport const checkForMoveAmbiguity = (\r\n  oldSquare,\r\n  targetSquare,\r\n  squaresAfterMove,\r\n  captured\r\n) => {\r\n  const movedPiece = targetSquare.contains;\r\n  if (CannotBeAmbiguous.includes(movedPiece.name)) return false;\r\n\r\n  const potentiallyAmbiguiousSquares = squaresAfterMove.filter(\r\n    x =>\r\n      x.id !== targetSquare.id &&\r\n      x.contains &&\r\n      x.contains.name === movedPiece.name &&\r\n      x.contains.colour === movedPiece.colour\r\n  );\r\n  if (potentiallyAmbiguiousSquares.length === 0) return false;\r\n\r\n  const fromIndex = squaresAfterMove.findIndex(x => x.id === oldSquare.id);\r\n  const toIndex = squaresAfterMove.findIndex(x => x.id === targetSquare.id);\r\n  let oldSquares = mapPieceToNewPiece(squaresAfterMove, fromIndex, {\r\n    ...targetSquare.contains\r\n  });\r\n  oldSquares = mapPieceToNewPiece(oldSquares, toIndex, captured);\r\n\r\n  const checkFunc = captured ? isValidTake : isValidMove;\r\n  return potentiallyAmbiguiousSquares.some(x =>\r\n    checkFunc(x, targetSquare, oldSquares)\r\n  );\r\n};\r\n","import Constants from 'constants/index';\r\nimport { generateUniqueId } from './common';\r\n\r\nconst { pieces, colours } = Constants.Strings;\r\n\r\nconst getStartingPiece = (rank, file) => {\r\n  if ([1, 2, 7, 8].indexOf(rank) === -1) return null;\r\n\r\n  const piece = {\r\n    id: generateUniqueId(),\r\n    colour: rank < 5 ? colours.white : colours.black,\r\n    hasMoved: false\r\n  };\r\n  if ([2, 7].indexOf(rank) > -1) return { ...piece, name: pieces.pawn };\r\n  if (['a', 'h'].indexOf(file) > -1) return { ...piece, name: pieces.rook };\r\n  if (['b', 'g'].indexOf(file) > -1) return { ...piece, name: pieces.knight };\r\n  if (['c', 'f'].indexOf(file) > -1) return { ...piece, name: pieces.bishop };\r\n  return { ...piece, name: file === 'd' ? pieces.queen : pieces.king };\r\n};\r\n\r\nexport const buildStartingBoard = () => {\r\n  let letters = Constants.files.slice(0);\r\n  let lastIndex = -1;\r\n\r\n  return Array(64)\r\n    .fill(null)\r\n    .map((item, index) => {\r\n      const number = 8 - Math.floor(index / 8);\r\n      const letterIndex = (index + number) % 8;\r\n      if (letterIndex === lastIndex) {\r\n        letters.push(letters.shift());\r\n        lastIndex = -1;\r\n      }\r\n\r\n      const letter = letters[letterIndex];\r\n      lastIndex = letterIndex;\r\n      return {\r\n        id: index,\r\n        rank: number,\r\n        file: letter,\r\n        contains: getStartingPiece(number, letter)\r\n      };\r\n    });\r\n};\r\n\r\nexport const isSameSquare = (s1, s2) =>\r\n  s1.rank === s2.rank && s1.file === s2.file;\r\n\r\nexport const isBetween = (num1, num2, middleNumber) => {\r\n  if (num1 < middleNumber && middleNumber < num2) return true;\r\n  if (num1 > middleNumber && middleNumber > num2) return true;\r\n  return false;\r\n};\r\n\r\nexport const isOnDiagonal = (fileIndex, from, to, square) => {\r\n  const fromFileIndex = Constants.files.findIndex(x => x === from.file);\r\n  const fileDiff = Math.abs(fileIndex - fromFileIndex);\r\n  const rankDiff = Math.abs(square.rank - from.rank);\r\n  if (!(fileDiff === rankDiff)) return false;\r\n  if (!isBetween(from.rank, to.rank, square.rank)) return false;\r\n\r\n  const toFileIndex = Constants.files.findIndex(x => x === to.file);\r\n  if (!isBetween(fromFileIndex, toFileIndex, fileIndex)) return false;\r\n  return true;\r\n};\r\n","export const MATCH_NEW_LINE = /\\n/g;\r\nexport const MATCH_DIGIT_DOT_SPACE = /\\d\\. /g;\r\nexport const MATCH_PGN_COMMENTS_PGN_GAME_RESULT = /\\d\\/\\d-\\d\\/\\d$|\\d\\/\\d$|\\{.*\\}/g;\r\n\r\nexport const MATCH_EVERYTHING_UPTO_EQUALS = /.*=/;\r\nexport const MATCH_EVERYTHING_BEFORE_FILE_RANK_PAIR = /.*(?=[a-h]\\d)/g;\r\n\r\nexport const MATCH_PGN_WITH_ADDITIONAL_FILE = /[a-h]x[a-h]|[a-h]{2}/;\r\n","export const Paths = {\r\n  base: '/satsuki-junketsu'\r\n};\r\n","const options = Object.freeze([\r\n  { id: 1, text: 'vs Computer (You as White)' },\r\n  { id: 2, text: 'vs Computer (You as Black)' },\r\n  { id: 3, text: 'vs Player' }\r\n]);\r\n\r\nexport default options;\r\n\r\nexport const NewGameOptions = Object.freeze(\r\n  options.reduce((p, c) => {\r\n    const key = c.text.replace(/\\(|\\)| |as/g, '');\r\n\r\n    return {\r\n      ...p,\r\n      [key]: c.id\r\n    };\r\n  }, {})\r\n);\r\n","import { Paths } from './paths';\r\nimport Strings from './strings';\r\nimport * as board from './board';\r\n\r\nconst Constants = {\r\n  Paths,\r\n  Strings,\r\n  themes: [\r\n    { name: 'Junketsu', class: 'theme-one' },\r\n    { name: 'Senketsu', class: 'theme-two' }\r\n  ],\r\n  boardThemes: [\r\n    { name: 'Standard', class: 'board-one' },\r\n    { name: 'Desert', class: 'board-two' },\r\n    { name: 'Forest', class: 'board-three' }\r\n  ],\r\n  ...board\r\n};\r\n\r\nexport default Constants;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.el = document.createElement(props.parentTag);\r\n    this.getTargetNode = () => document.querySelector(props.targetSelector);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const targetNode = this.getTargetNode();\r\n    targetNode.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const targetNode = this.getTargetNode();\r\n    if (targetNode) targetNode.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nPortal.defaultProps = {\r\n  parentTag: 'div'\r\n};\r\n\r\nPortal.propTypes = {\r\n  parentTag: PropTypes.string,\r\n  targetSelector: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Portal;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst SelectBox = ({ name, value, disabled, onSelect, text, options }) => (\r\n  <div className=\"has-float-label select-container\">\r\n    <select\r\n      className=\"select-box\"\r\n      name={name}\r\n      value={value}\r\n      onChange={e => onSelect(e)}\r\n      disabled={disabled}\r\n    >\r\n      {options.map(item => (\r\n        <option key={item.value} value={item.value}>\r\n          {item.text}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    <label>{text}</label>\r\n  </div>\r\n);\r\n\r\nSelectBox.defaultProps = {\r\n  disabled: false\r\n};\r\n\r\nSelectBox.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.bool\r\n  ]).isRequired,\r\n  disabled: PropTypes.bool,\r\n  text: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SelectBox;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './tickbox.scss';\r\n\r\nconst Tickbox = ({ name, checked, disabled, onChange, text }) => (\r\n  <div className=\"input-container\">\r\n    <label className=\"tickbox\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        checked={checked}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n      />\r\n      {text}\r\n    </label>\r\n  </div>\r\n);\r\n\r\nTickbox.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n  text: PropTypes.string\r\n};\r\n\r\nexport default Tickbox;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Portal from 'components/Portal';\r\nimport SelectBox from 'components/selectBox/SelectBox';\r\nimport Tickbox from 'components/tickbox/Tickbox';\r\n\r\nimport { setApplicationTheme, setBoardTheme } from 'actions/theme';\r\nimport { toggleReverseBoard } from 'actions/board';\r\nimport Constants from 'constants/index';\r\nimport './appSettings.scss';\r\n\r\nconst themeMapper = (theme) => ({\r\n  text: theme.name,\r\n  value: theme.class\r\n});\r\nconst appThemes = Constants.themes.map(themeMapper);\r\nconst boardThemes = Constants.boardThemes.map(themeMapper);\r\n\r\nconst applyThemeToBody = (theme) => (document.body.className = theme);\r\n\r\nclass AppSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDropdownOpen: false\r\n    };\r\n\r\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n    this.handleCloseAppSettings = this.handleCloseAppSettings.bind(this);\r\n    this.toggleDropdown = this.toggleDropdown.bind(this);\r\n  }\r\n\r\n  handleDropdownChange(onChange) {\r\n    return (e) => {\r\n      onChange(e.target.value);\r\n      this.handleCloseAppSettings();\r\n    };\r\n  }\r\n\r\n  handleCloseAppSettings() {\r\n    this.setState({ isDropdownOpen: false });\r\n  }\r\n\r\n  toggleDropdown() {\r\n    this.setState((prev) => ({ isDropdownOpen: !prev.isDropdownOpen }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      appTheme,\r\n      boardTheme,\r\n      setApplicationTheme,\r\n      setBoardTheme,\r\n      reverseBoard,\r\n      toggleReverseBoard\r\n    } = this.props;\r\n    applyThemeToBody(appTheme);\r\n\r\n    return (\r\n      <div id=\"app-settings\">\r\n        <input\r\n          type=\"checkbox\"\r\n          value={this.state.isDropdownOpen}\r\n          id=\"app-settings-toggler\"\r\n          onChange={this.toggleDropdown}\r\n        />\r\n        <label\r\n          icon=\"&#x2699;\"\r\n          htmlFor=\"app-settings-toggler\"\r\n          title=\"App settings\"\r\n        />\r\n        {this.state.isDropdownOpen && (\r\n          <Portal targetSelector=\"main\">\r\n            <div\r\n              id=\"app-settings-backdrop\"\r\n              role=\"button\"\r\n              onClick={this.handleCloseAppSettings}\r\n            />\r\n            <ul id=\"app-settings-menu\" className=\"dropdown-menu\" role=\"menu\">\r\n              <li className=\"dropdown-arrow\" />\r\n              <li>\r\n                <SelectBox\r\n                  name=\"appTheme\"\r\n                  text=\"App Theme\"\r\n                  value={appTheme}\r\n                  options={appThemes}\r\n                  onSelect={this.handleDropdownChange(setApplicationTheme)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <SelectBox\r\n                  name=\"boardTheme\"\r\n                  text=\"Board Theme\"\r\n                  value={boardTheme}\r\n                  options={boardThemes}\r\n                  onSelect={this.handleDropdownChange(setBoardTheme)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <Tickbox\r\n                  name=\"reverseBoard\"\r\n                  text=\"Flip board on move\"\r\n                  checked={reverseBoard}\r\n                  onChange={toggleReverseBoard}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </Portal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAppSettings.propTypes = {\r\n  appTheme: PropTypes.string.isRequired,\r\n  boardTheme: PropTypes.string.isRequired,\r\n  setApplicationTheme: PropTypes.func.isRequired,\r\n  setBoardTheme: PropTypes.func.isRequired,\r\n  reverseBoard: PropTypes.bool.isRequired,\r\n  toggleReverseBoard: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appTheme: state.theme.app,\r\n  boardTheme: state.theme.board,\r\n  reverseBoard: state.board.reverseBoard\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setApplicationTheme,\r\n  setBoardTheme,\r\n  toggleReverseBoard\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppSettings);\r\n","import React, { Component } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport './svgLogo.scss';\r\n\r\nclass SvgLogo extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.letterClass = 'letter';\r\n    this.animate = 'hideshow';\r\n    this.sideLength = 50;\r\n  }\r\n  componentDidMount() {\r\n    const container = findDOMNode(this);\r\n    this.characters = container.querySelectorAll('text.letter');\r\n    this.cycleCharacters();\r\n  }\r\n  cycleCharacters() {\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(() => {\r\n      const letterIndex = Array.from(this.characters).findIndex((x) => {\r\n        return x.getAttribute('class').indexOf(this.animate) > -1;\r\n      });\r\n\r\n      const nextLetterIndex =\r\n        letterIndex + 1 < this.characters.length ? letterIndex + 1 : 0;\r\n      if (letterIndex !== -1)\r\n        this.characters[letterIndex].setAttribute('class', this.letterClass);\r\n\r\n      this.characters[nextLetterIndex].setAttribute(\r\n        'class',\r\n        `${this.letterClass} ${this.animate}`\r\n      );\r\n    }, 3000);\r\n  }\r\n  renderLetters(word) {\r\n    const characters = word\r\n      .toUpperCase()\r\n      .split('')\r\n      .map((item, index) => {\r\n        return (\r\n          <text key={index} className=\"letter\" x=\"50%\" y=\"50%\" dy=\"0.3em\">\r\n            {item}\r\n          </text>\r\n        );\r\n      });\r\n    return characters;\r\n  }\r\n  render() {\r\n    const letters = this.renderLetters(this.props.text);\r\n\r\n    return (\r\n      <div className=\"svg-logo\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\">\r\n          {letters}\r\n          <text\r\n            className=\"word diagonal\"\r\n            x=\"50%\"\r\n            y=\"50%\"\r\n            dy=\"0.3em\"\r\n            textLength={this.sideLength}\r\n            lengthAdjust=\"spacingAndGlyphs\"\r\n          >\r\n            {this.props.text.toUpperCase()}\r\n          </text>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SvgLogo;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AppSettings from 'containers/appSettings/AppSettings';\r\nimport SvgLogo from '../svgLogo/SVGLogo.js';\r\nimport { Paths } from 'constants/paths';\r\nimport './header.scss';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"satsuki-header center-contents\">\r\n        <NavLink className=\"ripple\" id=\"satsuki-svg\" to={Paths.base}>\r\n          <SvgLogo text=\"Satsuki Junketsu\" />\r\n        </NavLink>\r\n        <h1>SATSUKI JUNKETSU</h1>\r\n        <div id=\"navigation-links\">\r\n          <div className=\"flex-right center-vertically\">\r\n            <AppSettings />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport toaster from 'utils/toaster';\r\n\r\nimport './toaster.scss';\r\n\r\nclass Toaster extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stack: Array(0)\r\n    };\r\n    this.timer = null;\r\n\r\n    toaster.register(this);\r\n  }\r\n\r\n  removeColdToast() {\r\n    return this.state.stack.filter((x) => x.time > Date.now() - 3000);\r\n  }\r\n\r\n  removeToast(time) {\r\n    const warmToast = this.removeColdToast();\r\n    const remainingToast = warmToast.filter((x) => x.time !== time);\r\n    this.setState({ stack: remainingToast });\r\n  }\r\n\r\n  eatToast() {\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => this.removeToast(), 3000);\r\n  }\r\n\r\n  popToast(toast) {\r\n    this.setState({ stack: [...this.state.stack, toast] });\r\n    this.eatToast();\r\n  }\r\n\r\n  render() {\r\n    const list = this.state.stack || Array(0);\r\n\r\n    return (\r\n      <div className={classNames('toaster')}>\r\n        {list.map((item) => {\r\n          const removeToast = () => this.removeToast(item.time);\r\n          return (\r\n            <span\r\n              key={item.time}\r\n              role=\"button\"\r\n              tabIndex=\"0\"\r\n              className={classNames('toast', item.type.toLowerCase())}\r\n              onClick={removeToast}\r\n              onKeyDown={removeToast}\r\n            >\r\n              <span className={classNames('toast__title')}>{item.title}</span>\r\n              <span className={classNames('toast__message')}>\r\n                {item.message}\r\n              </span>\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toaster;\r\n","import React from 'react';\r\n\r\nimport Header from 'components/header/Header';\r\nimport Toaster from 'components/toaster/Toaster';\r\n\r\nconst App = ({ children }) => (\r\n  <div className=\"satsuki\">\r\n    <Header />\r\n    <main>{children}</main>\r\n    <Toaster />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport './scales.scss';\r\n\r\nclass Scales extends Component {\r\n  renderScale(array) {\r\n    return array.map((item) => <div key={item}>{item}</div>);\r\n  }\r\n\r\n  render() {\r\n    const files = this.renderScale(this.props.files);\r\n    const ranks = this.renderScale(this.props.ranks);\r\n\r\n    return (\r\n      <span className=\"scales\">\r\n        <span className=\"scale file top\">{files}</span>\r\n        <span className=\"scale file bottom\">{files}</span>\r\n        <span className=\"scale rank left\">{ranks}</span>\r\n        <span className=\"scale rank right\">{ranks}</span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scales;\r\n","export default Object.freeze({\r\n  piece: 'piece',\r\n  square: 'square'\r\n});","import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { DropTarget } from 'react-dnd';\r\n\r\nimport DnDType from 'constants/dnd-type';\r\n\r\nconst squareTarget = {\r\n  canDrop(props, monitor) {\r\n    return props.dropActions.canDrop(props.id, monitor.getItem());\r\n  },\r\n  drop(props, monitor) {\r\n    return props.dropActions.onDrop(props.id, monitor.getItem());\r\n  }\r\n};\r\n\r\nfunction collectTarget(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n    canDrop: monitor.canDrop()\r\n  };\r\n}\r\n\r\nexport default function withDropTarget(WrappedComponent) {\r\n  class Target extends React.Component {\r\n    render() {\r\n      const { connectDropTarget, ...props } = this.props;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          {...props}\r\n          ref={instance => connectDropTarget(findDOMNode(instance))}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return DropTarget(DnDType.piece, squareTarget, collectTarget)(Target);\r\n}","import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { DragSource } from 'react-dnd';\r\n\r\nimport DnDType from 'constants/dnd-type';\r\n\r\nfunction handleDrag(props) {\r\n  if (props.onDrag) {\r\n    props.onDrag(props);\r\n  }\r\n\r\n  return props;\r\n}\r\n\r\nconst pieceSource = {\r\n  beginDrag: handleDrag,\r\n  endDrag: handleDrag\r\n};\r\n\r\nfunction collectSource(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nexport default function withDragSource(WrappedComponent) {\r\n  class Source extends React.Component {\r\n    componentDidMount() {\r\n      // TODO add a special preview\r\n      // this.props.connectDragPreview();\r\n    }\r\n    render() {\r\n      const { connectDragSource, connectDragPreview, ...props } = this.props;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          {...props}\r\n          ref={instance => connectDragSource(findDOMNode(instance))}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return DragSource(DnDType.piece, pieceSource, collectSource)(Source);\r\n}","import { DragDropContext } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\n\r\nimport _withDropTarget from './Target';\r\nimport _withDragSource from './Source';\r\n\r\nexport default DragDropContext(HTML5Backend);\r\n\r\nexport const withDropTarget = _withDropTarget;\r\nexport const withDragSource = _withDragSource;","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\n\r\nconst VIEW_BOX = '-2 0 50 50';\r\nconst PIECE_SIZE = '100%';\r\nconst setColour = c =>\r\n  c === Strings.colours.white\r\n    ? Strings.colours.whiteHex\r\n    : Strings.colours.blackHex;\r\n\r\nfunction colourSettingsForPieces(pieceName, colourString) {\r\n  const isWhite = colourString === Strings.colours.white;\r\n  const oppositeColourString = isWhite\r\n    ? Strings.colours.black\r\n    : Strings.colours.white;\r\n  const colour = setColour(colourString);\r\n  const oppositeColour = setColour(oppositeColourString);\r\n\r\n  switch (pieceName) {\r\n    case Strings.pieces.bishop:\r\n      return {\r\n        outline: { fill: colour },\r\n        detail: { stroke: oppositeColour }\r\n      };\r\n    case Strings.pieces.king:\r\n      return {\r\n        topCap: { fill: colour },\r\n        mainBody: { fill: colour },\r\n        lines: { stroke: oppositeColour }\r\n      };\r\n    case Strings.pieces.knight:\r\n      return {\r\n        face: { fill: oppositeColour, stroke: oppositeColour },\r\n        mane: { fill: oppositeColour },\r\n        mainBody: { fill: colour }\r\n      };\r\n    case Strings.pieces.pawn:\r\n      return { fill: colour };\r\n    case Strings.pieces.queen:\r\n      return { isWhite, mainBody: { fill: colour } };\r\n    case Strings.pieces.rook:\r\n      return { fill: colour };\r\n    default:\r\n      return {};\r\n  }\r\n}\r\n\r\nexport default function withColour(WrappedPiece) {\r\n  class PieceSvgWrapper extends React.Component {\r\n    render() {\r\n      const colourSettings = colourSettingsForPieces(\r\n        WrappedPiece.displayName,\r\n        this.props.colour\r\n      );\r\n      return (\r\n        <WrappedPiece\r\n          size={PIECE_SIZE}\r\n          viewBox={VIEW_BOX}\r\n          styleSettings={colourSettings}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return PieceSvgWrapper;\r\n}\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst bishopStyleOuter = {\r\n  opacity: 1,\r\n  fill: 'none',\r\n  fillRule: 'evenodd',\r\n  fillOpacity: 1,\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst bishopStyleOutline = {\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst bishopStyleDetail = {\r\n  fill: 'none',\r\n  stroke: '#ffffff',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst Bishop = ({ size, viewBox, styleSettings }) => {\r\n  const outline = { ...bishopStyleOutline, ...styleSettings.outline };\r\n  const detail = { ...bishopStyleDetail, ...styleSettings.detail };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={bishopStyleOuter}>\r\n        <g style={outline}>\r\n          <path d=\"M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z\" />\r\n          <path d=\"M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z\" />\r\n          <path d=\"M 25 8 A 2.5 2.5 0 1 1  20,8 A 2.5 2.5 0 1 1  25 8 z\" />\r\n        </g>\r\n        <path\r\n          d=\"M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18\"\r\n          style={detail}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nBishop.displayName = Strings.pieces.bishop;\r\n\r\nexport default withColour(Bishop);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst kingStyleOuter = {\r\n  fill: 'none',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst kingStylePath1 = {\r\n  fill: 'none',\r\n  stroke: '#000000',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst kingStyleTopCap = {\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  strokeLinecap: 'butt',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst kingStyleMainBody = {\r\n  fill: '#000000',\r\n  stroke: '#000000'\r\n};\r\n\r\nconst kingStylePath4 = {\r\n  fill: 'none',\r\n  stroke: '#000000',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst kingStyleLines = {\r\n  fill: 'none',\r\n  stroke: '#ffffff'\r\n};\r\n\r\nconst King = ({ size, viewBox, styleSettings }) => {\r\n  const topCap = { ...kingStyleTopCap, ...styleSettings.topCap };\r\n  const mainBody = { ...kingStyleMainBody, ...styleSettings.mainBody };\r\n  const lines = { ...kingStyleLines, ...styleSettings.lines };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={kingStyleOuter}>\r\n        <path d=\"M 22.5,11.63 L 22.5,6\" style={kingStylePath1} id=\"path6570\" />\r\n        <path\r\n          d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\"\r\n          style={topCap}\r\n        />\r\n        <path\r\n          d=\"M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z \"\r\n          style={mainBody}\r\n        />\r\n        <path d=\"M 20,8 L 25,8\" style={kingStylePath4} />\r\n        <path\r\n          d=\"M 32,29.5 C 32,29.5 40.5,25.5 38.03,19.85 C 34.15,14 25,18 22.5,24.5 L 22.51,26.6 L 22.5,24.5 C 20,18 9.906,14 6.997,19.85 C 4.5,25.5 11.85,28.85 11.85,28.85\"\r\n          style={lines}\r\n        />\r\n        <path\r\n          d=\"M 11.5,30 C 17,27 27,27 32.5,30 M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5 M 11.5,37 C 17,34 27,34 32.5,37\"\r\n          style={lines}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nKing.displayName = Strings.pieces.king;\r\n\r\nexport default withColour(King);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst knightStyleOuter = {\r\n  opacity: 1,\r\n  fill: 'none',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst knightStyleMainBody = {\r\n  fill: '#000000',\r\n  stroke: '#000000'\r\n};\r\n\r\nconst knightStyleFace = {\r\n  fill: '#ffffff',\r\n  stroke: '#ffffff'\r\n};\r\n\r\nconst knightStyleMane = {\r\n  fill: '#ffffff',\r\n  stroke: 'none'\r\n};\r\n\r\nconst Knight = ({ size, viewBox, styleSettings }) => {\r\n  const mane = { ...knightStyleMane, ...styleSettings.mane };\r\n  const face = { ...knightStyleFace, ...styleSettings.face };\r\n  const mainBody = { ...knightStyleMainBody, ...styleSettings.mainBody };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={knightStyleOuter}>\r\n        <path\r\n          d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\r\n          style={mainBody}\r\n        />\r\n        <path\r\n          d=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\r\n          style={mainBody}\r\n        />\r\n        <path\r\n          d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\r\n          style={face}\r\n        />\r\n        <path\r\n          d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\r\n          transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\r\n          style={face}\r\n        />\r\n        <path\r\n          d=\"M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49 32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L 37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5 L 24.55,10.4 z \"\r\n          style={mane}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nKnight.displayName = Strings.pieces.knight;\r\n\r\nexport default withColour(Knight);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst pawnStyle = {\r\n  opacity: 1,\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  fillRule: 'nonzero',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'miter',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst Pawn = ({ size, viewBox, styleSettings }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    version=\"1.1\"\r\n    viewBox={viewBox}\r\n    width={size}\r\n    height={size}\r\n  >\r\n    <path\r\n      d=\"M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z \"\r\n      style={{ ...pawnStyle, ...styleSettings }}\r\n    />\r\n  </svg>\r\n);\r\n\r\nPawn.displayName = Strings.pieces.pawn;\r\n\r\nexport default withColour(Pawn);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst queenStyleMainBody = {\r\n  opacity: 1,\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst queenStyleBlackCircles = {\r\n  fill: '#000000',\r\n  stroke: 'none'\r\n};\r\n\r\nconst queenStyleBlackSpikes = {\r\n  strokeLinecap: 'butt',\r\n  stroke: '#000000'\r\n};\r\n\r\nconst queenStylePath1 = {\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst queenStyleBlackBaseline = {\r\n  fill: 'none',\r\n  stroke: '#000000',\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst queenStyleBlackCrownlines = {\r\n  fill: 'none',\r\n  stroke: '#ffffff'\r\n};\r\n\r\nconst queenStyleWhitePath2 = {\r\n  fill: 'none'\r\n};\r\n\r\nconst Queen = ({ size, viewBox, styleSettings }) => {\r\n  if (styleSettings.isWhite)\r\n    return (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        version=\"1.1\"\r\n        viewBox={viewBox}\r\n        width={size}\r\n        height={size}\r\n      >\r\n        <g style={{ ...queenStyleMainBody, ...styleSettings.mainBody }}>\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(-1,-1)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(15.5,-5.5)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(32,-1)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(7,-4.5)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(24,-4)\"\r\n          />\r\n          <path\r\n            d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38,14 L 31,25 L 31,11 L 25.5,24.5 L 22.5,9.5 L 19.5,24.5 L 14,10.5 L 14,25 L 7,14 L 9,26 z \"\r\n            style={queenStylePath1}\r\n          />\r\n          <path\r\n            d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z \"\r\n            style={queenStylePath1}\r\n          />\r\n          <path\r\n            d=\"M 11.5,30 C 15,29 30,29 33.5,30\"\r\n            style={queenStyleWhitePath2}\r\n          />\r\n          <path\r\n            d=\"M 12,33.5 C 18,32.5 27,32.5 33,33.5\"\r\n            style={queenStyleWhitePath2}\r\n          />\r\n        </g>\r\n      </svg>\r\n    );\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={queenStyleMainBody}>\r\n        <g style={queenStyleBlackCircles}>\r\n          <circle cx=\"6\" cy=\"12\" r=\"2.75\" />\r\n          <circle cx=\"14\" cy=\"9\" r=\"2.75\" />\r\n          <circle cx=\"22.5\" cy=\"8\" r=\"2.75\" />\r\n          <circle cx=\"31\" cy=\"9\" r=\"2.75\" />\r\n          <circle cx=\"39\" cy=\"12\" r=\"2.75\" />\r\n        </g>\r\n        <path\r\n          d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38.5,13.5 L 31,25 L 30.7,10.9 L 25.5,24.5 L 22.5,10 L 19.5,24.5 L 14.3,10.9 L 14,25 L 6.5,13.5 L 9,26 z\"\r\n          style={queenStyleBlackSpikes}\r\n        />\r\n        <path\r\n          d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z\"\r\n          style={queenStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 11,38.5 A 35,35 1 0 0 34,38.5\"\r\n          style={queenStyleBlackBaseline}\r\n        />\r\n        <path\r\n          d=\"M 11,29 A 35,35 1 0 1 34,29\"\r\n          style={queenStyleBlackCrownlines}\r\n        />\r\n        <path d=\"M 12.5,31.5 L 32.5,31.5\" style={queenStyleBlackCrownlines} />\r\n        <path\r\n          d=\"M 11.5,34.5 A 35,35 1 0 0 33.5,34.5\"\r\n          style={queenStyleBlackCrownlines}\r\n        />\r\n        <path\r\n          d=\"M 10.5,37.5 A 35,35 1 0 0 34.5,37.5\"\r\n          style={queenStyleBlackCrownlines}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nQueen.displayName = Strings.pieces.queen;\r\n\r\nexport default withColour(Queen);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst rookStyleMainBody = {\r\n  opacity: 1,\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst rookStylePath1 = {\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst rookStylePath2 = {\r\n  strokeLinecap: 'butt',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst rookStylePath3 = {\r\n  fill: 'none',\r\n  stroke: '#ffffff',\r\n  strokeWidth: 1,\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst Rook = ({ size, viewBox, styleSettings }) => {\r\n  const mainBody = { ...rookStyleMainBody, ...styleSettings };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={mainBody}>\r\n        <path\r\n          d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z \"\r\n          style={rookStylePath2}\r\n        />\r\n        <path\r\n          d=\"M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 L 11,14 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path d=\"M 12,35.5 L 33,35.5 L 33,35.5\" style={rookStylePath3} />\r\n        <path d=\"M 13,31.5 L 32,31.5\" style={rookStylePath3} />\r\n        <path d=\"M 14,29.5 L 31,29.5\" style={rookStylePath3} />\r\n        <path d=\"M 14,16.5 L 31,16.5\" style={rookStylePath3} />\r\n        <path d=\"M 11,14 L 34,14\" style={rookStylePath3} />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nRook.displayName = Strings.pieces.rook;\r\n\r\nexport default withColour(Rook);\r\n","import Bishop from './Bishop';\r\nimport King from './King';\r\nimport Knight from './Knight';\r\nimport Pawn from './Pawn';\r\nimport Queen from './Queen';\r\nimport Rook from './Rook';\r\n\r\nexport default {\r\n  Bishop,\r\n  King,\r\n  Knight,\r\n  Pawn,\r\n  Queen,\r\n  Rook\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { withDragSource } from 'components/dragAndDrop';\r\nimport SVGS from './pieceSvgs';\r\nimport Strings from 'constants/strings';\r\nimport { objectsAreEqual } from 'utils/common';\r\n\r\nimport './piece.scss';\r\n\r\nclass Piece extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    const isDraggingChanged = nextProps.isDragging !== this.props.isDragging;\r\n    const dataChanged = !objectsAreEqual(nextProps, this.props);\r\n\r\n    return isDraggingChanged || dataChanged;\r\n  }\r\n\r\n  renderCoolChessPieceSvg(pieceName, pieceColour) {\r\n    switch (pieceName) {\r\n      case Strings.pieces.bishop:\r\n        return <SVGS.Bishop colour={pieceColour} />;\r\n      case Strings.pieces.king:\r\n        return <SVGS.King colour={pieceColour} />;\r\n      case Strings.pieces.knight:\r\n        return <SVGS.Knight colour={pieceColour} />;\r\n      case Strings.pieces.pawn:\r\n        return <SVGS.Pawn colour={pieceColour} />;\r\n      case Strings.pieces.queen:\r\n        return <SVGS.Queen colour={pieceColour} />;\r\n      case Strings.pieces.rook:\r\n        return <SVGS.Rook colour={pieceColour} />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, colour, isDragging } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={classNames('piece', {\r\n          [`${colour}-${name}`]: true,\r\n          'piece--dragging': isDragging\r\n        })}\r\n      >\r\n        {this.renderCoolChessPieceSvg(name, colour)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withDragSource(Piece);\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { withDropTarget } from 'components/dragAndDrop';\r\nimport Piece from 'components/piece/Piece';\r\n\r\nimport './square.scss';\r\n\r\nclass Square extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleDragPiece = this.handleDragPiece.bind(this);\r\n  }\r\n\r\n  handleDragPiece(piece) {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(this.props.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      rank,\r\n      file,\r\n      isSelected,\r\n      isPotentialMove,\r\n      isSpecialMove,\r\n      isInCheck,\r\n      contains,\r\n      onClick\r\n    } = this.props;\r\n\r\n    const classes = classNames('square', {\r\n      selected: isSelected,\r\n      'potential-move': isPotentialMove && !contains,\r\n      'potential-take': isPotentialMove && contains,\r\n      'special-move': isSpecialMove,\r\n      'in-check': isInCheck,\r\n      'is-over': this.props.isOver,\r\n      'can-drop': this.props.canDrop,\r\n      [`rank-${rank}`]: true,\r\n      [`file-${file}`]: true\r\n    });\r\n\r\n    return (\r\n      <div id={id} className={classes} onClick={() => onClick(id)}>\r\n        {!!contains && <Piece {...contains} onDrag={this.handleDragPiece} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withDropTarget(Square);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Strings from 'constants/strings';\r\nimport { performSpecialMove } from 'actions/board';\r\n\r\nimport './promotionOptions.scss';\r\n\r\nconst promotionChoices = [\r\n  Strings.pieces.rook,\r\n  Strings.pieces.knight,\r\n  Strings.pieces.bishop,\r\n  Strings.pieces.queen\r\n];\r\n\r\nconst PromotionOptions = ({ promotionAt, actions }) => {\r\n  if (!promotionAt) return null;\r\n  const promotion = {\r\n    ...promotionAt,\r\n    type: Strings.specialMoves.promotion\r\n  };\r\n  return (\r\n    <div id=\"promotion-options-container\">\r\n      <div>Please select a piece to promote to: </div>\r\n      <ul className=\"list column\">\r\n        {promotionChoices.map((option) => {\r\n          const promoteTo = () =>\r\n            actions.performSpecialMove({ ...promotion, promoteTo: option });\r\n          return (\r\n            <li key={option} id={`promote-to-${option}`}>\r\n              <button type=\"button\" className=\"button\" onClick={promoteTo}>\r\n                {option}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  promotionAt: state.board.promotionAt\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators({ performSpecialMove }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PromotionOptions);\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport Portal from 'components/Portal';\r\nimport Scales from 'components/scales/Scales';\r\nimport Square from 'components/square/Square';\r\nimport PromotionOptions from 'components/promotionOptions/PromotionOptions';\r\n\r\nimport Constants from 'constants/index';\r\nimport { reverseArray, capitalise } from 'utils/common';\r\nimport { getWinningPlayerColour } from 'utils/game';\r\nimport './board.scss';\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSquareSelection = this.handleSquareSelection.bind(this);\r\n    this.handleCanDrop = this.handleCanDrop.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n  }\r\n\r\n  handleSquareSelection(squareId) {\r\n    const {\r\n      squares,\r\n      potentialMoves,\r\n      specialMoves,\r\n      selectedSquareId,\r\n      actions\r\n    } = this.props;\r\n    const selectedSquare = squares.find((x) => x.id === selectedSquareId);\r\n    const square = squares.find((x) => x.id === squareId);\r\n    const isSameSquare = selectedSquareId === squareId;\r\n    const currentPlayerColour = this.props.currentPlayerColour;\r\n    const isPotentialMove = potentialMoves.some((x) => x === squareId);\r\n    const specialMove = specialMoves.find((x) => x.squareId === squareId);\r\n    const isSpecialMove = !!specialMove;\r\n\r\n    if (!selectedSquare && !square.contains) return;\r\n\r\n    if (selectedSquare && !square.contains)\r\n      return isSpecialMove\r\n        ? actions.performSpecialMove(specialMove)\r\n        : isPotentialMove\r\n          ? actions.moveSelectedPiece(squareId)\r\n          : console.log(\r\n              '%c invalid move',\r\n              'color: red; font-size: 22px;',\r\n              selectedSquare,\r\n              square\r\n            );\r\n\r\n    if (!selectedSquare && square.contains.colour !== currentPlayerColour)\r\n      return;\r\n\r\n    if (!selectedSquare && square.contains.colour === currentPlayerColour)\r\n      return actions.selectBoardSquare(squareId);\r\n\r\n    if (selectedSquare && isSameSquare) return actions.selectBoardSquare(null);\r\n\r\n    if (selectedSquare && square.contains.colour === currentPlayerColour)\r\n      return actions.selectBoardSquare(squareId);\r\n\r\n    if (selectedSquare && square.contains.colour !== currentPlayerColour)\r\n      return isSpecialMove\r\n        ? actions.performSpecialMove(specialMove)\r\n        : isPotentialMove\r\n          ? actions.takePiece(squareId)\r\n          : console.log(\r\n              '%c invalid take',\r\n              'color: red; font-size: 22px;',\r\n              selectedSquare,\r\n              square\r\n            );\r\n\r\n    console.log(\r\n      '%c square selection case not handled!',\r\n      'color: red',\r\n      `Selected square: ${selectedSquareId}, Target square: ${squareId}`\r\n    );\r\n  }\r\n\r\n  handleCanDrop(squareId) {\r\n    const { potentialMoves, specialMoves } = this.props;\r\n    const isPotentialMove = potentialMoves.some((x) => x === squareId);\r\n    const specialMove = specialMoves.find((x) => x.squareId === squareId);\r\n    const isSpecialMove = !!specialMove;\r\n\r\n    return isPotentialMove || isSpecialMove;\r\n  }\r\n\r\n  handleDrop(squareId) {\r\n    this.handleSquareSelection(squareId);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      themeClass,\r\n      squares,\r\n      selectedSquareId,\r\n      currentPlayerColour,\r\n      potentialMoves,\r\n      specialMoves,\r\n      checkStatus,\r\n      isReversed,\r\n      isReadOnly,\r\n      nextMove\r\n    } = this.props;\r\n\r\n    const boardSquares = isReversed ? reverseArray(squares) : squares;\r\n    const boardFiles = isReversed\r\n      ? reverseArray(Constants.files)\r\n      : Constants.files;\r\n    const boardRanks = isReversed\r\n      ? reverseArray(Constants.ranks)\r\n      : Constants.ranks;\r\n\r\n    const checkedKingSquareId =\r\n      !!checkStatus.attackers.length && checkStatus.kingSquare.id;\r\n    const isCheck = !!checkedKingSquareId;\r\n    const isLocked = isReadOnly || checkStatus.isCheckmate;\r\n    const onSquareClick = isLocked ? () => null : this.handleSquareSelection;\r\n\r\n    const dropActions = {\r\n      canDrop: this.handleCanDrop,\r\n      onDrop: this.handleDrop\r\n    };\r\n    console.groupCollapsed('BOARD RENDER');\r\n    console.log('selectedSquareId', selectedSquareId);\r\n    console.log('boardSquares', boardSquares);\r\n    console.log('props', this.props);\r\n    console.log('isLocked', isLocked);\r\n    console.groupEnd();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={style}\r\n          className={classNames('chess-board', themeClass, {\r\n            'read-only': isLocked\r\n          })}\r\n        >\r\n          <Scales files={boardFiles} ranks={boardRanks} />\r\n          {boardSquares.map((o) => {\r\n            let isPotentialMove = potentialMoves.some((x) => x === o.id);\r\n            isPotentialMove =\r\n              isPotentialMove &&\r\n              (!isReadOnly || (isReadOnly && nextMove.to.id === o.id));\r\n\r\n            let isSpecialMove = specialMoves.some((x) => x.squareId === o.id);\r\n            isSpecialMove =\r\n              isSpecialMove &&\r\n              (!isReadOnly || (isReadOnly && nextMove.to.id === o.id));\r\n\r\n            return (\r\n              <Square\r\n                key={o.id}\r\n                {...o}\r\n                isPotentialMove={isPotentialMove}\r\n                isSpecialMove={isSpecialMove}\r\n                isInCheck={o.id === checkedKingSquareId}\r\n                isSelected={o.id === selectedSquareId}\r\n                onClick={onSquareClick}\r\n                dropActions={dropActions}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <Portal targetSelector=\"#chess-game-status\">\r\n          {!checkStatus.isCheckmate && (\r\n            <React.Fragment>\r\n              <PromotionOptions />\r\n              {`${capitalise(currentPlayerColour)}'s turn`}\r\n              {isCheck && `\\n${capitalise(currentPlayerColour)} is in Check!`}\r\n            </React.Fragment>\r\n          )}\r\n          {checkStatus.isCheckmate &&\r\n            `Winner: ${getWinningPlayerColour(checkStatus.kingSquare)}`}\r\n        </Portal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import { possibleMovesForSelectedPiece } from 'utils/piece';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\n\r\nexport function getPossibleMovesForPiece(board, squares, squareId) {\r\n  const fakeBoardState = {\r\n    ...board,\r\n    selectedSquareId: squareId,\r\n    squares\r\n  };\r\n  return {\r\n    possibleMoves: possibleMovesForSelectedPiece(fakeBoardState),\r\n    possibleSMoves: availableSpecialMovesForSelectedPiece(fakeBoardState)\r\n  };\r\n}\r\n\r\nexport function getAllUniquePossibleMoves(board, pSquares, isCurrent = true) {\r\n  const { moves, squares } = board;\r\n  const fakeMoves = isCurrent ? moves : moves.slice(1);\r\n  const fakeBoard = {\r\n    ...board,\r\n    moves: fakeMoves\r\n  };\r\n  const ids = pSquares.reduce((acc, sq) => {\r\n    const { possibleMoves, possibleSMoves } = getPossibleMovesForPiece(\r\n      fakeBoard,\r\n      squares,\r\n      sq.id\r\n    );\r\n    return [...acc, ...possibleMoves, ...possibleSMoves];\r\n  }, []);\r\n\r\n  return new Set(ids);\r\n}\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\nconst base = [\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  50,\r\n  10,\r\n  10,\r\n  20,\r\n  30,\r\n  30,\r\n  20,\r\n  10,\r\n  10,\r\n  5,\r\n  5,\r\n  10,\r\n  25,\r\n  25,\r\n  10,\r\n  5,\r\n  5,\r\n  0,\r\n  0,\r\n  0,\r\n  20,\r\n  20,\r\n  0,\r\n  0,\r\n  0,\r\n  5,\r\n  -5,\r\n  -10,\r\n  0,\r\n  0,\r\n  -10,\r\n  -5,\r\n  5,\r\n  5,\r\n  10,\r\n  10,\r\n  -20,\r\n  -20,\r\n  10,\r\n  10,\r\n  5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\nconst base = [\r\n  -50,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -50,\r\n  -40,\r\n  -20,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -20,\r\n  -40,\r\n  -30,\r\n  0,\r\n  10,\r\n  15,\r\n  15,\r\n  10,\r\n  0,\r\n  -30,\r\n  -30,\r\n  5,\r\n  15,\r\n  20,\r\n  20,\r\n  15,\r\n  5,\r\n  -30,\r\n  -30,\r\n  0,\r\n  15,\r\n  20,\r\n  20,\r\n  15,\r\n  0,\r\n  -30,\r\n  -30,\r\n  5,\r\n  10,\r\n  15,\r\n  15,\r\n  10,\r\n  5,\r\n  -30,\r\n  -40,\r\n  -20,\r\n  0,\r\n  5,\r\n  5,\r\n  0,\r\n  -20,\r\n  -40,\r\n  -50,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -50\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\n\r\nconst base = [\r\n  -20,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -20,\r\n  -10,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -10,\r\n  -10,\r\n  0,\r\n  5,\r\n  10,\r\n  10,\r\n  5,\r\n  0,\r\n  -10,\r\n  -10,\r\n  5,\r\n  5,\r\n  10,\r\n  10,\r\n  5,\r\n  5,\r\n  -10,\r\n  -10,\r\n  0,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  0,\r\n  -10,\r\n  -10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  -10,\r\n  -10,\r\n  5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  5,\r\n  -10,\r\n  -20,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -10,\r\n  -20\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\n\r\nconst base = [\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  5,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  10,\r\n  5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -5,\r\n  0,\r\n  0,\r\n  0,\r\n  5,\r\n  5,\r\n  0,\r\n  0,\r\n  0\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\n\r\nconst base = [\r\n  -20,\r\n  -10,\r\n  -10,\r\n  -5,\r\n  -5,\r\n  -10,\r\n  -10,\r\n  -20,\r\n  -10,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -10,\r\n  -10,\r\n  0,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  0,\r\n  -10,\r\n  -5,\r\n  0,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  0,\r\n  -5,\r\n  0,\r\n  0,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  0,\r\n  -5,\r\n  -10,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  5,\r\n  0,\r\n  -10,\r\n  -10,\r\n  0,\r\n  5,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  -10,\r\n  -20,\r\n  -10,\r\n  -10,\r\n  -5,\r\n  -5,\r\n  -10,\r\n  -10,\r\n  -20\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import { splitMirrorAndJoin } from 'utils/common';\r\nconst base = [\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -50,\r\n  -50,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -50,\r\n  -50,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -50,\r\n  -50,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -50,\r\n  -50,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -20,\r\n  -30,\r\n  -30,\r\n  -40,\r\n  -40,\r\n  -30,\r\n  -30,\r\n  -20,\r\n  -10,\r\n  -20,\r\n  -20,\r\n  -20,\r\n  -20,\r\n  -20,\r\n  -20,\r\n  -10,\r\n  20,\r\n  20,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  20,\r\n  20,\r\n  20,\r\n  30,\r\n  10,\r\n  0,\r\n  0,\r\n  10,\r\n  30,\r\n  20\r\n];\r\n\r\nexport const white = Object.freeze(base);\r\nexport const black = splitMirrorAndJoin(base);\r\n","import Strings from 'constants/strings';\r\n\r\nimport * as pawns from './pawn';\r\nimport * as knights from './knight';\r\nimport * as bishops from './bishop';\r\nimport * as rooks from './rook';\r\nimport * as queens from './queen';\r\nimport * as kings from './king-middle';\r\n\r\nconst { pieces } = Strings;\r\n\r\nfunction getTable(name) {\r\n  switch (name) {\r\n    case pieces.pawn:\r\n      return pawns;\r\n    case pieces.knight:\r\n      return knights;\r\n    case pieces.bishop:\r\n      return bishops;\r\n    case pieces.rook:\r\n      return rooks;\r\n    case pieces.queen:\r\n      return queens;\r\n    case pieces.king:\r\n      return kings;\r\n    default:\r\n      return {};\r\n  }\r\n}\r\n\r\nexport default function tableInteragator(square) {\r\n  const { id, contains } = square;\r\n  const { name, colour } = contains;\r\n\r\n  const table = getTable(name);\r\n  return table[colour][id];\r\n}\r\n","import Strings from 'constants/strings';\r\nimport { files as FILES } from 'constants/board';\r\n\r\nconst getPawns = (colour) => (x) =>\r\n  x.contains &&\r\n  x.contains.colour === colour &&\r\n  x.contains.name === Strings.pieces.pawn;\r\n\r\nconst getPawnAlignment = (pieces) =>\r\n  pieces.reduce((p, c) => {\r\n    const value = p.get(c.file) || 0;\r\n    return p.set(c.file, value + 1);\r\n  }, new Map([]));\r\n\r\nconst getDoubledCount = (m) =>\r\n  [...m.values()].reduce((p, c) => (c > 1 ? p + 1 : p), 0);\r\n\r\nconst getIsolatedCount = (m) =>\r\n  [...m.keys()].reduce((p, c) => {\r\n    const index = FILES.findIndex((x) => x === c);\r\n    const left = FILES[index - 1];\r\n    const right = FILES[index + 1];\r\n\r\n    return (!left && m.has(right)) ||\r\n      (!right && m.has(left)) ||\r\n      (m.has(left) || m.has(right))\r\n      ? p\r\n      : p + 1;\r\n  }, 0);\r\n\r\nexport default function checkPawnHealth(squares) {\r\n  const wp = squares.filter(getPawns(Strings.colours.white));\r\n  const bp = squares.filter(getPawns(Strings.colours.black));\r\n\r\n  const wAlign = getPawnAlignment(wp);\r\n  const bAlign = getPawnAlignment(bp);\r\n\r\n  const doubled = getDoubledCount(wAlign) - getDoubledCount(bAlign);\r\n  const isolated = getIsolatedCount(wAlign) - getIsolatedCount(bAlign);\r\n\r\n  const blocked = 0;\r\n\r\n  return doubled + blocked + isolated;\r\n}\r\n","import Strings from 'constants/strings';\r\n\r\nimport getPieceSquareValue from './piece-sqaure-tables';\r\nimport * as PossibleMoves from './possible-moves';\r\nimport checkPawnHealth from './pawn-health';\r\n\r\nconst { pieces: Pieces } = Strings;\r\n\r\nconst getPieceCount = (arr, pieceName) =>\r\n  arr.filter((x) => x.contains.name === pieceName).length;\r\n\r\nconst getScoreForPiece = (weight, pieceName) => (aSq, bSq) =>\r\n  weight * (getPieceCount(aSq, pieceName) - getPieceCount(bSq, pieceName));\r\n\r\nconst scoreKings = getScoreForPiece(20000, Pieces.king);\r\nconst scoreQueens = getScoreForPiece(900, Pieces.queen);\r\nconst scoreRooks = getScoreForPiece(500, Pieces.rook);\r\nconst scoreBishops = getScoreForPiece(330, Pieces.bishop);\r\nconst scoreKnights = getScoreForPiece(320, Pieces.knight);\r\nconst scorePawns = getScoreForPiece(100, Pieces.pawn);\r\n\r\nexport default function evaluateBoard(playingColour, board) {\r\n  const { squares } = board;\r\n\r\n  const isWhite = playingColour === Strings.colours.white;\r\n  const sign = isWhite ? 1 : -1;\r\n\r\n  const wp = squares.filter(\r\n    (x) => x.contains && x.contains.colour === Strings.colours.white\r\n  );\r\n  const bp = squares.filter(\r\n    (x) => x.contains && x.contains.colour === Strings.colours.black\r\n  );\r\n\r\n  // KQRBNP counts\r\n  const counts =\r\n    scoreKings(wp, bp) +\r\n    scoreQueens(wp, bp) +\r\n    scoreRooks(wp, bp) +\r\n    scoreBishops(wp, bp) +\r\n    scoreKnights(wp, bp) +\r\n    scorePawns(wp, bp);\r\n\r\n  // Account for piece-square rating\r\n  const pieceSquare = squares\r\n    .filter((x) => x.contains)\r\n    .reduce((v, sq) => v + getPieceSquareValue(sq), 0);\r\n\r\n  // Doubled, Blocked, and Isolated pawns\r\n  const pawnHealth = 50 * checkPawnHealth(squares);\r\n\r\n  // Mobility\r\n  const wpMoves = PossibleMoves.getAllUniquePossibleMoves(board, wp, isWhite);\r\n  const bpMoves = PossibleMoves.getAllUniquePossibleMoves(board, bp, !isWhite);\r\n  const mobility = 10 * (wpMoves.size - bpMoves.size);\r\n\r\n  const score = (counts - pawnHealth + mobility) * sign + pieceSquare;\r\n  console.groupCollapsed('score', score);\r\n  console.log('couunts', counts);\r\n  console.log('pieceSquare', pieceSquare);\r\n  console.log('mobility', wpMoves, bpMoves, mobility);\r\n  console.groupEnd();\r\n\r\n  return score;\r\n}\r\n","import { getMoveWithBestScore, getKeyForMaxValue } from 'utils/common';\r\nimport { getCurrentPlayerColour } from 'utils/game';\r\n\r\nimport performMovementFromCurrentToTarget from 'utils/squaresUpdate';\r\nimport * as PossibleMoves from './possible-moves';\r\nimport evaluateBoard from './evaluate-board';\r\n\r\nfunction selectNextMove(board) {\r\n  const { moves, squares } = board;\r\n  const currentColour = getCurrentPlayerColour(moves);\r\n  const pieceSquares = squares.filter(\r\n    (x) => x.contains && x.contains.colour === currentColour\r\n  );\r\n\r\n  const pieceMoves = pieceSquares.reduce((p, sq) => {\r\n    const squareId = sq.id;\r\n    const {\r\n      possibleMoves,\r\n      possibleSMoves\r\n    } = PossibleMoves.getPossibleMovesForPiece(board, squares, squareId);\r\n\r\n    const moveResults = possibleMoves.reduce(\r\n      (results, targetId) =>\r\n        results.set(\r\n          targetId,\r\n          evaluateBoard(\r\n            currentColour,\r\n            performMovementFromCurrentToTarget(board, squareId, targetId)\r\n          )\r\n        ),\r\n      new Map([])\r\n    );\r\n\r\n    // TODO will require refactor of board-specialMove reducer\r\n    const specialMoveResults = possibleSMoves.map((targetId) => targetId);\r\n\r\n    return [...p, { squareId, moveResults, specialMoveResults }];\r\n  }, []);\r\n\r\n  const bestPieceMove = pieceMoves.reduce((bestMove, curr) =>\r\n    getMoveWithBestScore(bestMove, curr)\r\n  );\r\n  const bestTargetId = getKeyForMaxValue(bestPieceMove.moveResults);\r\n  const engineMoveChoice = {\r\n    fromId: bestPieceMove.squareId,\r\n    toId: bestTargetId\r\n  };\r\n\r\n  console.groupCollapsed('%c engine in progress', 'color: magenta');\r\n  console.log('input > ', board);\r\n  console.log('current player > ', currentColour);\r\n  console.log('pieces > ', pieceSquares);\r\n  console.log('moves for pieces > ', pieceMoves);\r\n  console.log('best >> ', bestPieceMove);\r\n  console.log('output > ', engineMoveChoice);\r\n  console.groupEnd();\r\n\r\n  return engineMoveChoice;\r\n  /* TODO\r\n   *\r\n   * Account for next player taking pieces!\r\n   * Account for special moves!\r\n   * \r\n   */\r\n}\r\n\r\nexport default {\r\n  selectNextMove\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Board from 'components/board/Board';\r\nimport DragAndDropContext from 'components/dragAndDrop';\r\n\r\nimport * as actions from 'actions/board';\r\nimport { isWhitesTurn, getCurrentPlayerColour } from 'utils/game';\r\nimport {\r\n  possibleMovesForSelectedPiece,\r\n  getCheckStatusForColour\r\n} from 'utils/piece';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\nimport {\r\n  selectNextMoveSquareId,\r\n  createBoardLayoutForMoveList\r\n} from 'utils/playback';\r\nimport SJEngine from 'utils/engine';\r\n\r\nclass BoardContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      computerSelected: null\r\n    };\r\n    this.timer = null;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { vsComputer, moves } = this.props.board;\r\n    const { isComputer, isComputerBlack } = vsComputer;\r\n    const isWhite = isWhitesTurn(moves.length);\r\n    const notComputerTurn =\r\n      (isComputerBlack && isWhite) || (!isComputerBlack && !isWhite);\r\n\r\n    if (!isComputer || notComputerTurn) return;\r\n\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => this.makeComputerMove(), 1000);\r\n  }\r\n\r\n  makeComputerMove() {\r\n    const { moves, squares } = this.props.board;\r\n\r\n    const currentPlayerColour = getCurrentPlayerColour(moves);\r\n    const checkStatus = getCheckStatusForColour(currentPlayerColour, squares);\r\n    if (checkStatus && checkStatus.isCheckmate) return;\r\n\r\n    const computerSelected = SJEngine.selectNextMove(this.props.board);\r\n    if (!computerSelected) return;\r\n\r\n    this.props.actions.performComputerMove(computerSelected);\r\n  }\r\n\r\n  render() {\r\n    const { board, ...props } = this.props;\r\n    const activeMoveIndex = board.playback.sliderPosition;\r\n    const isReadOnly = activeMoveIndex !== board.moves.length;\r\n    /*  For Playback\r\n   *  Here we need to calculate the moves, squares, and set the selectedSquareId\r\n   *  for the currently active move according to the playback.sliderPosition\r\n  */\r\n    const moves = board.moves.slice(0, activeMoveIndex);\r\n    const [nextMove] = board.moves.slice(activeMoveIndex, activeMoveIndex + 1);\r\n\r\n    const selectedSquareId = !isReadOnly\r\n      ? board.selectedSquareId\r\n      : selectNextMoveSquareId(board.moves, activeMoveIndex);\r\n\r\n    const squares = !isReadOnly\r\n      ? board.squares\r\n      : createBoardLayoutForMoveList(moves);\r\n\r\n    const currentBoardForDisplay = {\r\n      ...board,\r\n      selectedSquareId,\r\n      moves,\r\n      squares\r\n    };\r\n\r\n    const currentPlayerColour = getCurrentPlayerColour(moves);\r\n    const potentialMoves = possibleMovesForSelectedPiece(\r\n      currentBoardForDisplay\r\n    );\r\n    const specialMoves = availableSpecialMovesForSelectedPiece(\r\n      currentBoardForDisplay\r\n    );\r\n    const checkStatus = getCheckStatusForColour(currentPlayerColour, squares);\r\n    const isReversed = board.reverseBoard && !isWhitesTurn(moves.length);\r\n\r\n    return (\r\n      <Board\r\n        {...props}\r\n        {...currentBoardForDisplay}\r\n        currentPlayerColour={currentPlayerColour}\r\n        nextMove={nextMove}\r\n        potentialMoves={potentialMoves}\r\n        specialMoves={specialMoves}\r\n        checkStatus={checkStatus}\r\n        isReversed={isReversed}\r\n        isReadOnly={isReadOnly}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeClass: state.theme.board,\r\n  board: state.board\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(\r\n  DragAndDropContext(BoardContainer)\r\n);\r\n","import React from 'react';\r\n\r\nimport Piece from 'components/piece/Piece';\r\n\r\nimport './graveyard.scss';\r\n\r\nconst Graveyard = ({ pieces }) => (\r\n  <div className=\"graveyard\">\r\n    {pieces.map((p, i) => <Piece key={i} {...p} />)}\r\n  </div>\r\n);\r\n\r\nexport default Graveyard;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Graveyard from 'components/graveyard/Graveyard';\r\n\r\nimport Constants from 'constants/index';\r\nimport { isWhitesTurn } from 'utils/game';\r\n\r\nconst DualGraveyards = ({ isReversed, whitePieces, blackPieces }) => (\r\n  <div id=\"paired-graveyards\">\r\n    <Graveyard pieces={isReversed ? blackPieces : whitePieces} />\r\n    <Graveyard pieces={isReversed ? whitePieces : blackPieces} />\r\n  </div>\r\n);\r\n\r\nconst getCurrentMovesForPlaybackPosition = state => {\r\n  const activeMoveIndex = state.board.playback.sliderPosition;\r\n  return state.board.moves.slice(0, activeMoveIndex);\r\n};\r\n\r\nconst getPiecesForColour = (state, colour) => {\r\n  const moves = getCurrentMovesForPlaybackPosition(state);\r\n  return state.board.graveyard.filter(\r\n    x =>\r\n      x.colour === colour &&\r\n      moves.some(y => y.captured && y.captured.id === x.id)\r\n  );\r\n};\r\n\r\nconst resolveBoardDirection = state => {\r\n  const moves = getCurrentMovesForPlaybackPosition(state);\r\n  return state.board.reverseBoard && !isWhitesTurn(moves.length);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isReversed: resolveBoardDirection(state),\r\n  whitePieces: getPiecesForColour(state, Constants.Strings.colours.white),\r\n  blackPieces: getPiecesForColour(state, Constants.Strings.colours.black)\r\n});\r\n\r\nexport default connect(mapStateToProps)(DualGraveyards);\r\n","import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport './moveList.scss';\r\n\r\nconst MoveItem = ({ pgn, isActive, onClick }) => (\r\n  <li className={classNames({ active: isActive })}>\r\n    <button\r\n      type=\"button\"\r\n      className=\"button\"\r\n      disabled={isActive}\r\n      onClick={onClick}\r\n    >\r\n      {pgn}\r\n    </button>\r\n  </li>\r\n);\r\n\r\nconst MoveList = ({ moves, activeMoveIndex, ...props }) => {\r\n  return (\r\n    <div id=\"move-list\">\r\n      <ul className=\"list column two\">\r\n        <li key=\"WHITE\" className=\"title\">\r\n          {Strings.colours.white}\r\n        </li>\r\n        <li key=\"BLACK\" className=\"title\">\r\n          {Strings.colours.black}\r\n        </li>\r\n        {moves.map((move, i) => {\r\n          const onClick = !!props.onSelect\r\n            ? () => props.onSelect('PLACEHOLDER NAME', i)\r\n            : () => null;\r\n          return (\r\n            <MoveItem\r\n              key={move.id}\r\n              isActive={i === activeMoveIndex}\r\n              onClick={onClick}\r\n              {...move}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoveList.propTypes = {\r\n  moves: PropTypes.arrayOf(PropTypes.object),\r\n  activeMoveIndex: PropTypes.number,\r\n  onSelect: PropTypes.func\r\n};\r\n\r\nexport default MoveList;\r\n","import { connect } from 'react-redux';\r\n\r\nimport MoveList from 'components/moveList/MoveList';\r\n\r\nimport { updateSlidePosition } from 'actions/playback';\r\nimport { mapMovesToPGN } from 'utils/pgn';\r\n\r\nconst mapStateToProps = state => ({\r\n  moves: mapMovesToPGN(state.board.moves),\r\n  activeMoveIndex: state.board.playback.sliderPosition\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onSelect: updateSlidePosition\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveList);\r\n","export default {\r\n  play: '\\u25B6',\r\n  pause: '\\u2223\\u2223',\r\n  back: '\\u2039',\r\n  forward: '\\u203A'\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nimport Icons from 'constants/icons';\r\nimport { SLIDER_START } from 'constants/slider';\r\nimport './playback.scss';\r\n\r\nconst PlaybackButton = (props) => (\r\n  <button\r\n    type=\"button\"\r\n    className={classNames(\r\n      'button-icon ripple playback-button',\r\n      props.className\r\n    )}\r\n    icon={props.icon}\r\n    disabled={props.disabled}\r\n    onClick={props.onClick}\r\n  />\r\n);\r\n\r\nconst STEP_FORWARD = 1;\r\nconst STEP_BACK = -1;\r\n\r\nclass Playback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPlaying: false\r\n    };\r\n    this.timer = null;\r\n    this.previousPosition = null;\r\n\r\n    this.handleTogglePlay = this.handleTogglePlay.bind(this);\r\n    this.createSliderStepHandler = this.createSliderStepHandler.bind(this);\r\n    this.handleSliderChange = this.handleSliderChange.bind(this);\r\n  }\r\n\r\n  handleTogglePlay() {\r\n    this.setState(\r\n      (prev) => ({ isPlaying: !prev.isPlaying }),\r\n      () => {\r\n        clearInterval(this.timer);\r\n        if (!this.state.isPlaying) return;\r\n        if (this.props.sliderPosition === this.props.sliderMaximum)\r\n          this.props.actions.onSlide(this.props.name, SLIDER_START);\r\n\r\n        this.timer = setInterval(() => {\r\n          if (this.previousPosition === this.props.sliderMaximum)\r\n            return this.stopPlaying();\r\n          this.previousPosition = this.props.sliderPosition;\r\n          this.props.actions.onStepForward(this.props.name, STEP_FORWARD);\r\n        }, this.props.playbackInterval);\r\n      }\r\n    );\r\n  }\r\n\r\n  stopPlaying() {\r\n    clearInterval(this.timer);\r\n    this.previousPosition = null;\r\n    this.setState({ isPlaying: false });\r\n  }\r\n\r\n  createSliderStepHandler(stepDirection) {\r\n    const handler =\r\n      stepDirection === STEP_FORWARD\r\n        ? this.props.actions.onStepForward\r\n        : this.props.actions.onStepBack;\r\n    return () => handler(this.props.name, stepDirection);\r\n  }\r\n\r\n  handleSliderChange(event) {\r\n    const { name, value } = event.target;\r\n    this.props.actions.onSlide(name, Number(value));\r\n  }\r\n\r\n  render() {\r\n    const { isPlaying } = this.state;\r\n    const {\r\n      name,\r\n      isDisabled,\r\n      isHidden,\r\n      sliderPosition,\r\n      sliderMaximum\r\n    } = this.props;\r\n\r\n    if (isHidden) return null;\r\n\r\n    const AT_THE_START = sliderPosition === SLIDER_START;\r\n    const AT_THE_END = sliderPosition === sliderMaximum;\r\n    const toggleIcon = isPlaying ? Icons.pause : Icons.play;\r\n    const width = sliderPosition / sliderMaximum * 100;\r\n    const sliderStyle = {\r\n      backgroundImage: `linear-gradient(90deg, currentcolor, currentcolor ${width}%, transparent ${width}%)`\r\n    };\r\n\r\n    return (\r\n      <div id=\"playback-control\">\r\n        <div className=\"button-group\">\r\n          <PlaybackButton\r\n            className=\"playback-toggle-play\"\r\n            icon={toggleIcon}\r\n            onClick={this.handleTogglePlay}\r\n            disabled={isDisabled}\r\n          />\r\n        </div>\r\n        <div id=\"playback-progress-container\" className=\"range-slider\">\r\n          <input\r\n            type=\"range\"\r\n            name={name}\r\n            style={sliderStyle}\r\n            value={sliderPosition}\r\n            max={sliderMaximum}\r\n            disabled={isDisabled}\r\n            onChange={this.handleSliderChange}\r\n          />\r\n        </div>\r\n        <div className=\"button-group\">\r\n          <PlaybackButton\r\n            className=\"playback-back\"\r\n            icon={Icons.back}\r\n            onClick={this.createSliderStepHandler(STEP_BACK)}\r\n            disabled={AT_THE_START || isDisabled}\r\n          />\r\n          <PlaybackButton\r\n            className=\"playback-forward\"\r\n            icon={Icons.forward}\r\n            onClick={this.createSliderStepHandler(STEP_FORWARD)}\r\n            disabled={AT_THE_END || isDisabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPlayback.defaultProps = {\r\n  name: 'slider',\r\n  sliderMaximum: 100,\r\n  playbackInterval: 1000,\r\n  isDisabled: false,\r\n  isHidden: false\r\n};\r\n\r\nPlayback.propTypes = {\r\n  name: PropTypes.string,\r\n  sliderMaximum: PropTypes.number,\r\n  playbackInterval: PropTypes.number,\r\n  isDisabled: PropTypes.bool,\r\n  isHidden: PropTypes.bool,\r\n  sliderPosition: PropTypes.number.isRequired,\r\n  actions: PropTypes.shape({\r\n    onSlide: PropTypes.func.isRequired,\r\n    onStepForward: PropTypes.func.isRequired,\r\n    onStepBack: PropTypes.func.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default Playback;\r\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Playback from 'components/playback/Playback';\r\nimport * as actions from 'actions/playback';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.board.playback,\r\n  isDisabled: state.board.moves.length < 2\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(\r\n    {\r\n      onSlide: actions.updateSlidePosition,\r\n      onStepForward: actions.stepSliderForward,\r\n      onStepBack: actions.stepSliderBack\r\n    },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Playback);\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst MAX_WIDTH_FALLBACK = '525px';\r\n\r\nconst AccountFor = {\r\n  header: 50,\r\n  actions: 45,\r\n  status: 52,\r\n  playback: 62\r\n};\r\n\r\nexport default class MaintainAspectRatio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: MAX_WIDTH_FALLBACK,\r\n      height: MAX_WIDTH_FALLBACK\r\n    };\r\n    this.wrappedComponent = React.createRef();\r\n\r\n    this.onResize = this.onResize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n    this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize(e) {\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => {\r\n      const el = this.wrappedComponent.current;\r\n      const rawValue = Math.min(el.clientHeight, el.clientWidth);\r\n      const value = Object.keys(AccountFor).reduce(\r\n        (p, c) => p - AccountFor[c],\r\n        rawValue\r\n      );\r\n      // const { width, height } = el.getBoundingClientRect();\r\n      // console.group(\"resize\")\r\n      // console.log(\"client > \", el.clientWidth, el.clientHeight)\r\n      // console.log(\"offset > \", el.offsetWidth, el.offsetHeight)\r\n      // console.log(\"bounding > \", width, height)\r\n      // console.groupEnd()\r\n      this.setState({\r\n        width: `${value}px`,\r\n        height: `${value}px`\r\n      });\r\n    }, 200);\r\n  }\r\n\r\n  render() {\r\n    return this.props.children(this.wrappedComponent, this.state);\r\n  }\r\n}\r\n\r\nMaintainAspectRatio.propTypes = {\r\n  children: PropTypes.func.isRequired\r\n};\r\n\r\nexport function withMaintainAspectRatio(WrappedComponent) {\r\n  return class extends React.Component {\r\n    render() {\r\n      return (\r\n        <MaintainAspectRatio>\r\n          {(ref, values) => <WrappedComponent ref={ref} {...this.props} />}\r\n        </MaintainAspectRatio>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst GameAction = ({ children, ...props }) => (\r\n  <button type=\"button\" className=\"button ripple primary\" {...props}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default GameAction;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Portal from 'components/Portal';\r\nimport GameAction from 'components/GameAction';\r\n\r\nimport Options, { NewGameOptions as GG } from 'constants/new-game-options';\r\n\r\nimport './newGameOptions.scss';\r\n\r\nconst NewGameOptions = ({ display, targetSelector, onSelect }) => {\r\n  if (!display) return null;\r\n  console.log(Options, GG);\r\n  return (\r\n    <Portal targetSelector={targetSelector}>\r\n      <div className=\"game-options\">\r\n        <p>Select game type</p>\r\n        <ul className=\"list column one\">\r\n          {Options.map((o) => (\r\n            <li key={o.id}>\r\n              <GameAction onClick={() => onSelect(o.id)}>{o.text}</GameAction>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nNewGameOptions.propTypes = {\r\n  targetSelector: PropTypes.string.isRequired,\r\n  display: PropTypes.bool,\r\n  onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NewGameOptions;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Board from './Board';\r\nimport Graveyard from './Graveyard';\r\nimport MoveList from './MoveList';\r\nimport Playback from './Playback';\r\nimport MaintainAspectRatio from './MaintainAspectRatio';\r\nimport GameAction from 'components/GameAction';\r\nimport NewGameOptions from 'components/newGameOptions';\r\n\r\nimport { resetBoard, importGame, saveGame, loadGame } from 'actions/board';\r\nimport { exportPGNForMoves } from 'utils/exportImport';\r\n\r\nconst ACTIONS_ID = 'chess-game-actions';\r\n\r\nclass ChessGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isStartingNewGame: false\r\n    };\r\n\r\n    this.fileSelector = React.createRef();\r\n    this.handleImport = this.handleImport.bind(this);\r\n    this.handleNewGame = this.handleNewGame.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.actions.loadGame();\r\n  }\r\n\r\n  async handleImport(event) {\r\n    const file = event.target.files && event.target.files[0];\r\n    if (!file) return;\r\n    const fileText = await new Response(file).text();\r\n    this.props.actions.importGame(fileText);\r\n  }\r\n\r\n  handleNewGame(option) {\r\n    if (!this.state.isStartingNewGame) {\r\n      this.setState({ isStartingNewGame: true });\r\n    } else {\r\n      this.setState({ isStartingNewGame: false }, () =>\r\n        this.props.actions.resetBoard(option)\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { moves, vsComputer, actions } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MoveList />\r\n        <div id={ACTIONS_ID} className=\"button-group right\">\r\n          <GameAction id=\"new-game\" onClick={this.handleNewGame}>\r\n            New Game\r\n          </GameAction>\r\n          <GameAction id=\"save-game\" onClick={actions.saveGame}>\r\n            Save Game\r\n          </GameAction>\r\n          <GameAction\r\n            id=\"export-game\"\r\n            onClick={() => exportPGNForMoves(moves, vsComputer)}\r\n          >\r\n            Export\r\n          </GameAction>\r\n          <label\r\n            id=\"import-game\"\r\n            role=\"button\"\r\n            className=\"button ripple primary\"\r\n          >\r\n            Import\r\n            <input\r\n              ref={this.fileSelector}\r\n              type=\"file\"\r\n              accept=\".pgn\"\r\n              onChange={this.handleImport}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div id=\"chess-game\" ref={this.getGameContainer}>\r\n          <MaintainAspectRatio>\r\n            {(ref, style) => (\r\n              <div ref={ref} className=\"left-column\">\r\n                <div id=\"chess-game-status\" />\r\n                <Board style={style} />\r\n                <Playback />\r\n              </div>\r\n            )}\r\n          </MaintainAspectRatio>\r\n          <div className=\"right-column\">\r\n            <Graveyard />\r\n          </div>\r\n        </div>\r\n        <NewGameOptions\r\n          targetSelector={`#${ACTIONS_ID}`}\r\n          display={this.state.isStartingNewGame}\r\n          onSelect={this.handleNewGame}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  moves: state.board.moves,\r\n  vsComputer: state.board.vsComputer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators(\r\n    { resetBoard, importGame, saveGame, loadGame },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChessGame);\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ConnectedRouter } from 'react-router-redux';\r\n\r\nimport App from 'containers/App';\r\nimport ChessGame from 'containers/ChessGame';\r\n\r\nimport { Paths } from 'constants/paths';\r\n\r\nconst SatsukiRoutes = ({ match }) => (\r\n  <Switch>\r\n    <Route exact path={match.path} component={ChessGame} />\r\n  </Switch>\r\n);\r\n\r\nconst Routes = ({ history }) => (\r\n  <ConnectedRouter history={history}>\r\n    <App>\r\n      <Switch>\r\n        <Redirect exact from=\"/\" to={Paths.base} />\r\n        <Route path={Paths.base} component={SatsukiRoutes} />\r\n\r\n        <Route path=\"*\" render={() => <div>Page not found</div>} />\r\n      </Switch>\r\n    </App>\r\n  </ConnectedRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const getSquare = n => document.getElementById(n);\r\nconst selectSquare = n =>\r\n  (getSquare(n) || { click: () => console.log('nothing to click') }).click();\r\nconst moveFromSquareToSquare = async (n, m) => {\r\n  await selectSquare(n);\r\n  await selectSquare(m);\r\n};\r\n\r\nconst prepareBoard = arr => moveFromSquareToSquare(...arr);\r\nconst makeMoves = arr => {\r\n  const move = arr.pop();\r\n  if (!move) return console.log('board ready');\r\n\r\n  let timer;\r\n  clearTimeout(timer);\r\n  timer = setTimeout(() => {\r\n    prepareBoard(move);\r\n    makeMoves(arr);\r\n  }, 200);\r\n};\r\n\r\n// fastest checkmate\r\nlet fastestGame = [[53, 37], [12, 28], [54, 38], [3, 39]].reverse();\r\n\r\n// check - evade with [54, 46]\r\nlet check = [[53, 45], [12, 28], [45, 37], [3, 39]].reverse();\r\n\r\n// castling tests\r\nlet castling = [\r\n  [53, 37],\r\n  [8, 16],\r\n  [54, 38],\r\n  [9, 17],\r\n  [61, 47],\r\n  [10, 18],\r\n  [62, 45],\r\n  [11, 19],\r\n  [60] // 62\r\n].reverse();\r\n\r\n// en passant test\r\nlet enPassant = [[51, 35], [8, 16], [35, 27], [12, 28], [27]].reverse(); // 20\r\n\r\n// promotion tests\r\nlet promotion = [\r\n  [54, 38],\r\n  [15, 31],\r\n  [38, 31],\r\n  [7, 23],\r\n  [53, 45],\r\n  [23, 22],\r\n  [31, 23],\r\n  [22, 21],\r\n  [23, 15],\r\n  [21, 20],\r\n  [15] // 7\r\n].reverse();\r\n\r\n// ambiguous movement tests\r\nlet ambiguous = [[50, 34], [11, 27], [52, 36], [8, 16], [34, 27]].reverse();\r\n\r\nexport default {\r\n  selectSquare,\r\n  moveFromSquareToSquare,\r\n  makeMoves,\r\n  movesFor: {\r\n    fastestGame,\r\n    check,\r\n    castling,\r\n    enPassant,\r\n    promotion\r\n  },\r\n  examples: {\r\n    fastestGame: () => makeMoves(fastestGame),\r\n    check: () => makeMoves(check),\r\n    promotion: () => makeMoves(promotion),\r\n    enPassant: () => makeMoves(enPassant),\r\n    castling: () => makeMoves(castling),\r\n    ambiguous: () => makeMoves(ambiguous)\r\n  },\r\n  actions: {\r\n    newGame: () => document.getElementById('new-game').click(),\r\n    saveGame: () => document.getElementById('save-game').click(),\r\n    export: () => document.getElementById('export-game').click(),\r\n    import: () => document.getElementById('import-game').click()\r\n  },\r\n  playback: {\r\n    togglePlay: () =>\r\n      document.querySelector('.playback-button.playback-toggle-play').click(),\r\n    forward: () =>\r\n      document.querySelector('.playback-button.playback-forward').click(),\r\n    back: () => document.querySelector('.playback-button.playback-back').click()\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport configureStore from './store/configureStore';\r\n\r\nimport Routes from './Routes';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport AutomateBoard from './programmatic-board-moves';\r\nimport './index.scss';\r\nimport './styles/list.scss';\r\nimport './styles/float-label.scss';\r\nimport './styles/ripple.scss';\r\nimport './styles/button.scss';\r\nimport './styles/themes.scss';\r\n\r\nimport Engine from 'utils/engine';\r\nwindow.Engine = Engine;\r\nwindow.AutomateBoard = AutomateBoard;\r\nconst history = createHistory();\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Routes history={history} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n","export function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    } else {\r\n      return state;\r\n    }\r\n  };\r\n}\r\n","import { SET_APP_THEME, SET_BOARD_THEME } from 'actions/theme';\r\nimport Constants from 'constants/index';\r\nimport { getUserSettings, persistUserSettings } from 'utils/common';\r\nimport { createReducer } from './utils';\r\n\r\nconst getUserTheme = () => {\r\n  const settings = getUserSettings();\r\n  if (!settings || !settings.theme)\r\n    return {\r\n      app: Constants.themes[0].class,\r\n      board: Constants.boardThemes[0].class\r\n    };\r\n  return settings.theme;\r\n};\r\n\r\nconst persistUserThemeChoice = themeType => (state, action) => {\r\n  const updatedSettings = persistUserSettings({\r\n    theme: { ...state, [themeType]: action.theme }\r\n  });\r\n  return updatedSettings.theme;\r\n};\r\n\r\nconst theme = createReducer(getUserTheme(), {\r\n  [SET_APP_THEME]: persistUserThemeChoice('app'),\r\n  [SET_BOARD_THEME]: persistUserThemeChoice('board')\r\n});\r\n\r\nexport default theme;\r\n","import Strings from 'constants/strings';\r\n\r\nimport { mapPieceToNewPiece } from 'utils/mappers';\r\nimport performMovementFromCurrentToTarget, {\r\n  performRookMovementForCastling,\r\n  updateBoardToRemovePassedPawn\r\n} from 'utils/squaresUpdate';\r\n\r\nfunction specialMoveSubReducer(state, action) {\r\n  const { type, squareId: targetSquareId } = action.specialMove;\r\n  if (type === Strings.specialMoves.promotionSelection)\r\n    return { ...state, promotionAt: action.specialMove };\r\n\r\n  const postPieceMovementToTargetState = performMovementFromCurrentToTarget(\r\n    state,\r\n    state.selectedSquareId,\r\n    action.specialMove.squareId,\r\n    action.specialMove\r\n  );\r\n  switch (type) {\r\n    case Strings.specialMoves.promotion: {\r\n      const promotionIndex = postPieceMovementToTargetState.squares.findIndex(\r\n        x => x.id === targetSquareId\r\n      );\r\n      const squares = mapPieceToNewPiece(\r\n        postPieceMovementToTargetState.squares,\r\n        promotionIndex,\r\n        {\r\n          name: action.specialMove.promoteTo\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...postPieceMovementToTargetState,\r\n        squares,\r\n        promotionAt: null\r\n      };\r\n    }\r\n    case Strings.specialMoves.enPassant: {\r\n      return updateBoardToRemovePassedPawn(\r\n        postPieceMovementToTargetState,\r\n        targetSquareId\r\n      );\r\n    }\r\n    case Strings.specialMoves.castling: {\r\n      const squares = performRookMovementForCastling(\r\n        postPieceMovementToTargetState.squares,\r\n        targetSquareId\r\n      );\r\n      return {\r\n        ...postPieceMovementToTargetState,\r\n        squares\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default specialMoveSubReducer;\r\n","import {\r\n  PLAYBACK_UPDATE_SLIDE_POSITION,\r\n  PLAYBACK_STEP_FORWARD,\r\n  PLAYBACK_STEP_BACK\r\n} from 'actions/playback';\r\nimport { resolveSliderValue } from 'utils/playback';\r\n\r\nexport const PLAYBACK_STARTING_VALUE = 0;\r\nexport const getPlaybackInitialState = n => ({\r\n  sliderMaximum: n,\r\n  sliderPosition: n\r\n});\r\n\r\nfunction handlePlaybackStep(state, action) {\r\n  const sliderPosition = resolveSliderValue(\r\n    state.playback.sliderPosition + action.stepDirection,\r\n    state.playback.sliderMaximum\r\n  );\r\n  return {\r\n    ...state,\r\n    playback: {\r\n      ...state.playback,\r\n      sliderPosition\r\n    }\r\n  };\r\n}\r\n\r\nfunction playbackSubReducer(state, action) {\r\n  switch (action.type) {\r\n    case PLAYBACK_UPDATE_SLIDE_POSITION: {\r\n      const sliderPosition = action.sliderValue;\r\n      return {\r\n        ...state,\r\n        playback: {\r\n          ...state.playback,\r\n          sliderPosition\r\n        }\r\n      };\r\n    }\r\n    case PLAYBACK_STEP_FORWARD:\r\n      return handlePlaybackStep(state, action);\r\n    case PLAYBACK_STEP_BACK:\r\n      return handlePlaybackStep(state, action);\r\n    default:\r\n      return {\r\n        ...state,\r\n        playback: getPlaybackInitialState(PLAYBACK_STARTING_VALUE)\r\n      };\r\n  }\r\n}\r\n\r\nexport default playbackSubReducer;\r\n","import Strings from 'constants/strings';\r\n\r\nimport { isValidMove, isValidTake } from 'utils/game';\r\nimport { importPGNFromFile } from 'utils/exportImport';\r\nimport {\r\n  mapPieceToMovedPiece,\r\n  mapPieceToNewSquare,\r\n  mapSquaresToMove\r\n} from 'utils/mappers';\r\nimport {\r\n  performRookMovementForCastling,\r\n  updateBoardToRemovePassedPawn\r\n} from 'utils/squaresUpdate';\r\nimport { processPGNToMove } from 'utils/pgn';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\n\r\nfunction canDoSpecialMove(state, move, square) {\r\n  if (!move.specialMove) return false;\r\n\r\n  const specialMovesPieceCanDo = availableSpecialMovesForSelectedPiece({\r\n    ...state,\r\n    selectedSquareId: square.id\r\n  });\r\n  const containsTheMatchingMove = specialMovesPieceCanDo.some(\r\n    (x) => x.type === move.specialMove.type\r\n  );\r\n  return containsTheMatchingMove;\r\n}\r\n\r\nfunction importSubReducer(cleanState, action) {\r\n  const { fileText } = action;\r\n  const data = importPGNFromFile(fileText);\r\n  const processedMoves = data.pgnMoves.map(processPGNToMove);\r\n\r\n  return processedMoves.reduce((p, move) => {\r\n    const toIndex = p.squares.findIndex(\r\n      (x) => x.file === move.to.file && x.rank === move.to.rank\r\n    );\r\n    const to = { ...p.squares[toIndex] };\r\n    const toHasPiece = !!to && !!to.contains;\r\n    const captured = toHasPiece ? { ...to.contains } : null;\r\n    const func = toHasPiece ? isValidTake : isValidMove;\r\n\r\n    const from = p.squares.find(\r\n      (x) =>\r\n        (!move.from ||\r\n          (move.from &&\r\n            x.file === move.from.file &&\r\n            (!move.from.rank || x.rank === move.from.rank))) &&\r\n        x.contains &&\r\n        x.contains.colour === move.piece.colour &&\r\n        x.contains.name === move.piece.name &&\r\n        (func(x, to, p.squares) || canDoSpecialMove(p, move, x))\r\n    );\r\n\r\n    const movingPiece = mapPieceToMovedPiece(from.contains);\r\n    let squares = mapPieceToNewSquare(p.squares, toIndex, {\r\n      ...from,\r\n      contains: movingPiece\r\n    });\r\n\r\n    const specialMove = move.specialMove\r\n      ? { ...move.specialMove, squareId: to.id }\r\n      : null;\r\n    const isCastling =\r\n      move.specialMove &&\r\n      move.specialMove.type === Strings.specialMoves.castling;\r\n    const isEnPassant =\r\n      move.specialMove &&\r\n      move.specialMove.type === Strings.specialMoves.enPassant;\r\n\r\n    squares = !isCastling\r\n      ? squares\r\n      : performRookMovementForCastling(squares, to.id);\r\n\r\n    const newState = {\r\n      ...p,\r\n      squares,\r\n      graveyard: [...p.graveyard, captured].filter((x) => !!x),\r\n      moves: [\r\n        ...p.moves,\r\n        mapSquaresToMove(from, squares[toIndex], squares, captured, specialMove)\r\n      ],\r\n      vsComputer: data.vsComputer\r\n    };\r\n\r\n    return !isEnPassant\r\n      ? newState\r\n      : updateBoardToRemovePassedPawn(newState, to.id);\r\n  }, cleanState);\r\n}\r\n\r\nexport default importSubReducer;\r\n","import { createReducer } from './utils';\r\nimport { compose, getSavedGame, persistChessGame } from 'utils/common';\r\nimport { buildStartingBoard } from 'utils/board';\r\nimport performMovementFromCurrentToTarget from 'utils/squaresUpdate';\r\nimport upgradeSavedGameState from 'utils/state';\r\nimport toaster from 'utils/toaster';\r\n\r\nimport {\r\n  BOARD_SELECT_SQUARE,\r\n  BOARD_MOVE_PIECE,\r\n  BOARD_TAKE_PIECE,\r\n  BOARD_SPECIAL_MOVE,\r\n  BOARD_RESET,\r\n  BOARD_IMPORT_GAME,\r\n  BOARD_SAVE_GAME,\r\n  BOARD_LOAD_GAME,\r\n  BOARD_TOGGLE_REVERSE\r\n} from 'actions/board';\r\nimport {\r\n  PLAYBACK_UPDATE_SLIDE_POSITION,\r\n  PLAYBACK_STEP_FORWARD,\r\n  PLAYBACK_STEP_BACK\r\n} from 'actions/playback';\r\nimport specialMoveSubReducer from './board-specialMove';\r\nimport playbackSubReducer, {\r\n  PLAYBACK_STARTING_VALUE,\r\n  getPlaybackInitialState\r\n} from './board-playback';\r\nimport importSubReducer from './board-import';\r\nimport { BOARD_COMPUTER_MOVE } from '../actions/board';\r\n\r\nimport { NewGameOptions } from 'constants/new-game-options';\r\n\r\nconst initialState = {\r\n  reverseBoard: false,\r\n  graveyard: [],\r\n  moves: [],\r\n  squares: buildStartingBoard(),\r\n  selectedSquareId: null,\r\n  promotionAt: null,\r\n  playback: getPlaybackInitialState(PLAYBACK_STARTING_VALUE),\r\n  vsComputer: {\r\n    isComputer: true,\r\n    isComputerBlack: true\r\n  }\r\n};\r\n\r\nconst setSelectedSquareId = (state, action) => ({\r\n  ...state,\r\n  selectedSquareId: action.squareId\r\n});\r\n\r\nconst updateSlideMaximum = (state) => ({\r\n  ...state,\r\n  playback: getPlaybackInitialState(state.moves.length)\r\n});\r\n\r\nconst handlePieceMovement = (state, action) =>\r\n  performMovementFromCurrentToTarget(\r\n    state,\r\n    state.selectedSquareId,\r\n    action.targetSquareId\r\n  );\r\n\r\nconst handleImport = (freshState) => (state, action) =>\r\n  importSubReducer(freshState, action);\r\n\r\nconst composedPieceMovement = compose(updateSlideMaximum, handlePieceMovement);\r\nconst composedSpecialMove = compose(updateSlideMaximum, specialMoveSubReducer);\r\nconst composedImport = compose(updateSlideMaximum, handleImport(initialState));\r\n\r\nconst board = createReducer(initialState, {\r\n  [BOARD_SELECT_SQUARE]: setSelectedSquareId,\r\n  [BOARD_MOVE_PIECE]: composedPieceMovement,\r\n  [BOARD_TAKE_PIECE]: composedPieceMovement,\r\n  [BOARD_SPECIAL_MOVE]: composedSpecialMove,\r\n  [PLAYBACK_UPDATE_SLIDE_POSITION]: playbackSubReducer,\r\n  [PLAYBACK_STEP_FORWARD]: playbackSubReducer,\r\n  [PLAYBACK_STEP_BACK]: playbackSubReducer,\r\n  [BOARD_IMPORT_GAME]: composedImport,\r\n  [BOARD_RESET]: (state, action) => {\r\n    const { option } = action;\r\n    if (option === NewGameOptions.vsComputerYouBlack)\r\n      return {\r\n        ...initialState,\r\n        vsComputer: { ...initialState.vsComputer, isComputerBlack: false }\r\n      };\r\n    if (option === NewGameOptions.vsPlayer)\r\n      return {\r\n        ...initialState,\r\n        vsComputer: { ...initialState.vsComputer, isComputer: false }\r\n      };\r\n\r\n    return initialState;\r\n  },\r\n  [BOARD_SAVE_GAME]: (state) => {\r\n    const newState = persistChessGame(state);\r\n    toaster.success('Saved Game');\r\n    return newState;\r\n  },\r\n  [BOARD_LOAD_GAME]: (state) => {\r\n    const savedGame = getSavedGame();\r\n    if (!savedGame) return state;\r\n\r\n    toaster.success('Loaded Game');\r\n    return upgradeSavedGameState(savedGame);\r\n  },\r\n  [BOARD_TOGGLE_REVERSE]: (state) => ({\r\n    ...state,\r\n    reverseBoard: !state.reverseBoard\r\n  }),\r\n  [BOARD_COMPUTER_MOVE]: (state, action) => {\r\n    const { fromId, toId } = action.move;\r\n    const midState = setSelectedSquareId(state, { squareId: fromId });\r\n    return composedPieceMovement(midState, { targetSquareId: toId });\r\n  }\r\n});\r\n\r\nexport default board;\r\n","export default function upgradeSavedGameState(state) {\r\n  let upgradedState = { ...state };\r\n\r\n  if (!state.hasOwnProperty('vsComputer')) {\r\n    upgradedState = {\r\n      ...upgradedState,\r\n      vsComputer: {\r\n        isComputer: false,\r\n        isComputerBlack: true\r\n      }\r\n    };\r\n  }\r\n\r\n  return upgradedState;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { routerReducer as routing } from 'react-router-redux';\r\n\r\nimport theme from './theme';\r\nimport board from './board';\r\n\r\nconst rootReducer = combineReducers({\r\n  routing,\r\n  theme,\r\n  board\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport rootReducer from 'reducers/index';\r\n\r\nconst configureStore = (history, preloadedState) =>\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(routerMiddleware(history))\r\n  );\r\n\r\nexport default configureStore;\r\n","import Strings from 'constants/strings';\r\nimport * as Regexes from 'constants/regex';\r\n\r\nimport { isWhitesTurn } from 'utils/game';\r\nimport { generateUniqueId } from 'utils/common';\r\n\r\nconst KING_SIDE_CASTLE = 'g';\r\n\r\nfunction generatePortableGameNotationForMove(item) {\r\n  const id = generateUniqueId();\r\n  let pgn = '';\r\n  if (\r\n    item.specialMove &&\r\n    item.specialMove.type === Strings.specialMoves.castling\r\n  ) {\r\n    const isKingSide = item.to.file === KING_SIDE_CASTLE;\r\n    return {\r\n      id,\r\n      pgn: isKingSide ? Strings.pgn.castle.king : Strings.pgn.castle.queen\r\n    };\r\n  }\r\n  pgn += Strings.pgn.piece[item.piece.name];\r\n  if (item.isAmbiguous) pgn += `${item.from.file}`;\r\n  if (item.captured) pgn += `${Strings.pgn.capture}`;\r\n  pgn += `${item.to.file}${item.to.rank}`;\r\n  if (\r\n    item.specialMove &&\r\n    item.specialMove.type === Strings.specialMoves.promotion\r\n  ) {\r\n    pgn += `${Strings.pgn.promotion}${Strings.pgn.piece[\r\n      item.specialMove.promoteTo\r\n    ] || ''}`;\r\n  }\r\n  if (\r\n    item.specialMove &&\r\n    item.specialMove.type === Strings.specialMoves.enPassant\r\n  ) {\r\n    pgn += `${Strings.pgn.enPassant}`;\r\n  }\r\n  const { isCheck, isCheckmate } = item.checkStatus;\r\n  if (!isCheckmate && isCheck) pgn += Strings.pgn.check;\r\n  if (isCheckmate) pgn += Strings.pgn.checkmate;\r\n  return {\r\n    id,\r\n    pgn\r\n  };\r\n}\r\n\r\nexport const mapMovesToPGN = arr =>\r\n  arr.map(generatePortableGameNotationForMove);\r\n\r\n/* Above, generating pgn from board state\r\n * Below, importing pgn, using it to create moves.\r\n */\r\n\r\nconst getKeyForFirstLetter = l => {\r\n  const keys = Object.keys(Strings.pgn.piece);\r\n  return keys.find(x => Strings.pgn.piece[x] === l) || Strings.pieces.pawn;\r\n};\r\n\r\nconst isKingSideCastle = s => s.length === 3;\r\nconst resolveCastlingFromSquare = (pgnStr, isWhiteMove) => ({\r\n  file: 'e',\r\n  rank: isWhiteMove ? 1 : 8\r\n});\r\n\r\nfunction resolveCastlingToSquare(pgnStr, isWhiteMove) {\r\n  const rank = isWhiteMove ? 1 : 8;\r\n  return isKingSideCastle(pgnStr) ? { file: 'g', rank } : { file: 'c', rank };\r\n}\r\n\r\nfunction resolveSpecialMove(pgnStr) {\r\n  if (pgnStr === Strings.pgn.castle.king || pgnStr === Strings.pgn.castle.queen)\r\n    return { type: Strings.specialMoves.castling };\r\n\r\n  if (pgnStr.includes(Strings.pgn.promotion))\r\n    return {\r\n      type: Strings.specialMoves.promotion,\r\n      promoteTo: getKeyForFirstLetter(\r\n        pgnStr.replace(Regexes.MATCH_EVERYTHING_UPTO_EQUALS, '')\r\n      )\r\n    };\r\n\r\n  if (pgnStr.includes(Strings.pgn.enPassant))\r\n    return { type: Strings.specialMoves.enPassant };\r\n\r\n  return null;\r\n}\r\n\r\nfunction resolveFromSquare(pgnStr) {\r\n  const result = Regexes.MATCH_PGN_WITH_ADDITIONAL_FILE.exec(pgnStr);\r\n  if (!result) return null;\r\n  return { file: result[0].slice(0, 1) };\r\n}\r\n\r\nexport function processPGNToMove(pgnStr, index) {\r\n  const isWhiteMove = isWhitesTurn(index);\r\n  const colour = isWhiteMove ? Strings.colours.white : Strings.colours.black;\r\n  const capturedColour = !isWhiteMove\r\n    ? Strings.colours.white\r\n    : Strings.colours.black;\r\n\r\n  const specialMove = resolveSpecialMove(pgnStr);\r\n  const isCastling =\r\n    specialMove && specialMove.type === Strings.specialMoves.castling;\r\n\r\n  const name = getKeyForFirstLetter(pgnStr.slice(0, 1));\r\n  const piece = isCastling\r\n    ? { colour, name: Strings.pieces.king, hasMoved: true }\r\n    : { colour, name, hasMoved: true };\r\n\r\n  const [file, rank] = pgnStr\r\n    .replace(Regexes.MATCH_EVERYTHING_BEFORE_FILE_RANK_PAIR, '')\r\n    .split('');\r\n  const to = !isCastling\r\n    ? { file, rank: Number(rank) }\r\n    : resolveCastlingToSquare(pgnStr, isWhiteMove);\r\n\r\n  const from = isCastling\r\n    ? resolveCastlingFromSquare(pgnStr, isWhiteMove)\r\n    : resolveFromSquare(pgnStr);\r\n  const captured = pgnStr.includes('x') ? { colour: capturedColour } : null;\r\n\r\n  return {\r\n    from,\r\n    piece,\r\n    to,\r\n    isAmbiguous: !isCastling && !!from,\r\n    specialMove,\r\n    captured,\r\n    checkStatus: {\r\n      isCheck: pgnStr.includes('+'),\r\n      isCheckmate: pgnStr.includes('#')\r\n    }\r\n  };\r\n}\r\n","import Constants from 'constants/index';\r\n\r\nimport {\r\n  mapSquareIdToPromotion,\r\n  mapSquareIdToEnPassant,\r\n  mapSquareIdToCastling,\r\n  mapPieceToNewSquare\r\n} from './mappers';\r\nimport { possibleMovesForSelectedPiece, willResultInCheck } from './piece';\r\n\r\nconst { Strings } = Constants;\r\n\r\nconst BLACK_BACK_ROW = 8;\r\nconst BLACK_PAWN_ROW = 7;\r\nconst WHITE_PAWN_ROW = 2;\r\nconst WHITE_BACK_ROW = 1;\r\n\r\nfunction checkPawnPromotion(pawnSquare, squares) {\r\n  const colour = pawnSquare.contains.colour;\r\n  const targetRank =\r\n    colour === Strings.colours.white ? BLACK_BACK_ROW : WHITE_BACK_ROW;\r\n  if (Math.abs(pawnSquare.rank - targetRank) !== 1) return [];\r\n  return possibleMovesForSelectedPiece({\r\n    selectedSquareId: pawnSquare.id,\r\n    squares\r\n  }).map(mapSquareIdToPromotion);\r\n}\r\n\r\nfunction checkPawnEnPassant(pawnSquare, boardState) {\r\n  const { squares, moves } = boardState;\r\n  const [lastMove] = moves.slice(-1);\r\n  if (!lastMove) return [];\r\n  if (lastMove.piece.name !== Strings.pieces.pawn) return [];\r\n\r\n  const fromRank =\r\n    lastMove.piece.colour === Strings.colours.white\r\n      ? WHITE_PAWN_ROW\r\n      : BLACK_PAWN_ROW;\r\n\r\n  const direction =\r\n    pawnSquare.contains.colour === Strings.colours.white ? -1 : 1;\r\n  const twoRanksForward = fromRank + 2 * direction;\r\n\r\n  if (\r\n    lastMove.from.rank !== fromRank ||\r\n    lastMove.to.rank !== pawnSquare.rank ||\r\n    lastMove.to.rank !== twoRanksForward\r\n  )\r\n    return [];\r\n\r\n  const toIndex = Constants.files.findIndex((x) => x === lastMove.to.file);\r\n  const pawnIndex = Constants.files.findIndex((x) => x === pawnSquare.file);\r\n  if (Math.abs(toIndex - pawnIndex) !== 1) return [];\r\n\r\n  const targetSquare = squares.find(\r\n    (x) =>\r\n      x.file === lastMove.to.file && x.rank === lastMove.to.rank - direction\r\n  );\r\n  return [mapSquareIdToEnPassant(targetSquare.id)];\r\n}\r\n\r\nfunction pawnSpecialMoves(pawnSquare, boardState) {\r\n  return [\r\n    ...checkPawnPromotion(pawnSquare, boardState.squares),\r\n    ...checkPawnEnPassant(pawnSquare, boardState)\r\n  ];\r\n}\r\n\r\nfunction kingSpecialMoves(kingSquare, squares) {\r\n  if (kingSquare.contains.hasMoved) return [];\r\n  if (willResultInCheck(kingSquare, squares)) return [];\r\n  const rookSquares = squares.filter(\r\n    (x) =>\r\n      x.contains &&\r\n      x.contains.name === Strings.pieces.rook &&\r\n      x.contains.colour === kingSquare.contains.colour &&\r\n      !x.contains.hasMoved\r\n  );\r\n  if (!rookSquares.length) return [];\r\n  const kingId = kingSquare.id;\r\n  const targetSquares = rookSquares.reduce((p, sq) => {\r\n    const rookId = sq.id;\r\n    const [startId, endId] =\r\n      rookId < kingId ? [rookId, kingId] : [kingId, rookId];\r\n    const squareIds = Array.from(\r\n      new Array(endId - startId - 1),\r\n      (x, i) => 1 + i + startId\r\n    );\r\n    if (\r\n      !squares.filter((x) => squareIds.includes(x.id)).every((x) => !x.contains)\r\n    )\r\n      return p;\r\n\r\n    return squareIds.slice(0, 2).every((sqId) => {\r\n      const squareIndex = squares.findIndex((x) => x.id === sqId);\r\n      return !willResultInCheck(\r\n        kingSquare,\r\n        mapPieceToNewSquare(squares, squareIndex, kingSquare)\r\n      );\r\n    })\r\n      ? [...p, squareIds[1]]\r\n      : p;\r\n  }, []);\r\n\r\n  if (!targetSquares.length) return [];\r\n  return targetSquares.map(mapSquareIdToCastling);\r\n}\r\n\r\nfunction availableSpecialMovesForSelectedPiece(boardState) {\r\n  const { squares, selectedSquareId } = boardState;\r\n  const square = squares.find((x) => x.id === selectedSquareId);\r\n  if (!square) return [];\r\n\r\n  switch (square.contains.name) {\r\n    case Strings.pieces.pawn:\r\n      return pawnSpecialMoves(square, boardState);\r\n    case Strings.pieces.king:\r\n      return kingSpecialMoves(square, squares);\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nexport default availableSpecialMovesForSelectedPiece;\r\n","export const SET_APP_THEME = 'SET_APP_THEME';\r\nexport const setApplicationTheme = theme => ({\r\n  type: SET_APP_THEME,\r\n  theme\r\n});\r\n\r\nexport const SET_BOARD_THEME = 'SET_BOARD_THEME';\r\nexport const setBoardTheme = theme => ({\r\n  type: SET_BOARD_THEME,\r\n  theme\r\n});\r\n","export const files = Object.freeze(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']);\r\nexport const ranks = Object.freeze([8, 7, 6, 5, 4, 3, 2, 1]);\r\n","export const SLIDER_START = 0;\r\nexport const SLIDER_END = 100;\r\n","const INFO = 'INFO';\r\nconst SUCCESS = 'SUCCESS';\r\nconst ERROR = 'ERROR';\r\nconst WARNING = 'WARNING';\r\n\r\nclass ToasterService {\r\n  constructor() {\r\n    this.toaster = {};\r\n  }\r\n\r\n  register(toaster) {\r\n    this.toaster = toaster;\r\n  }\r\n\r\n  popToast(newToast) {\r\n    this.toaster.popToast(\r\n      Object.assign(\r\n        {},\r\n        {\r\n          time: Date.now(),\r\n          type: INFO,\r\n          title: 'Just so your aware',\r\n          message: 'This is the default toast text!'\r\n        },\r\n        newToast\r\n      )\r\n    );\r\n  }\r\n\r\n  info(title, message) {\r\n    this.popToast({ type: INFO, title, message });\r\n  }\r\n  success(title, message) {\r\n    this.popToast({ type: SUCCESS, title, message });\r\n  }\r\n  error(title, message) {\r\n    this.popToast({ type: ERROR, title, message });\r\n  }\r\n  warning(title, message) {\r\n    this.popToast({ type: WARNING, title, message });\r\n  }\r\n}\r\n\r\nconst toaster = new ToasterService();\r\nexport default toaster;\r\n","import Strings from 'constants/strings';\r\nimport { SLIDER_START } from 'constants/slider';\r\nimport { buildStartingBoard } from './board';\r\nimport {\r\n  mapPieceToMovedPiece,\r\n  mapPieceToNewSquare,\r\n  mapPieceToNewPiece\r\n} from './mappers';\r\nimport {\r\n  performRookMovementForCastling,\r\n  updateSquaresToRemovePassedPawn\r\n} from './squaresUpdate';\r\n\r\nexport const resolveSliderValue = (v, max) =>\r\n  v > max ? max : v < SLIDER_START ? SLIDER_START : v;\r\n\r\nexport const selectNextMoveSquareId = (moves, moveIndex) => {\r\n  const nextMove = moves[moveIndex];\r\n  if (!nextMove) return null;\r\n  return nextMove.from.id;\r\n};\r\n\r\nconst updateBoardUsingSpecialMove = (specialMove, squares) => {\r\n  const { type, squareId: targetSquareId } = specialMove;\r\n  switch (type) {\r\n    case Strings.specialMoves.castling:\r\n      return performRookMovementForCastling(squares, targetSquareId);\r\n    case Strings.specialMoves.enPassant:\r\n      return updateSquaresToRemovePassedPawn(squares, targetSquareId);\r\n    case Strings.specialMoves.promotion: {\r\n      const promotionIndex = squares.findIndex(x => x.id === targetSquareId);\r\n      return mapPieceToNewPiece(squares, promotionIndex, {\r\n        name: specialMove.promoteTo\r\n      });\r\n    }\r\n    default:\r\n      return squares;\r\n  }\r\n};\r\n\r\nexport const createBoardLayoutForMoveList = moves =>\r\n  moves.reduce((squares, m) => {\r\n    const from = squares.find(x => x.id === m.from.id);\r\n    const toIndex = squares.findIndex(x => x.id === m.to.id);\r\n    const contains = mapPieceToMovedPiece(from.contains);\r\n    let newSquares = mapPieceToNewSquare(squares, toIndex, {\r\n      ...from,\r\n      contains\r\n    });\r\n\r\n    if (m.specialMove) {\r\n      newSquares = updateBoardUsingSpecialMove(m.specialMove, newSquares);\r\n    }\r\n\r\n    return newSquares;\r\n  }, buildStartingBoard());\r\n","import Strings from 'constants/strings';\r\n\r\nconst getObjectFromLocalStorageByProperty = (property) =>\r\n  JSON.parse(localStorage.getItem(property)) || null;\r\n\r\nconst persistObjectToLocalStorage = (property) => (newValues) => {\r\n  const values = getObjectFromLocalStorageByProperty(property) || {};\r\n  const updated = { ...values, ...newValues };\r\n  localStorage.setItem(property, JSON.stringify(updated));\r\n  return updated;\r\n};\r\n\r\nexport const getUserSettings = () =>\r\n  getObjectFromLocalStorageByProperty(Strings.localUserSettings);\r\n\r\nexport const persistUserSettings = persistObjectToLocalStorage(\r\n  Strings.localUserSettings\r\n);\r\n\r\nexport const getSavedGame = () =>\r\n  getObjectFromLocalStorageByProperty(Strings.localGameState);\r\n\r\nexport const persistChessGame = persistObjectToLocalStorage(\r\n  Strings.localGameState\r\n);\r\n\r\nexport const updateArrayPreservingOrder = (arr, i, o) => [\r\n  ...arr.slice(0, i),\r\n  { ...arr[i], ...o },\r\n  ...arr.slice(i + 1)\r\n];\r\n\r\nexport const reverseArray = (arr) => arr.slice(0).reverse();\r\n\r\nexport const capitalise = ([first, ...rest], lowerRest = false) =>\r\n  first.toUpperCase() +\r\n  (lowerRest ? rest.join('').toLowerCase() : rest.join(''));\r\n\r\nexport const compose = (...fns) =>\r\n  fns.reduce((f, g) => (...args) => f(g(...args)));\r\n\r\nexport function curry(uncurried) {\r\n  const parameters = Array.prototype.slice.call(arguments, 1);\r\n  return function() {\r\n    return uncurried.apply(\r\n      this,\r\n      parameters.concat(Array.prototype.slice.call(arguments, 0))\r\n    );\r\n  };\r\n}\r\n\r\nexport const generateUniqueId = () =>\r\n  ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n    (\r\n      c ^\r\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n    ).toString(16)\r\n  );\r\n\r\nexport const padNumber = (n, width, z = 0) => {\r\n  n += '';\r\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n};\r\n\r\nexport const formatDate = (d) => {\r\n  if (!d) return '';\r\n  const date = new Date(d);\r\n  return `${date.getFullYear()}-${padNumber(\r\n    date.getMonth() + 1,\r\n    2\r\n  )}-${padNumber(date.getDate(), 2)}`;\r\n};\r\n\r\nconst isTypeOf = (t) => (v) => typeof v === t;\r\nexport const isObject = isTypeOf('object');\r\nexport const isArray = (v) => v instanceof Array;\r\n\r\nexport const objectsAreEqual = (o1, o2) => {\r\n  if (!isObject(o1) || !isObject(o2)) return o1 === o2;\r\n  return Object.keys(o1).every((k) => {\r\n    const one = o1[k];\r\n    const two = o2[k];\r\n    return isArray(one)\r\n      ? one\r\n          .map((t, i) => objectsAreEqual(one[i], two[i]))\r\n          .every((b) => b === true)\r\n      : one === two;\r\n  });\r\n};\r\n\r\nexport const getMoveWithBestScore = (o1, o2) => {\r\n  const { moveResults: m1 } = o1;\r\n  const { moveResults: m2 } = o2;\r\n\r\n  const v1 = [...m1.values()];\r\n  const v2 = [...m2.values()];\r\n\r\n  const max1 = Math.max(...v1);\r\n  const max2 = Math.max(...v2);\r\n\r\n  return max1 >= max2 ? o1 : o2;\r\n};\r\n\r\nexport const getKeyForMaxValue = (pairs) =>\r\n  [...pairs.keys()].reduce(\r\n    (pk, ck) => (pairs.get(pk) >= pairs.get(ck) ? pk : ck)\r\n  );\r\n\r\nconst mirrorMatrix = (arr) => arr.map((a) => a.reverse());\r\nconst splitArray = (arr, len = 8) => {\r\n  const chunks = [];\r\n  let i = 0,\r\n    n = arr.length;\r\n\r\n  while (i < n) {\r\n    chunks.push(arr.slice(i, (i += len)));\r\n  }\r\n\r\n  return chunks;\r\n};\r\n\r\nexport const splitMirrorAndJoin = compose(\r\n  (arr) => arr.reduce((a, b) => [...a, ...b]),\r\n  mirrorMatrix,\r\n  splitArray\r\n);\r\n","import { formatDate } from './common';\r\nimport { mapMovesToPGN } from './pgn';\r\n\r\nimport * as Regexes from 'constants/regex';\r\n\r\nconst PLAYER = 'Player';\r\nconst COMPUTER = 'Computer';\r\nconst TEXT_IN_QUOTES = /\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"/;\r\n\r\nexport const exportPGNForMoves = (moves, vsComputer) => {\r\n  const pgnForMoves = mapMovesToPGN(moves);\r\n  let moveNumber = 1;\r\n  const pgn = pgnForMoves.reduce((p, c, i) => {\r\n    const hasNumber = i === 0 || i % 2 === 0;\r\n    const nextStr = hasNumber ? ` ${moveNumber}. ${c.pgn}` : `${c.pgn}`;\r\n    if (!hasNumber) moveNumber++;\r\n    return `${p} ${nextStr}${!hasNumber && moveNumber % 5 === 0 ? `\\n ` : ''}`;\r\n  }, '');\r\n\r\n  const date = formatDate(new Date());\r\n  const players = !vsComputer.isComputer\r\n    ? [PLAYER, PLAYER]\r\n    : vsComputer.isComputerBlack ? [PLAYER, COMPUTER] : [COMPUTER, PLAYER];\r\n\r\n  const dataForFile = `\r\n  [Site \"https://bakuzan.github.io/satsuki-junketsu/\"]\r\n  [Date \"${date}\"]\r\n  [White \"${players[0]}\"]\r\n  [Black \"${players[1]}\"]\r\n  ${pgn}\r\n  `;\r\n\r\n  download(\r\n    processDataIntoDownloadUrl(dataForFile),\r\n    `chess-game-${new Date().toLocaleString()}.pgn`\r\n  );\r\n};\r\n\r\nconst processDataIntoDownloadUrl = (dataStr) =>\r\n  URL.createObjectURL(new Blob([dataStr]));\r\n\r\nexport function download(downloadUrl, fileName) {\r\n  const link = document.createElement('a');\r\n  link.setAttribute('href', downloadUrl);\r\n  link.setAttribute('download', fileName);\r\n  document.body.appendChild(link); // Required for FF\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}\r\n\r\nconst getProcessedLine = (arr, str) => {\r\n  const line = arr.find((x) => x.includes(str));\r\n  if (!line) return '';\r\n  return line.match(TEXT_IN_QUOTES)[0].replace(/\"/g, '');\r\n};\r\n\r\nconst resolvePlayers = (information) => {\r\n  const lines = information.split('\\n');\r\n  const wPlayer = getProcessedLine(lines, 'White');\r\n  const bPlayer = getProcessedLine(lines, 'Black');\r\n\r\n  return {\r\n    isComputer: wPlayer === COMPUTER || bPlayer === COMPUTER,\r\n    isComputerBlack: bPlayer === COMPUTER\r\n  };\r\n};\r\n\r\nexport const importPGNFromFile = (fileText) => {\r\n  const [gameInformation, ...movePairs] = fileText\r\n    .replace(Regexes.MATCH_PGN_COMMENTS_PGN_GAME_RESULT, '')\r\n    .split(Regexes.MATCH_DIGIT_DOT_SPACE);\r\n\r\n  const pgnMoves = movePairs.reduce(\r\n    (p, movePair) => [\r\n      ...p,\r\n      ...movePair\r\n        .replace(Regexes.MATCH_NEW_LINE, ' ')\r\n        .split(' ')\r\n        .filter((x) => !!x && isNaN(x))\r\n    ],\r\n    []\r\n  );\r\n\r\n  const vsComputer = resolvePlayers(gameInformation);\r\n\r\n  return { gameInformation, pgnMoves, vsComputer };\r\n};\r\n"],"sourceRoot":""}