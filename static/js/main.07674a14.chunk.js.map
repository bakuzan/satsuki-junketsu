{"version":3,"sources":["constants/strings.js","constants/index.js","utils/mappers.js","utils/common.js","utils/game.js","actions/board.js","utils/squaresUpdate.js","utils/piece.js","actions/playback.js","utils/board.js","utils/specialMoves.js","constants/regex.js","constants/paths.js","constants/new-game-options.js","utils/pgn.js","actions/theme.js","constants/slider.js","constants/board.js","utils/toaster.js","utils/playback.js","utils/exportImport.js","store/configureStore.js","components/Portal.js","components/selectBox/SelectBox.js","components/tickbox/Tickbox.js","containers/AppSettings/index.js","components/svgLogo/SVGLogo.js","components/header/Header.js","components/toaster/Toaster.js","components/appInformation/index.js","containers/App.js","components/scales/Scales.js","constants/dnd-type.js","components/dragAndDrop/Target.js","components/dragAndDrop/Source.js","components/dragAndDrop/supportsTouch.js","components/dragAndDrop/index.js","components/piece/pieceSvgs/PieceSvgWrapper.js","components/piece/pieceSvgs/Bishop.js","components/piece/pieceSvgs/King.js","components/piece/pieceSvgs/Knight.js","components/piece/pieceSvgs/Pawn.js","components/piece/pieceSvgs/Queen.js","components/piece/pieceSvgs/Rook.js","components/piece/pieceSvgs/index.js","components/piece/Piece.js","components/square/Square.js","components/promotionOptions/PromotionOptions.js","components/Thinking/index.js","components/board/Board.js","utils/engine/possible-moves.js","constants/values.js","utils/engine/adjustGameDevelopment.js","utils/engine/calculatePieceDangerAndSecurity.js","utils/engine/calculateSquareControl.js","utils/engine/evaluate-board.js","utils/engine/index.js","utils/engine/prepareSpecialMoveBoard.js","containers/Board.js","components/graveyard/Graveyard.js","containers/Graveyard.js","components/moveList/MoveList.js","containers/MoveList.js","constants/icons.js","components/playback/Playback.js","containers/Playback.js","containers/MaintainAspectRatio.js","components/GameAction.js","components/newGameOptions/index.js","containers/ChessGame.js","Routes.js","registerServiceWorker.js","programmatic-board-moves.js","index.js","reducers/utils.js","reducers/theme.js","reducers/board-specialMove.js","reducers/board-playback.js","reducers/board-import.js","reducers/board.js","utils/state.js","reducers/index.js","store/configureStore.prod.js"],"names":["pieces","pawn","rook","knight","bishop","queen","king","Strings","localUserSettings","localGameState","colours","white","black","whiteHex","blackHex","specialMoves","promotionSelection","promotion","enPassant","castling","kingTargets","rookStarts","rookEnds","pgn","piece","capture","castle","check","checkmate","Constants","Paths","themes","name","class","boardThemes","board","mapPieceToMovedPiece","p","hasMoved","squarePosition","id","rank","file","mapSquaresToMove","oldSquare","newSquare","squaresAfterMove","captured","specialMove","from","to","contains","isAmbiguous","checkForMoveAmbiguity","checkStatus","getCurrentCheckStatusAfterMove","mapPieceToNewSquare","squares","index","currentSquare","oldIndex","findIndex","x","updateArrayPreservingOrder","mapPieceToNewPiece","updatedPiece","mapToSpecialMove","type","squareId","mapSquareIdToPromotion","mapSquareIdToEnPassant","mapSquareIdToCastling","getObjectFromLocalStorageByProperty","property","JSON","parse","localStorage","getItem","persistObjectToLocalStorage","newValues","values","updated","setItem","stringify","getUserSettings","persistUserSettings","getSavedGame","persistChessGame","arr","i","o","slice","reverseArray","reverse","capitalise","first","rest","lowerRest","toUpperCase","join","toLowerCase","compose","fns","reduce","f","g","args","generateUniqueId","replace","c","crypto","getRandomValues","Uint8Array","toString","padNumber","n","width","z","length","Array","formatDate","d","date","Date","getFullYear","getMonth","getDate","isObject","t","v","objectsAreEqual","o1","o2","Object","keys","every","k","one","two","map","b","getKeyWithScoreComparison","compare","pairs","pk","ck","getKeyWithBestScore","m","get","score","a","len","chunks","push","isWhitesTurn","moveCount","getCurrentPlayerColour","moves","getWinningPlayerColour","kingSquare","colour","hasFreePath","match","hasDiagonalMovement","files","ranks","square","isSameSquare","fileIndex","isOnDiagonal","isBetween","fromFileIndex","toFileIndex","isValidMove","fileDiff","Math","abs","rankDiff","isValidTake","attacker","toSquare","find","fromIndex","toIndex","isValidDefend","BOARD_SELECT_SQUARE","selectBoardSquare","BOARD_MOVE_PIECE","moveSelectedPiece","targetSquareId","BOARD_TAKE_PIECE","takePiece","BOARD_SPECIAL_MOVE","performSpecialMove","BOARD_RESET","resetBoard","option","BOARD_IMPORT_GAME","importGame","fileText","BOARD_SAVE_GAME","saveGame","BOARD_LOAD_GAME","loadGame","BOARD_TOGGLE_REVERSE","toggleReverseBoard","BOARD_COMPUTER_MOVE","performComputerMove","move","performMovementFromCurrentToTarget","oldState","fromSquareId","toSquareId","targetIndex","movingPiece","defendingPiece","graveyard","filter","selectedSquareId","performRookMovementForCastling","currentSquares","kingSquareId","newKingSquare","hasCastled","rookFileIndex","rookSquare","rookTargetIndex","movingRook","updateBoardToRemovePassedPawn","movedPieceSquareId","movedToSquare","direction","offsetRank","passedSquareIndex","passedPiece","moveIndex","updateSquaresToRemovePassedPawn","willResultInCheck","pieceSquare","matchKingForGivenColour","getAttacksOnKingSquare","possibleMovesForSelectedPiece","getCheckStatusForColour","attackers","isCheckmate","some","colourHasPossibleMoves","isCheck","CannotBeAmbiguous","targetSquare","movedPiece","includes","potentiallyAmbiguiousSquares","oldSquares","checkFunc","PLAYBACK_UPDATE_SLIDE_POSITION","updateSlidePosition","sliderName","sliderValue","PLAYBACK_STEP_FORWARD","stepSliderForward","stepDirection","PLAYBACK_STEP_BACK","stepSliderBack","getStartingPiece","indexOf","pieceId","buildStartingBoard","letters","lastIndex","fill","item","number","floor","letterIndex","shift","letter","s1","s2","num1","num2","middleNumber","checkPawnPromotion","pawnSquare","targetRank","checkPawnEnPassant","boardState","lastMove","fromRank","twoRanksForward","pawnIndex","availableSpecialMovesForSelectedPiece","pawnSpecialMoves","rookSquares","kingId","targetSquares","sq","rookId","startId","endId","squareIds","_","sqId","squareIndex","theoreticalSquaresResult","kingSpecialMoves","MATCH_NEW_LINE","MATCH_DIGIT_DOT_SPACE","MATCH_PGN_COMMENTS_PGN_GAME_RESULT","MATCH_EVERYTHING_UPTO_EQUALS","MATCH_EVERYTHING_BEFORE_FILE_RANK_PAIR","MATCH_PGN_WITH_ADDITIONAL_FILE","base","options","freeze","text","NewGameOptions","key","generatePortableGameNotationForMove","promoteTo","mapMovesToPGN","getKeyForFirstLetter","l","processPGNToMove","pgnStr","isWhiteMove","capturedColour","Regexes","resolveSpecialMove","isCastling","split","resolveCastlingToSquare","Number","resolveCastlingFromSquare","result","exec","resolveFromSquare","SET_APP_THEME","setApplicationTheme","theme","SET_BOARD_THEME","setBoardTheme","SLIDER_START","toaster","constructor","this","register","popToast","newToast","assign","time","now","title","message","info","success","error","warning","resolveSliderValue","max","selectNextMoveSquareId","nextMove","createBoardLayoutForMoveList","newSquares","promotionIndex","updateBoardUsingSpecialMove","TEXT_IN_QUOTES","exportPGNForMoves","vsComputer","pgnForMoves","moveNumber","hasNumber","nextStr","players","isComputer","isComputerBlack","dataForFile","downloadUrl","fileName","link","document","createElement","setAttribute","body","appendChild","click","removeChild","download","processDataIntoDownloadUrl","toLocaleString","dataStr","URL","createObjectURL","Blob","getProcessedLine","str","line","importPGNFromFile","gameInformation","movePairs","pgnMoves","movePair","isNaN","information","lines","wPlayer","bPlayer","resolvePlayers","module","exports","require","Portal","React","Component","props","super","el","parentTag","getTargetNode","querySelector","targetSelector","componentDidMount","componentWillUnmount","targetNode","render","ReactDOM","createPortal","children","defaultProps","SelectBox","value","disabled","onSelect","className","onChange","e","Tickbox","checked","themeMapper","appThemes","AppSettings","state","isDropdownOpen","handleDropdownChange","bind","handleCloseAppSettings","toggleDropdown","target","setState","prev","appTheme","boardTheme","reverseBoard","applyThemeToBody","icon","htmlFor","role","onClick","mapDispatchToProps","connect","app","SvgLogo","letterClass","animate","sideLength","container","findDOMNode","characters","querySelectorAll","cycleCharacters","clearInterval","interval","setInterval","getAttribute","nextLetterIndex","renderLetters","word","y","dy","xmlns","textLength","lengthAdjust","Header","Toaster","stack","timer","removeColdToast","removeToast","remainingToast","eatToast","clearTimeout","setTimeout","toast","list","classNames","tabIndex","onKeyDown","resolveENVVariable","trim","AppInformation","PureComponent","hovered","handleHovered","branch","process","version","onMouseEnter","onMouseLeave","aria-label","App","memo","Scales","renderScale","array","squareTarget","canDrop","monitor","dropActions","drop","onDrop","collectTarget","connectDropTarget","dropTarget","isOver","handleDrag","onDrag","pieceSource","beginDrag","endDrag","collectSource","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","isBrowser","window","getBackend","confirmed","navigator","maxTouchPoints","msMaxTouchPoints","getElementsByTagName","classList","add","isTouchDevice","TouchBackend","HTML5Backend","testElement","createMethod","method","original","DOMTokenList","prototype","token","arguments","call","toggle","_toggle","force","view","elemCtrProto","Element","objCtr","strTrim","String","arrIndexOf","DOMEx","code","DOMException","checkTokenAndGetIndex","test","ClassList","elem","trimmedClasses","classes","_updateClassName","classListProto","classListGetter","Error","tokens","remove","splice","defineProperty","classListPropDesc","enumerable","configurable","ex","__defineGetter__","withDropTarget","WrappedComponent","Target","ref","instance","DropTarget","DnDType","withDragSource","Source","DragSource","setColour","withColour","WrappedPiece","PieceSvgWrapper","colourSettings","pieceName","colourString","isWhite","oppositeColourString","oppositeColour","outline","detail","stroke","topCap","mainBody","face","mane","colourSettingsForPieces","displayName","size","viewBox","styleSettings","bishopStyleOuter","opacity","fillRule","fillOpacity","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeOpacity","bishopStyleOutline","bishopStyleDetail","Bishop","height","style","kingStyleOuter","kingStylePath1","kingStyleTopCap","kingStyleMainBody","kingStylePath4","kingStyleLines","King","knightStyleOuter","knightStyleMainBody","knightStyleFace","knightStyleMane","Knight","transform","pawnStyle","Pawn","queenStyleMainBody","queenStyleBlackCircles","queenStyleBlackSpikes","queenStylePath1","queenStyleBlackBaseline","queenStyleBlackCrownlines","queenStyleWhitePath2","Queen","cx","cy","r","rookStyleMainBody","rookStylePath1","rookStylePath2","rookStylePath3","Rook","Piece","shouldComponentUpdate","nextProps","isDraggingChanged","dataChanged","renderCoolChessPieceSvg","pieceColour","Square","handleDragPiece","isSelected","isPotentialMove","isSpecialMove","isInCheck","hasPiece","label","selected","promotionChoices","promotionAt","dispatch","actions","bindActionCreators","Thinking","Board","handleSquareSelection","handleCanDrop","handleDrop","potentialMoves","selectedSquare","currentPlayerColour","console","log","themeClass","isReversed","isReadOnly","isBlackTurn","isComputerTurn","boardSquares","boardFiles","boardRanks","checkedKingSquareId","isLocked","onSquareClick","groupCollapsed","groupEnd","Fragment","getPossibleMovesForPiece","fakeBoardState","possibleMoves","possibleSMoves","Map","Pieces","getPieceValueOnSquare","pieceValues","calculatePieceDangerAndSecurity","rating","turn","attackedBy","defendedBy","attackersC","defendersC","pieceSecurity","pieceDanger","tradeValue","defenders","pieceContentionScore","forEach","tradeEvaluation","sort","checkAttackerValidity","undefined","attackerSquare","attackerMoves","piecesInDanger","min","getSquareValuePawn","leftOrRightMove","rankIndex","calculateSquareControl","moveHistory","teamMateCount","rowValArray","colValArray","squareControl","Files","getPawnValue","totalMoves","squareValueSum","initPositionScoreValues","gameDevelopment","pieceValue","createPlayerPositionScore","colourTurn","incrementPieceValue","adjustGameDevelopment","resolvePositionScore","rateBoard","playingColour","ap","moveSquares","s","spMoveSquares","wp","bp","whitePositionScore","blackPositionScore","whiteScore","blackScore","generatePossibilities","currentColour","PossibleMoves","targetId","newBoard","sMove","postPieceMovementToTargetState","prepareSpecialMoveBoard","mapOutcomeToNextOutcome","futures","isMaximising","thresholdFutures","selectNextMove","t0","performance","outcomes","possibleOutcomes","repeat","results","set","processPotentialFutures","bestOutcome","engineMoveChoice","moveType","fromId","toId","t1","BoardContainer","computerSelected","makeComputerMove","componentDidUpdate","requestAnimationFrame","SJEngine","activeMoveIndex","playback","sliderPosition","currentBoardForDisplay","backend","HTML5DragDrop","DndProvider","context","DragAndDropContext","Graveyard","getCurrentMovesForPlaybackPosition","getPiecesForColour","resolveBoardDirection","whitePieces","blackPieces","MoveItem","isActive","active","MoveList","PlaybackButton","Playback","isPlaying","previousPosition","handleTogglePlay","createSliderStepHandler","handleSliderChange","sliderMaximum","onSlide","stopPlaying","onStepForward","playbackInterval","handler","onStepBack","event","isDisabled","isHidden","AT_THE_START","AT_THE_END","toggleData","Icons","sliderStyle","backgroundImage","AccountFor","header","status","MaintainAspectRatio","wrappedComponent","createRef","onResize","addEventListener","removeEventListener","current","rawValue","clientHeight","clientWidth","GameAction","display","Options","GG","ChessGame","isStartingNewGame","fileSelector","handleImport","handleNewGame","Response","accept","getGameContainer","SatsukiRoutes","exact","path","component","Routes","history","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","selectSquare","getElementById","getSquare","moveFromSquareToSquare","async","makeMoves","pop","prepareBoard","fastestGame","ambiguous","movesFor","examples","newGame","export","import","togglePlay","forward","back","Engine","AutomateBoard","createBrowserHistory","store","configureStore","origin","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","createReducer","initialState","handlers","action","hasOwnProperty","persistUserThemeChoice","themeType","settings","getUserTheme","specialMoveSubReducer","getPlaybackInitialState","handlePlaybackStep","playbackSubReducer","importSubReducer","cleanState","data","toHasPiece","func","canDoSpecialMove","isEnPassant","newState","setSelectedSquareId","updateSlideMaximum","composedPieceMovement","composedSpecialMove","composedImport","freshState","vsComputerYouBlack","vsPlayer","savedGame","upgradedState","upgradeSavedGameState","midState","createRootReducer","combineReducers","router","connectRouter","preloadedState","createStore","applyMiddleware","routerMiddleware"],"mappings":"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","file":"static/js/main.07674a14.chunk.js","sourcesContent":["const colours = {\r\n  white: 'white',\r\n  black: 'black',\r\n  whiteHex: '#ffffff',\r\n  blackHex: '#000000'\r\n};\r\n\r\nexport const pieces = {\r\n  pawn: 'pawn',\r\n  rook: 'rook',\r\n  knight: 'knight',\r\n  bishop: 'bishop',\r\n  queen: 'queen',\r\n  king: 'king'\r\n};\r\n\r\nconst specialMoves = {\r\n  promotionSelection: 'PROMOTION_SELECT',\r\n  promotion: 'PROMOTION_COMPLETE',\r\n  enPassant: 'EN_PASSANT',\r\n  castling: 'CASTLING'\r\n};\r\n\r\nconst pgn = {\r\n  piece: {\r\n    king: 'K',\r\n    queen: 'Q',\r\n    bishop: 'B',\r\n    knight: 'N',\r\n    rook: 'R',\r\n    pawn: ''\r\n  },\r\n  capture: 'x',\r\n  promotion: '=',\r\n  castle: { king: 'O-O', queen: 'O-O-O' },\r\n  enPassant: 'e.p.',\r\n  check: '+',\r\n  checkmate: '#'\r\n};\r\n\r\nconst castling = {\r\n  kingTargets: ['c', 'g'],\r\n  rookStarts: ['a', 'h'],\r\n  rookEnds: ['d', 'f']\r\n};\r\n\r\nconst Strings = {\r\n  localUserSettings: 'satsukiUserSettings',\r\n  localGameState: 'satsukiSavedGame',\r\n  colours,\r\n  pieces,\r\n  specialMoves,\r\n  castling,\r\n  pgn\r\n};\r\n\r\nexport default Strings;\r\n","import { Paths } from './paths';\r\nimport Strings from './strings';\r\nimport * as board from './board';\r\n\r\nconst Constants = {\r\n  Paths,\r\n  Strings,\r\n  themes: [\r\n    { name: 'Junketsu', class: 'theme-one' },\r\n    { name: 'Senketsu', class: 'theme-two' }\r\n  ],\r\n  boardThemes: [\r\n    { name: 'Standard', class: 'board-one' },\r\n    { name: 'Desert', class: 'board-two' },\r\n    { name: 'Forest', class: 'board-three' }\r\n  ],\r\n  ...board\r\n};\r\n\r\nexport default Constants;\r\n","import Strings from 'constants/strings';\r\nimport { getCurrentCheckStatusAfterMove, checkForMoveAmbiguity } from './piece';\r\nimport { updateArrayPreservingOrder } from './common';\r\n\r\nexport const mapPieceToMovedPiece = (p) => ({ ...p, hasMoved: true });\r\n\r\nconst squarePosition = ({ id, rank, file }) => ({ id, rank, file });\r\nexport const mapSquaresToMove = (\r\n  oldSquare,\r\n  newSquare,\r\n  squaresAfterMove,\r\n  captured,\r\n  specialMove\r\n) => ({\r\n  from: squarePosition(oldSquare),\r\n  to: squarePosition(newSquare),\r\n  piece: mapPieceToMovedPiece(newSquare.contains),\r\n  isAmbiguous: checkForMoveAmbiguity(\r\n    oldSquare,\r\n    newSquare,\r\n    squaresAfterMove,\r\n    captured\r\n  ),\r\n  checkStatus: getCurrentCheckStatusAfterMove(\r\n    newSquare.contains,\r\n    squaresAfterMove\r\n  ),\r\n  captured,\r\n  specialMove\r\n});\r\n\r\nexport const mapPieceToNewSquare = (squares, index, currentSquare) => {\r\n  const oldIndex = squares.findIndex((x) => x.id === currentSquare.id);\r\n  return updateArrayPreservingOrder(\r\n    updateArrayPreservingOrder(squares, index, {\r\n      contains: currentSquare.contains\r\n    }),\r\n    oldIndex,\r\n    { contains: null }\r\n  );\r\n};\r\n\r\nexport const mapPieceToNewPiece = (squares, index, updatedPiece) =>\r\n  updateArrayPreservingOrder(squares, index, {\r\n    contains: updatedPiece\r\n      ? { ...(squares[index].contains || {}), ...updatedPiece }\r\n      : null\r\n  });\r\n\r\nconst mapToSpecialMove = (type) => (squareId) => ({\r\n  type,\r\n  squareId\r\n});\r\n\r\nexport const mapSquareIdToPromotion = mapToSpecialMove(\r\n  Strings.specialMoves.promotionSelection\r\n);\r\nexport const mapSquareIdToEnPassant = mapToSpecialMove(\r\n  Strings.specialMoves.enPassant\r\n);\r\nexport const mapSquareIdToCastling = mapToSpecialMove(\r\n  Strings.specialMoves.castling\r\n);\r\n","import Strings from 'constants/strings';\r\n\r\nconst getObjectFromLocalStorageByProperty = (property) =>\r\n  JSON.parse(localStorage.getItem(property)) || null;\r\n\r\nconst persistObjectToLocalStorage = (property) => (newValues) => {\r\n  const values = getObjectFromLocalStorageByProperty(property) || {};\r\n  const updated = { ...values, ...newValues };\r\n  localStorage.setItem(property, JSON.stringify(updated));\r\n  return updated;\r\n};\r\n\r\nexport const getUserSettings = () =>\r\n  getObjectFromLocalStorageByProperty(Strings.localUserSettings);\r\n\r\nexport const persistUserSettings = persistObjectToLocalStorage(\r\n  Strings.localUserSettings\r\n);\r\n\r\nexport const getSavedGame = () =>\r\n  getObjectFromLocalStorageByProperty(Strings.localGameState);\r\n\r\nexport const persistChessGame = persistObjectToLocalStorage(\r\n  Strings.localGameState\r\n);\r\n\r\nexport const updateArrayPreservingOrder = (arr, i, o) => [\r\n  ...arr.slice(0, i),\r\n  { ...arr[i], ...o },\r\n  ...arr.slice(i + 1)\r\n];\r\n\r\nexport const reverseArray = (arr) => arr.slice(0).reverse();\r\n\r\nexport const capitalise = ([first, ...rest], lowerRest = false) =>\r\n  first.toUpperCase() +\r\n  (lowerRest ? rest.join('').toLowerCase() : rest.join(''));\r\n\r\nexport const compose = (...fns) =>\r\n  fns.reduce((f, g) => (...args) => f(g(...args)));\r\n\r\nexport function curry(uncurried) {\r\n  const parameters = Array.prototype.slice.call(arguments, 1);\r\n  return function() {\r\n    return uncurried.apply(\r\n      this,\r\n      parameters.concat(Array.prototype.slice.call(arguments, 0))\r\n    );\r\n  };\r\n}\r\n\r\nexport const generateUniqueId = () =>\r\n  ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n    (\r\n      c ^\r\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n    ).toString(16)\r\n  );\r\n\r\nexport const padNumber = (n, width, z = 0) => {\r\n  n += '';\r\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n};\r\n\r\nexport const formatDate = (d) => {\r\n  if (!d) return '';\r\n  const date = new Date(d);\r\n  return `${date.getFullYear()}-${padNumber(\r\n    date.getMonth() + 1,\r\n    2\r\n  )}-${padNumber(date.getDate(), 2)}`;\r\n};\r\n\r\nconst isTypeOf = (t) => (v) => typeof v === t;\r\nexport const isObject = isTypeOf('object');\r\nexport const isArray = (v) => v instanceof Array;\r\n\r\nexport const objectsAreEqual = (o1, o2) => {\r\n  if (!isObject(o1) || !isObject(o2)) return o1 === o2;\r\n  return Object.keys(o1).every((k) => {\r\n    const one = o1[k];\r\n    const two = o2[k];\r\n    return isArray(one)\r\n      ? one\r\n          .map((t, i) => objectsAreEqual(one[i], two[i]))\r\n          .every((b) => b === true)\r\n      : one === two;\r\n  });\r\n};\r\n\r\nexport const getMoveWithBestScore = (o1, o2) => {\r\n  const { moveResults: m1 } = o1;\r\n  const { moveResults: m2 } = o2;\r\n\r\n  const v1 = [...m1.values()];\r\n  const v2 = [...m2.values()];\r\n\r\n  const max1 = Math.max(...v1);\r\n  const max2 = Math.max(...v2);\r\n\r\n  return max1 >= max2 ? o1 : o2;\r\n};\r\n\r\nconst getKeyWithScoreComparison = (compare) => (pairs) => {\r\n  const keys = [...pairs.keys()];\r\n  if (keys.length === 0) {\r\n    return;\r\n  }\r\n\r\n  return keys.reduce((pk, ck) => (compare(pairs, pk, ck) ? pk : ck));\r\n};\r\n\r\nexport const getKeyWithLowestScore = getKeyWithScoreComparison(\r\n  (m, pk, ck) => m.get(pk).score <= m.get(ck).score\r\n);\r\nexport const getKeyWithBestScore = getKeyWithScoreComparison(\r\n  (m, pk, ck) => m.get(pk).score >= m.get(ck).score\r\n);\r\n\r\n// export const getKeyForMaxValue = (pairs) =>\r\n//   [...pairs.keys()].reduce(\r\n//     (pk, ck) => (pairs.get(pk) >= pairs.get(ck) ? pk : ck)\r\n//   );\r\n\r\nconst mirrorMatrix = (arr) => arr.map((a) => a.reverse());\r\nconst splitArray = (arr, len = 8) => {\r\n  const chunks = [];\r\n  let i = 0,\r\n    n = arr.length;\r\n\r\n  while (i < n) {\r\n    chunks.push(arr.slice(i, (i += len)));\r\n  }\r\n\r\n  return chunks;\r\n};\r\n\r\nexport const splitMirrorAndJoin = compose(\r\n  (arr) => arr.reduce((a, b) => [...a, ...b]),\r\n  mirrorMatrix,\r\n  splitArray\r\n);\r\n","import Constants from 'constants/index';\r\n\r\nimport { isSameSquare, isOnDiagonal, isBetween } from './board';\r\n\r\nexport const isWhitesTurn = (moveCount) =>\r\n  moveCount === 0 || moveCount % 2 === 0;\r\n\r\nexport const getCurrentPlayerColour = (moves) =>\r\n  isWhitesTurn(moves.length)\r\n    ? Constants.Strings.colours.white\r\n    : Constants.Strings.colours.black;\r\n\r\nexport const getWinningPlayerColour = (kingSquare) =>\r\n  kingSquare.contains.colour === Constants.Strings.colours.white\r\n    ? Constants.Strings.colours.black\r\n    : Constants.Strings.colours.white;\r\n\r\nexport const hasFreePath = (from, to, match, squares) => {\r\n  const hasDiagonalMovement = !(match.files || match.ranks);\r\n  for (let i = 0, length = squares.length; i < length; i++) {\r\n    const square = squares[i];\r\n    if (square.contains === null) continue;\r\n    if (isSameSquare(from, square)) continue;\r\n\r\n    const fileIndex = Constants.files.findIndex((x) => x === square.file);\r\n    if (hasDiagonalMovement) {\r\n      if (isOnDiagonal(fileIndex, from, to, square)) return false;\r\n    } else if (match.files && square.file === to.file) {\r\n      if (isBetween(from.rank, to.rank, square.rank)) return false;\r\n    } else if (match.ranks && square.rank === to.rank) {\r\n      const fromFileIndex = Constants.files.findIndex((x) => x === from.file);\r\n      const toFileIndex = Constants.files.findIndex((x) => x === to.file);\r\n      if (isBetween(fromFileIndex, toFileIndex, fileIndex)) return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nexport const isValidMove = (from, to, squares) => {\r\n  const { contains: piece } = from;\r\n  const match = {\r\n    files: from.file === to.file,\r\n    ranks: from.rank === to.rank\r\n  };\r\n  const fromFileIndex = Constants.files.findIndex((x) => x === from.file);\r\n  const toFileIndex = Constants.files.findIndex((x) => x === to.file);\r\n  const fileDiff = Math.abs(toFileIndex - fromFileIndex);\r\n  const rankDiff = Math.abs(to.rank - from.rank);\r\n\r\n  switch (piece.name) {\r\n    case Constants.Strings.pieces.pawn:\r\n      if (!match.files) return false;\r\n      if (piece.colour === Constants.Strings.colours.white) {\r\n        if (from.rank === 2 && 3 === to.rank) return true;\r\n        if (from.rank === 2 && 4 === to.rank)\r\n          return hasFreePath(from, to, match, squares);\r\n        if (rankDiff === 1 && from.rank < to.rank) return true;\r\n      } else if (piece.colour === Constants.Strings.colours.black) {\r\n        if (from.rank === 7 && 6 === to.rank) return true;\r\n        if (from.rank === 7 && 5 === to.rank)\r\n          return hasFreePath(from, to, match, squares);\r\n        if (rankDiff === 1 && from.rank > to.rank) return true;\r\n      }\r\n      return false;\r\n    case Constants.Strings.pieces.rook:\r\n      if (match.files || match.ranks)\r\n        return hasFreePath(from, to, match, squares);\r\n      return false;\r\n    case Constants.Strings.pieces.knight:\r\n      if (match.files || match.ranks) return false;\r\n      if (rankDiff === 1 && fileDiff === 2) return true;\r\n      if (rankDiff === 2 && fileDiff === 1) return true;\r\n      return false;\r\n    case Constants.Strings.pieces.bishop:\r\n      if (fileDiff === rankDiff) return hasFreePath(from, to, match, squares);\r\n      return false;\r\n    case Constants.Strings.pieces.queen:\r\n      if (match.files || match.ranks)\r\n        return hasFreePath(from, to, match, squares);\r\n      if (fileDiff === rankDiff) return hasFreePath(from, to, match, squares);\r\n      return false;\r\n    case Constants.Strings.pieces.king:\r\n      if (match.ranks && fileDiff === 1) return true;\r\n      if (match.files && rankDiff === 1) return true;\r\n      if (rankDiff === 1 && fileDiff === 1) return true;\r\n      return false;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const isValidTake = (from, to, squares) => {\r\n  const { contains: attacker } = from;\r\n  const toSquare = squares.find(\r\n    (x) => x.file === to.file && x.rank === to.rank\r\n  );\r\n\r\n  if (!toSquare || !toSquare.contains) {\r\n    return false;\r\n  }\r\n\r\n  if (toSquare.contains.colour === attacker.colour) {\r\n    return false;\r\n  }\r\n\r\n  switch (attacker.name) {\r\n    case Constants.Strings.pieces.pawn: {\r\n      const fromIndex = Constants.files.findIndex((x) => x === from.file);\r\n      const toIndex = Constants.files.findIndex((x) => x === to.file);\r\n\r\n      return (\r\n        Math.abs(toIndex - fromIndex) === 1 &&\r\n        Math.abs(to.rank - from.rank) === 1 &&\r\n        ((from.rank < to.rank &&\r\n          attacker.colour === Constants.Strings.colours.white) ||\r\n          (from.rank > to.rank &&\r\n            attacker.colour === Constants.Strings.colours.black))\r\n      );\r\n    }\r\n    case Constants.Strings.pieces.rook:\r\n    case Constants.Strings.pieces.knight:\r\n    case Constants.Strings.pieces.bishop:\r\n    case Constants.Strings.pieces.queen:\r\n    case Constants.Strings.pieces.king:\r\n      return isValidMove(from, to, squares);\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\n// isValidTake, without the piece colour checks\r\nexport function isValidDefend(from, to, squares) {\r\n  const { contains: attacker } = from;\r\n  const toSquare = squares.find(\r\n    (x) => x.file === to.file && x.rank === to.rank\r\n  );\r\n\r\n  if (!toSquare || !toSquare.contains) {\r\n    return false;\r\n  }\r\n\r\n  switch (attacker.name) {\r\n    case Constants.Strings.pieces.pawn: {\r\n      const fromIndex = Constants.files.findIndex((x) => x === from.file);\r\n      const toIndex = Constants.files.findIndex((x) => x === to.file);\r\n\r\n      return (\r\n        Math.abs(toIndex - fromIndex) === 1 &&\r\n        Math.abs(to.rank - from.rank) === 1 &&\r\n        ((from.rank < to.rank &&\r\n          attacker.colour === Constants.Strings.colours.white) ||\r\n          (from.rank > to.rank &&\r\n            attacker.colour === Constants.Strings.colours.black))\r\n      );\r\n    }\r\n    case Constants.Strings.pieces.rook:\r\n    case Constants.Strings.pieces.knight:\r\n    case Constants.Strings.pieces.bishop:\r\n    case Constants.Strings.pieces.queen:\r\n    case Constants.Strings.pieces.king:\r\n      return isValidMove(from, to, squares);\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n","export const BOARD_SELECT_SQUARE = 'BOARD_SELECT_SQUARE';\r\nexport const selectBoardSquare = (squareId) => ({\r\n  type: BOARD_SELECT_SQUARE,\r\n  squareId\r\n});\r\n\r\nexport const BOARD_MOVE_PIECE = 'BOARD_MOVE_PIECE';\r\nexport const moveSelectedPiece = (targetSquareId) => ({\r\n  type: BOARD_MOVE_PIECE,\r\n  targetSquareId\r\n});\r\n\r\nexport const BOARD_TAKE_PIECE = 'BOARD_TAKE_PIECE';\r\nexport const takePiece = (targetSquareId) => ({\r\n  type: BOARD_TAKE_PIECE,\r\n  targetSquareId\r\n});\r\n\r\nexport const BOARD_SPECIAL_MOVE = 'BOARD_SPECIAL_MOVE';\r\nexport const performSpecialMove = (specialMove) => ({\r\n  type: BOARD_SPECIAL_MOVE,\r\n  specialMove\r\n});\r\n\r\nexport const BOARD_RESET = 'BOARD_RESET';\r\nexport const resetBoard = (option) => ({\r\n  type: BOARD_RESET,\r\n  option\r\n});\r\n\r\nexport const BOARD_IMPORT_GAME = 'BOARD_IMPORT_GAME';\r\nexport const importGame = (fileText) => ({\r\n  type: BOARD_IMPORT_GAME,\r\n  fileText\r\n});\r\n\r\nexport const BOARD_SAVE_GAME = 'BOARD_SAVE_GAME';\r\nexport const saveGame = () => ({\r\n  type: BOARD_SAVE_GAME\r\n});\r\n\r\nexport const BOARD_LOAD_GAME = 'BOARD_LOAD_GAME';\r\nexport const loadGame = () => ({\r\n  type: BOARD_LOAD_GAME\r\n});\r\n\r\nexport const BOARD_TOGGLE_REVERSE = 'BOARD_TOGGLE_REVERSE';\r\nexport const toggleReverseBoard = () => ({\r\n  type: BOARD_TOGGLE_REVERSE\r\n});\r\n\r\nexport const BOARD_COMPUTER_MOVE = 'BOARD_COMPUTER_MOVE';\r\nexport const performComputerMove = (move) => ({\r\n  type: BOARD_COMPUTER_MOVE,\r\n  move\r\n});\r\n","import Strings from 'constants/strings';\r\nimport {\r\n  mapSquaresToMove,\r\n  mapPieceToMovedPiece,\r\n  mapPieceToNewSquare,\r\n  mapPieceToNewPiece\r\n} from './mappers';\r\n\r\nexport default function performMovementFromCurrentToTarget(\r\n  oldState,\r\n  fromSquareId,\r\n  toSquareId,\r\n  specialMove\r\n) {\r\n  const currentSquare = oldState.squares.find((x) => x.id === fromSquareId);\r\n  const targetIndex = oldState.squares.findIndex((x) => x.id === toSquareId);\r\n  const movingPiece = mapPieceToMovedPiece(currentSquare.contains);\r\n  const defendingPiece = !!oldState.squares[targetIndex].contains\r\n    ? { ...oldState.squares[targetIndex].contains }\r\n    : null;\r\n\r\n  const squares = mapPieceToNewSquare(oldState.squares, targetIndex, {\r\n    ...currentSquare,\r\n    contains: movingPiece\r\n  });\r\n\r\n  const moves = [\r\n    ...oldState.moves,\r\n    mapSquaresToMove(\r\n      currentSquare,\r\n      squares[targetIndex],\r\n      squares,\r\n      defendingPiece,\r\n      specialMove\r\n    )\r\n  ];\r\n\r\n  const graveyard = !!defendingPiece\r\n    ? [...oldState.graveyard, defendingPiece].filter((x) => !!x)\r\n    : oldState.graveyard;\r\n\r\n  return {\r\n    ...oldState,\r\n    selectedSquareId: null,\r\n    squares,\r\n    moves,\r\n    graveyard\r\n  };\r\n}\r\n\r\nexport function performRookMovementForCastling(currentSquares, kingSquareId) {\r\n  const newKingSquare = currentSquares.find((x) => x.id === kingSquareId);\r\n  newKingSquare.contains.hasCastled = true;\r\n\r\n  const rookFileIndex = Strings.castling.kingTargets.findIndex(\r\n    (x) => x === newKingSquare.file\r\n  );\r\n\r\n  const rookSquare = currentSquares.find(\r\n    (x) =>\r\n      x.rank === newKingSquare.rank &&\r\n      x.file === Strings.castling.rookStarts[rookFileIndex]\r\n  );\r\n\r\n  const rookTargetIndex = currentSquares.findIndex(\r\n    (x) =>\r\n      x.rank === newKingSquare.rank &&\r\n      x.file === Strings.castling.rookEnds[rookFileIndex]\r\n  );\r\n\r\n  const movingRook = mapPieceToMovedPiece(rookSquare.contains);\r\n  const squares = mapPieceToNewSquare(currentSquares, rookTargetIndex, {\r\n    ...rookSquare,\r\n    contains: movingRook\r\n  });\r\n\r\n  return squares;\r\n}\r\n\r\nexport function updateBoardToRemovePassedPawn(oldState, movedPieceSquareId) {\r\n  const movedToSquare = oldState.squares.find(\r\n    (x) => x.id === movedPieceSquareId\r\n  );\r\n  const direction =\r\n    movedToSquare.contains.colour === Strings.colours.white ? 1 : -1;\r\n  const offsetRank = movedToSquare.rank - direction;\r\n  const passedSquareIndex = oldState.squares.findIndex(\r\n    (x) => x.file === movedToSquare.file && x.rank === offsetRank\r\n  );\r\n  const passedPiece = {\r\n    ...oldState.squares[passedSquareIndex].contains\r\n  };\r\n  const squares = mapPieceToNewPiece(oldState.squares, passedSquareIndex, null);\r\n  const moveIndex = oldState.moves.length - 1;\r\n  const moves = [\r\n    ...oldState.moves.slice(0, moveIndex),\r\n    {\r\n      ...oldState.moves[moveIndex],\r\n      captured: { ...passedPiece }\r\n    }\r\n  ];\r\n\r\n  return {\r\n    ...oldState,\r\n    squares,\r\n    moves,\r\n    graveyard: [...oldState.graveyard, passedPiece]\r\n  };\r\n}\r\n\r\nexport function updateSquaresToRemovePassedPawn(squares, movedPieceSquareId) {\r\n  const fakeStateWithNewSquares = updateBoardToRemovePassedPawn(\r\n    { moves: [], graveyard: [], squares },\r\n    movedPieceSquareId\r\n  );\r\n  return fakeStateWithNewSquares.squares;\r\n}\r\n","import Constants from 'constants/index';\r\n\r\nimport { mapPieceToNewSquare, mapPieceToNewPiece } from './mappers';\r\nimport { isValidMove, isValidTake } from './game';\r\n\r\nexport const willResultInCheck = (pieceSquare, squares) => {\r\n  const colour = pieceSquare.contains.colour;\r\n  const kingSquare = squares.find(matchKingForGivenColour(colour));\r\n  return !!getAttacksOnKingSquare(kingSquare, squares).length;\r\n};\r\n\r\nexport const possibleMovesForSelectedPiece = ({\r\n  selectedSquareId,\r\n  squares\r\n}) => {\r\n  if (selectedSquareId === null) {\r\n    return [];\r\n  }\r\n\r\n  const pieceSquare = squares.find((x) => x.id === selectedSquareId);\r\n\r\n  return squares.reduce((p, square, index) => {\r\n    const func = square.contains ? isValidTake : isValidMove;\r\n\r\n    return func(pieceSquare, square, squares) &&\r\n      !willResultInCheck(\r\n        pieceSquare,\r\n        mapPieceToNewSquare(squares, index, pieceSquare)\r\n      )\r\n      ? [...p, square.id]\r\n      : p;\r\n  }, []);\r\n};\r\n\r\nconst matchKingForGivenColour = (colour) => (x) =>\r\n  x.contains &&\r\n  x.contains.name === Constants.Strings.pieces.king &&\r\n  x.contains.colour === colour;\r\n\r\nconst getAttacksOnKingSquare = (kingSquare, squares) =>\r\n  squares\r\n    .filter(\r\n      (x) =>\r\n        kingSquare &&\r\n        x.contains &&\r\n        x.contains.colour !== kingSquare.contains.colour\r\n    )\r\n    .reduce((p, square) => {\r\n      if (!isValidTake(square, kingSquare, squares)) return p;\r\n      return [...p, square];\r\n    }, []);\r\n\r\nconst colourHasPossibleMoves = (colour, squares) => {\r\n  const piecesForColour = squares.filter(\r\n    (x) => x.contains && x.contains.colour === colour\r\n  );\r\n  return piecesForColour.some(\r\n    (x) =>\r\n      !!possibleMovesForSelectedPiece({ selectedSquareId: x.id, squares })\r\n        .length\r\n  );\r\n};\r\n\r\nexport const getCheckStatusForColour = (colour, squares) => {\r\n  const kingSquare = squares.find(matchKingForGivenColour(colour));\r\n  const attackers = getAttacksOnKingSquare(kingSquare, squares);\r\n  const isCheckmate =\r\n    !!attackers.length && !colourHasPossibleMoves(colour, squares);\r\n  return {\r\n    kingSquare,\r\n    attackers,\r\n    isCheckmate\r\n  };\r\n};\r\n\r\nexport const getCurrentCheckStatusAfterMove = (piece, squares) => {\r\n  const colour =\r\n    piece.colour === Constants.Strings.colours.white\r\n      ? Constants.Strings.colours.black\r\n      : Constants.Strings.colours.white;\r\n  const { attackers, isCheckmate } = getCheckStatusForColour(colour, squares);\r\n  return {\r\n    isCheck: !!attackers.length,\r\n    isCheckmate\r\n  };\r\n};\r\n\r\nconst CannotBeAmbiguous = [\r\n  Constants.Strings.pieces.king,\r\n  Constants.Strings.pieces.queen,\r\n  Constants.Strings.pieces.bishop\r\n];\r\n\r\nexport const checkForMoveAmbiguity = (\r\n  oldSquare,\r\n  targetSquare,\r\n  squaresAfterMove,\r\n  captured\r\n) => {\r\n  const movedPiece = targetSquare.contains;\r\n  if (CannotBeAmbiguous.includes(movedPiece.name)) return false;\r\n\r\n  const potentiallyAmbiguiousSquares = squaresAfterMove.filter(\r\n    (x) =>\r\n      x.id !== targetSquare.id &&\r\n      x.contains &&\r\n      x.contains.name === movedPiece.name &&\r\n      x.contains.colour === movedPiece.colour\r\n  );\r\n  if (potentiallyAmbiguiousSquares.length === 0) return false;\r\n\r\n  const fromIndex = squaresAfterMove.findIndex((x) => x.id === oldSquare.id);\r\n  const toIndex = squaresAfterMove.findIndex((x) => x.id === targetSquare.id);\r\n  let oldSquares = mapPieceToNewPiece(squaresAfterMove, fromIndex, {\r\n    ...targetSquare.contains\r\n  });\r\n  oldSquares = mapPieceToNewPiece(oldSquares, toIndex, captured);\r\n\r\n  const checkFunc = captured ? isValidTake : isValidMove;\r\n  return potentiallyAmbiguiousSquares.some((x) =>\r\n    checkFunc(x, targetSquare, oldSquares)\r\n  );\r\n};\r\n","export const PLAYBACK_UPDATE_SLIDE_POSITION = 'PLAYBACK_UPDATE_SLIDE_POSITION';\r\nexport const updateSlidePosition = (sliderName, sliderValue) => ({\r\n  type: PLAYBACK_UPDATE_SLIDE_POSITION,\r\n  sliderValue\r\n});\r\n\r\nexport const PLAYBACK_STEP_FORWARD = 'PLAYBACK_STEP_FORWARD';\r\nexport const stepSliderForward = (sliderName, stepDirection) => ({\r\n  type: PLAYBACK_STEP_FORWARD,\r\n  stepDirection\r\n});\r\n\r\nexport const PLAYBACK_STEP_BACK = 'PLAYBACK_STEP_BACK';\r\nexport const stepSliderBack = (sliderName, stepDirection) => ({\r\n  type: PLAYBACK_STEP_BACK,\r\n  stepDirection\r\n});\r\n","import Constants from 'constants/index';\r\n\r\nconst { pieces, colours } = Constants.Strings;\r\n\r\nconst getStartingPiece = (rank, file) => {\r\n  if ([1, 2, 7, 8].indexOf(rank) === -1) return null;\r\n\r\n  let piece = '',\r\n    pieceId = '';\r\n  const colour = rank < 5 ? colours.white : colours.black;\r\n\r\n  if ([2, 7].indexOf(rank) > -1) {\r\n    [piece, pieceId] = [pieces.pawn, 'p'];\r\n  } else if (['a', 'h'].indexOf(file) > -1) {\r\n    [piece, pieceId] = [pieces.rook, 'r'];\r\n  } else if (['b', 'g'].indexOf(file) > -1) {\r\n    [piece, pieceId] = [pieces.knight, 'n'];\r\n  } else if (['c', 'f'].indexOf(file) > -1) {\r\n    [piece, pieceId] = [pieces.bishop, 'b'];\r\n  } else {\r\n    [piece, pieceId] = file === 'd' ? [pieces.queen, 'q'] : [pieces.king, 'k'];\r\n  }\r\n\r\n  return {\r\n    id: `${colour.slice(0, 1)}-${pieceId}-${file}`,\r\n    name: piece,\r\n    colour,\r\n    hasMoved: false,\r\n    ...(piece === pieces.king ? { hasCastled: false } : {})\r\n  };\r\n};\r\n\r\nexport const buildStartingBoard = () => {\r\n  let letters = Constants.files.slice(0);\r\n  let lastIndex = -1;\r\n\r\n  return Array(64)\r\n    .fill(null)\r\n    .map((item, index) => {\r\n      const number = 8 - Math.floor(index / 8);\r\n      const letterIndex = (index + number) % 8;\r\n      if (letterIndex === lastIndex) {\r\n        letters.push(letters.shift());\r\n        lastIndex = -1;\r\n      }\r\n\r\n      const letter = letters[letterIndex];\r\n      lastIndex = letterIndex;\r\n      return {\r\n        id: index,\r\n        rank: number,\r\n        file: letter,\r\n        contains: getStartingPiece(number, letter)\r\n      };\r\n    });\r\n};\r\n\r\nexport const isSameSquare = (s1, s2) =>\r\n  s1.rank === s2.rank && s1.file === s2.file;\r\n\r\nexport const isBetween = (num1, num2, middleNumber) => {\r\n  if (num1 < middleNumber && middleNumber < num2) return true;\r\n  if (num1 > middleNumber && middleNumber > num2) return true;\r\n  return false;\r\n};\r\n\r\nexport const isOnDiagonal = (fileIndex, from, to, square) => {\r\n  const fromFileIndex = Constants.files.findIndex((x) => x === from.file);\r\n  const fileDiff = Math.abs(fileIndex - fromFileIndex);\r\n  const rankDiff = Math.abs(square.rank - from.rank);\r\n  if (!(fileDiff === rankDiff)) return false;\r\n  if (!isBetween(from.rank, to.rank, square.rank)) return false;\r\n\r\n  const toFileIndex = Constants.files.findIndex((x) => x === to.file);\r\n  if (!isBetween(fromFileIndex, toFileIndex, fileIndex)) return false;\r\n  return true;\r\n};\r\n","import Constants from 'constants/index';\r\n\r\nimport {\r\n  mapSquareIdToPromotion,\r\n  mapSquareIdToEnPassant,\r\n  mapSquareIdToCastling,\r\n  mapPieceToNewSquare\r\n} from './mappers';\r\nimport { possibleMovesForSelectedPiece, willResultInCheck } from './piece';\r\n\r\nconst { Strings } = Constants;\r\n\r\nconst BLACK_BACK_ROW = 8;\r\nconst BLACK_PAWN_ROW = 7;\r\nconst WHITE_PAWN_ROW = 2;\r\nconst WHITE_BACK_ROW = 1;\r\n\r\nfunction checkPawnPromotion(pawnSquare, squares) {\r\n  const colour = pawnSquare.contains.colour;\r\n  const targetRank =\r\n    colour === Strings.colours.white ? BLACK_BACK_ROW : WHITE_BACK_ROW;\r\n  if (Math.abs(pawnSquare.rank - targetRank) !== 1) return [];\r\n  return possibleMovesForSelectedPiece({\r\n    selectedSquareId: pawnSquare.id,\r\n    squares\r\n  }).map(mapSquareIdToPromotion);\r\n}\r\n\r\nfunction checkPawnEnPassant(pawnSquare, boardState) {\r\n  const { squares, moves } = boardState;\r\n  const [lastMove] = moves.slice(-1);\r\n  if (!lastMove) return [];\r\n  if (lastMove.piece.name !== Strings.pieces.pawn) return [];\r\n\r\n  const fromRank =\r\n    lastMove.piece.colour === Strings.colours.white\r\n      ? WHITE_PAWN_ROW\r\n      : BLACK_PAWN_ROW;\r\n\r\n  const direction =\r\n    pawnSquare.contains.colour === Strings.colours.white ? -1 : 1;\r\n  const twoRanksForward = fromRank + 2 * direction;\r\n\r\n  if (\r\n    lastMove.from.rank !== fromRank ||\r\n    lastMove.to.rank !== pawnSquare.rank ||\r\n    lastMove.to.rank !== twoRanksForward\r\n  )\r\n    return [];\r\n\r\n  const toIndex = Constants.files.findIndex((x) => x === lastMove.to.file);\r\n  const pawnIndex = Constants.files.findIndex((x) => x === pawnSquare.file);\r\n  if (Math.abs(toIndex - pawnIndex) !== 1) return [];\r\n\r\n  const targetSquare = squares.find(\r\n    (x) =>\r\n      x.file === lastMove.to.file && x.rank === lastMove.to.rank - direction\r\n  );\r\n  return [mapSquareIdToEnPassant(targetSquare.id)];\r\n}\r\n\r\nfunction pawnSpecialMoves(pawnSquare, boardState) {\r\n  return [\r\n    ...checkPawnPromotion(pawnSquare, boardState.squares),\r\n    ...checkPawnEnPassant(pawnSquare, boardState)\r\n  ];\r\n}\r\n\r\nfunction kingSpecialMoves(kingSquare, squares) {\r\n  if (kingSquare.contains.hasMoved) {\r\n    return [];\r\n  }\r\n\r\n  const rookSquares = squares.filter(\r\n    (x) =>\r\n      x.contains &&\r\n      x.contains.name === Strings.pieces.rook &&\r\n      x.contains.colour === kingSquare.contains.colour &&\r\n      !x.contains.hasMoved\r\n  );\r\n\r\n  if (!rookSquares.length) {\r\n    return [];\r\n  }\r\n\r\n  const kingId = kingSquare.id;\r\n  const targetSquares = rookSquares.reduce((p, sq) => {\r\n    const rookId = sq.id;\r\n    const [startId, endId] =\r\n      rookId < kingId ? [rookId, kingId] : [kingId, rookId];\r\n\r\n    const squareIds = Array.from(\r\n      new Array(endId - startId - 1),\r\n      (_, i) => 1 + i + startId\r\n    );\r\n\r\n    const notEverySquareIsEmpty = !squares\r\n      .filter((x) => squareIds.includes(x.id))\r\n      .every((x) => !x.contains);\r\n\r\n    if (notEverySquareIsEmpty) {\r\n      return p;\r\n    }\r\n\r\n    return squareIds.slice(0, 2).every((sqId) => {\r\n      const squareIndex = squares.findIndex((x) => x.id === sqId);\r\n      const theoreticalSquaresResult = mapPieceToNewSquare(\r\n        squares,\r\n        squareIndex,\r\n        kingSquare\r\n      );\r\n\r\n      return !willResultInCheck(kingSquare, theoreticalSquaresResult);\r\n    })\r\n      ? [...p, squareIds[1]]\r\n      : p;\r\n  }, []);\r\n\r\n  if (!targetSquares.length) {\r\n    return [];\r\n  }\r\n\r\n  return targetSquares.map(mapSquareIdToCastling);\r\n}\r\n\r\nexport default function availableSpecialMovesForSelectedPiece(boardState) {\r\n  const { squares, selectedSquareId } = boardState;\r\n  const square = squares.find((x) => x.id === selectedSquareId);\r\n\r\n  if (!square) {\r\n    return [];\r\n  }\r\n\r\n  switch (square.contains.name) {\r\n    case Strings.pieces.pawn:\r\n      return pawnSpecialMoves(square, boardState);\r\n    case Strings.pieces.king:\r\n      return kingSpecialMoves(square, squares);\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n","export const MATCH_NEW_LINE = /\\n/g;\r\nexport const MATCH_DIGIT_DOT_SPACE = /\\d\\. /g;\r\nexport const MATCH_PGN_COMMENTS_PGN_GAME_RESULT = /\\d\\/\\d-\\d\\/\\d$|\\d\\/\\d$|\\{.*\\}/g;\r\n\r\nexport const MATCH_EVERYTHING_UPTO_EQUALS = /.*=/;\r\nexport const MATCH_EVERYTHING_BEFORE_FILE_RANK_PAIR = /.*(?=[a-h]\\d)/g;\r\n\r\nexport const MATCH_PGN_WITH_ADDITIONAL_FILE = /[a-h]x[a-h]|[a-h]{2}/;\r\n","export const Paths = {\r\n  base: '/satsuki-junketsu'\r\n};\r\n","const options = Object.freeze([\r\n  { id: 1, text: 'vs Computer (You as White)' },\r\n  { id: 2, text: 'vs Computer (You as Black)' },\r\n  { id: 3, text: 'vs Player' }\r\n]);\r\n\r\nexport default options;\r\n\r\nexport const NewGameOptions = Object.freeze(\r\n  options.reduce((p, c) => {\r\n    const key = c.text.replace(/\\(|\\)| |as/g, '');\r\n\r\n    return {\r\n      ...p,\r\n      [key]: c.id\r\n    };\r\n  }, {})\r\n);\r\n","import Strings from 'constants/strings';\r\nimport * as Regexes from 'constants/regex';\r\n\r\nimport { isWhitesTurn } from 'utils/game';\r\nimport { generateUniqueId } from 'utils/common';\r\n\r\nconst KING_SIDE_CASTLE = 'g';\r\n\r\nfunction generatePortableGameNotationForMove(item) {\r\n  const id = generateUniqueId();\r\n  let pgn = '';\r\n  if (\r\n    item.specialMove &&\r\n    item.specialMove.type === Strings.specialMoves.castling\r\n  ) {\r\n    const isKingSide = item.to.file === KING_SIDE_CASTLE;\r\n    return {\r\n      id,\r\n      pgn: isKingSide ? Strings.pgn.castle.king : Strings.pgn.castle.queen\r\n    };\r\n  }\r\n  pgn += Strings.pgn.piece[item.piece.name];\r\n  if (item.isAmbiguous) pgn += `${item.from.file}`;\r\n  if (item.captured) pgn += `${Strings.pgn.capture}`;\r\n  pgn += `${item.to.file}${item.to.rank}`;\r\n  if (\r\n    item.specialMove &&\r\n    item.specialMove.type === Strings.specialMoves.promotion\r\n  ) {\r\n    pgn += `${Strings.pgn.promotion}${Strings.pgn.piece[\r\n      item.specialMove.promoteTo\r\n    ] || ''}`;\r\n  }\r\n  if (\r\n    item.specialMove &&\r\n    item.specialMove.type === Strings.specialMoves.enPassant\r\n  ) {\r\n    pgn += `${Strings.pgn.enPassant}`;\r\n  }\r\n  const { isCheck, isCheckmate } = item.checkStatus;\r\n  if (!isCheckmate && isCheck) pgn += Strings.pgn.check;\r\n  if (isCheckmate) pgn += Strings.pgn.checkmate;\r\n  return {\r\n    id,\r\n    pgn\r\n  };\r\n}\r\n\r\nexport const mapMovesToPGN = arr =>\r\n  arr.map(generatePortableGameNotationForMove);\r\n\r\n/* Above, generating pgn from board state\r\n * Below, importing pgn, using it to create moves.\r\n */\r\n\r\nconst getKeyForFirstLetter = l => {\r\n  const keys = Object.keys(Strings.pgn.piece);\r\n  return keys.find(x => Strings.pgn.piece[x] === l) || Strings.pieces.pawn;\r\n};\r\n\r\nconst isKingSideCastle = s => s.length === 3;\r\nconst resolveCastlingFromSquare = (pgnStr, isWhiteMove) => ({\r\n  file: 'e',\r\n  rank: isWhiteMove ? 1 : 8\r\n});\r\n\r\nfunction resolveCastlingToSquare(pgnStr, isWhiteMove) {\r\n  const rank = isWhiteMove ? 1 : 8;\r\n  return isKingSideCastle(pgnStr) ? { file: 'g', rank } : { file: 'c', rank };\r\n}\r\n\r\nfunction resolveSpecialMove(pgnStr) {\r\n  if (pgnStr === Strings.pgn.castle.king || pgnStr === Strings.pgn.castle.queen)\r\n    return { type: Strings.specialMoves.castling };\r\n\r\n  if (pgnStr.includes(Strings.pgn.promotion))\r\n    return {\r\n      type: Strings.specialMoves.promotion,\r\n      promoteTo: getKeyForFirstLetter(\r\n        pgnStr.replace(Regexes.MATCH_EVERYTHING_UPTO_EQUALS, '')\r\n      )\r\n    };\r\n\r\n  if (pgnStr.includes(Strings.pgn.enPassant))\r\n    return { type: Strings.specialMoves.enPassant };\r\n\r\n  return null;\r\n}\r\n\r\nfunction resolveFromSquare(pgnStr) {\r\n  const result = Regexes.MATCH_PGN_WITH_ADDITIONAL_FILE.exec(pgnStr);\r\n  if (!result) return null;\r\n  return { file: result[0].slice(0, 1) };\r\n}\r\n\r\nexport function processPGNToMove(pgnStr, index) {\r\n  const isWhiteMove = isWhitesTurn(index);\r\n  const colour = isWhiteMove ? Strings.colours.white : Strings.colours.black;\r\n  const capturedColour = !isWhiteMove\r\n    ? Strings.colours.white\r\n    : Strings.colours.black;\r\n\r\n  const specialMove = resolveSpecialMove(pgnStr);\r\n  const isCastling =\r\n    specialMove && specialMove.type === Strings.specialMoves.castling;\r\n\r\n  const name = getKeyForFirstLetter(pgnStr.slice(0, 1));\r\n  const piece = isCastling\r\n    ? { colour, name: Strings.pieces.king, hasMoved: true }\r\n    : { colour, name, hasMoved: true };\r\n\r\n  const [file, rank] = pgnStr\r\n    .replace(Regexes.MATCH_EVERYTHING_BEFORE_FILE_RANK_PAIR, '')\r\n    .split('');\r\n  const to = !isCastling\r\n    ? { file, rank: Number(rank) }\r\n    : resolveCastlingToSquare(pgnStr, isWhiteMove);\r\n\r\n  const from = isCastling\r\n    ? resolveCastlingFromSquare(pgnStr, isWhiteMove)\r\n    : resolveFromSquare(pgnStr);\r\n  const captured = pgnStr.includes('x') ? { colour: capturedColour } : null;\r\n\r\n  return {\r\n    from,\r\n    piece,\r\n    to,\r\n    isAmbiguous: !isCastling && !!from,\r\n    specialMove,\r\n    captured,\r\n    checkStatus: {\r\n      isCheck: pgnStr.includes('+'),\r\n      isCheckmate: pgnStr.includes('#')\r\n    }\r\n  };\r\n}\r\n","export const SET_APP_THEME = 'SET_APP_THEME';\r\nexport const setApplicationTheme = theme => ({\r\n  type: SET_APP_THEME,\r\n  theme\r\n});\r\n\r\nexport const SET_BOARD_THEME = 'SET_BOARD_THEME';\r\nexport const setBoardTheme = theme => ({\r\n  type: SET_BOARD_THEME,\r\n  theme\r\n});\r\n","export const SLIDER_START = 0;\r\nexport const SLIDER_END = 100;\r\n","export const files = Object.freeze(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']);\r\nexport const ranks = Object.freeze([8, 7, 6, 5, 4, 3, 2, 1]);\r\n","const INFO = 'INFO';\r\nconst SUCCESS = 'SUCCESS';\r\nconst ERROR = 'ERROR';\r\nconst WARNING = 'WARNING';\r\n\r\nclass ToasterService {\r\n  constructor() {\r\n    this.toaster = {};\r\n  }\r\n\r\n  register(toaster) {\r\n    this.toaster = toaster;\r\n  }\r\n\r\n  popToast(newToast) {\r\n    this.toaster.popToast(\r\n      Object.assign(\r\n        {},\r\n        {\r\n          time: Date.now(),\r\n          type: INFO,\r\n          title: 'Just so your aware',\r\n          message: 'This is the default toast text!'\r\n        },\r\n        newToast\r\n      )\r\n    );\r\n  }\r\n\r\n  info(title, message) {\r\n    this.popToast({ type: INFO, title, message });\r\n  }\r\n  success(title, message) {\r\n    this.popToast({ type: SUCCESS, title, message });\r\n  }\r\n  error(title, message) {\r\n    this.popToast({ type: ERROR, title, message });\r\n  }\r\n  warning(title, message) {\r\n    this.popToast({ type: WARNING, title, message });\r\n  }\r\n}\r\n\r\nconst toaster = new ToasterService();\r\nexport default toaster;\r\n","import Strings from 'constants/strings';\r\nimport { SLIDER_START } from 'constants/slider';\r\nimport { buildStartingBoard } from './board';\r\nimport {\r\n  mapPieceToMovedPiece,\r\n  mapPieceToNewSquare,\r\n  mapPieceToNewPiece\r\n} from './mappers';\r\nimport {\r\n  performRookMovementForCastling,\r\n  updateSquaresToRemovePassedPawn\r\n} from './squaresUpdate';\r\n\r\nexport const resolveSliderValue = (v, max) =>\r\n  v > max ? max : v < SLIDER_START ? SLIDER_START : v;\r\n\r\nexport const selectNextMoveSquareId = (moves, moveIndex) => {\r\n  const nextMove = moves[moveIndex];\r\n  if (!nextMove) return null;\r\n  return nextMove.from.id;\r\n};\r\n\r\nconst updateBoardUsingSpecialMove = (specialMove, squares) => {\r\n  const { type, squareId: targetSquareId } = specialMove;\r\n  switch (type) {\r\n    case Strings.specialMoves.castling:\r\n      return performRookMovementForCastling(squares, targetSquareId);\r\n    case Strings.specialMoves.enPassant:\r\n      return updateSquaresToRemovePassedPawn(squares, targetSquareId);\r\n    case Strings.specialMoves.promotion: {\r\n      const promotionIndex = squares.findIndex(x => x.id === targetSquareId);\r\n      return mapPieceToNewPiece(squares, promotionIndex, {\r\n        name: specialMove.promoteTo\r\n      });\r\n    }\r\n    default:\r\n      return squares;\r\n  }\r\n};\r\n\r\nexport const createBoardLayoutForMoveList = moves =>\r\n  moves.reduce((squares, m) => {\r\n    const from = squares.find(x => x.id === m.from.id);\r\n    const toIndex = squares.findIndex(x => x.id === m.to.id);\r\n    const contains = mapPieceToMovedPiece(from.contains);\r\n    let newSquares = mapPieceToNewSquare(squares, toIndex, {\r\n      ...from,\r\n      contains\r\n    });\r\n\r\n    if (m.specialMove) {\r\n      newSquares = updateBoardUsingSpecialMove(m.specialMove, newSquares);\r\n    }\r\n\r\n    return newSquares;\r\n  }, buildStartingBoard());\r\n","import { formatDate } from './common';\r\nimport { mapMovesToPGN } from './pgn';\r\n\r\nimport * as Regexes from 'constants/regex';\r\n\r\nconst PLAYER = 'Player';\r\nconst COMPUTER = 'Computer';\r\nconst TEXT_IN_QUOTES = /\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"/;\r\n\r\nexport const exportPGNForMoves = (moves, vsComputer) => {\r\n  const pgnForMoves = mapMovesToPGN(moves);\r\n  let moveNumber = 1;\r\n  const pgn = pgnForMoves.reduce((p, c, i) => {\r\n    const hasNumber = i === 0 || i % 2 === 0;\r\n    const nextStr = hasNumber ? ` ${moveNumber}. ${c.pgn}` : `${c.pgn}`;\r\n    if (!hasNumber) moveNumber++;\r\n    return `${p} ${nextStr}${!hasNumber && moveNumber % 5 === 0 ? `\\n ` : ''}`;\r\n  }, '');\r\n\r\n  const date = formatDate(new Date());\r\n  const players = !vsComputer.isComputer\r\n    ? [PLAYER, PLAYER]\r\n    : vsComputer.isComputerBlack ? [PLAYER, COMPUTER] : [COMPUTER, PLAYER];\r\n\r\n  const dataForFile = `\r\n  [Site \"https://bakuzan.github.io/satsuki-junketsu/\"]\r\n  [Date \"${date}\"]\r\n  [White \"${players[0]}\"]\r\n  [Black \"${players[1]}\"]\r\n  ${pgn}\r\n  `;\r\n\r\n  download(\r\n    processDataIntoDownloadUrl(dataForFile),\r\n    `chess-game-${new Date().toLocaleString()}.pgn`\r\n  );\r\n};\r\n\r\nconst processDataIntoDownloadUrl = (dataStr) =>\r\n  URL.createObjectURL(new Blob([dataStr]));\r\n\r\nexport function download(downloadUrl, fileName) {\r\n  const link = document.createElement('a');\r\n  link.setAttribute('href', downloadUrl);\r\n  link.setAttribute('download', fileName);\r\n  document.body.appendChild(link); // Required for FF\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}\r\n\r\nconst getProcessedLine = (arr, str) => {\r\n  const line = arr.find((x) => x.includes(str));\r\n  if (!line) return '';\r\n  return line.match(TEXT_IN_QUOTES)[0].replace(/\"/g, '');\r\n};\r\n\r\nconst resolvePlayers = (information) => {\r\n  const lines = information.split('\\n');\r\n  const wPlayer = getProcessedLine(lines, 'White');\r\n  const bPlayer = getProcessedLine(lines, 'Black');\r\n\r\n  return {\r\n    isComputer: wPlayer === COMPUTER || bPlayer === COMPUTER,\r\n    isComputerBlack: bPlayer === COMPUTER\r\n  };\r\n};\r\n\r\nexport const importPGNFromFile = (fileText) => {\r\n  const [gameInformation, ...movePairs] = fileText\r\n    .replace(Regexes.MATCH_PGN_COMMENTS_PGN_GAME_RESULT, '')\r\n    .split(Regexes.MATCH_DIGIT_DOT_SPACE);\r\n\r\n  const pgnMoves = movePairs.reduce(\r\n    (p, movePair) => [\r\n      ...p,\r\n      ...movePair\r\n        .replace(Regexes.MATCH_NEW_LINE, ' ')\r\n        .split(' ')\r\n        .filter((x) => !!x && isNaN(x))\r\n    ],\r\n    []\r\n  );\r\n\r\n  const vsComputer = resolvePlayers(gameInformation);\r\n\r\n  return { gameInformation, pgnMoves, vsComputer };\r\n};\r\n","if (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./configureStore.prod');\r\n} else {\r\n  module.exports = require('./configureStore.dev');\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.el = document.createElement(props.parentTag);\r\n    this.getTargetNode = () => document.querySelector(props.targetSelector);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const targetNode = this.getTargetNode();\r\n    targetNode.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const targetNode = this.getTargetNode();\r\n    if (targetNode) targetNode.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nPortal.defaultProps = {\r\n  parentTag: 'div'\r\n};\r\n\r\nPortal.propTypes = {\r\n  parentTag: PropTypes.string,\r\n  targetSelector: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Portal;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst SelectBox = ({ name, value, disabled, onSelect, text, options }) => (\r\n  <div className=\"has-float-label select-container\">\r\n    <select\r\n      className=\"select-box\"\r\n      name={name}\r\n      value={value}\r\n      onChange={e => onSelect(e)}\r\n      disabled={disabled}\r\n    >\r\n      {options.map(item => (\r\n        <option key={item.value} value={item.value}>\r\n          {item.text}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    <label>{text}</label>\r\n  </div>\r\n);\r\n\r\nSelectBox.defaultProps = {\r\n  disabled: false\r\n};\r\n\r\nSelectBox.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.bool\r\n  ]).isRequired,\r\n  disabled: PropTypes.bool,\r\n  text: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SelectBox;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './tickbox.scss';\r\n\r\nconst Tickbox = ({ name, checked, disabled, onChange, text }) => (\r\n  <div className=\"input-container\">\r\n    <label className=\"tickbox\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        checked={checked}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n      />\r\n      {text}\r\n    </label>\r\n  </div>\r\n);\r\n\r\nTickbox.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n  text: PropTypes.string\r\n};\r\n\r\nexport default Tickbox;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Portal from 'components/Portal';\r\nimport SelectBox from 'components/selectBox/SelectBox';\r\nimport Tickbox from 'components/tickbox/Tickbox';\r\n\r\nimport { setApplicationTheme, setBoardTheme } from 'actions/theme';\r\nimport { toggleReverseBoard } from 'actions/board';\r\nimport Constants from 'constants/index';\r\nimport './appSettings.scss';\r\n\r\nconst themeMapper = (theme) => ({\r\n  text: theme.name,\r\n  value: theme.class\r\n});\r\nconst appThemes = Constants.themes.map(themeMapper);\r\nconst boardThemes = Constants.boardThemes.map(themeMapper);\r\n\r\nconst applyThemeToBody = (theme) => (document.body.className = theme);\r\n\r\nclass AppSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDropdownOpen: false\r\n    };\r\n\r\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n    this.handleCloseAppSettings = this.handleCloseAppSettings.bind(this);\r\n    this.toggleDropdown = this.toggleDropdown.bind(this);\r\n  }\r\n\r\n  handleDropdownChange(onChange) {\r\n    return (e) => {\r\n      onChange(e.target.value);\r\n      this.handleCloseAppSettings();\r\n    };\r\n  }\r\n\r\n  handleCloseAppSettings() {\r\n    this.setState({ isDropdownOpen: false });\r\n  }\r\n\r\n  toggleDropdown() {\r\n    this.setState((prev) => ({ isDropdownOpen: !prev.isDropdownOpen }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      appTheme,\r\n      boardTheme,\r\n      setApplicationTheme,\r\n      setBoardTheme,\r\n      reverseBoard,\r\n      toggleReverseBoard\r\n    } = this.props;\r\n    applyThemeToBody(appTheme);\r\n\r\n    return (\r\n      <div id=\"app-settings\">\r\n        <input\r\n          type=\"checkbox\"\r\n          value={this.state.isDropdownOpen}\r\n          id=\"app-settings-toggler\"\r\n          onChange={this.toggleDropdown}\r\n        />\r\n        <label\r\n          icon=\"&#x2699;\"\r\n          htmlFor=\"app-settings-toggler\"\r\n          title=\"App settings\"\r\n        />\r\n        {this.state.isDropdownOpen && (\r\n          <Portal targetSelector=\"main\">\r\n            <div\r\n              id=\"app-settings-backdrop\"\r\n              role=\"button\"\r\n              onClick={this.handleCloseAppSettings}\r\n            />\r\n            <ul id=\"app-settings-menu\" className=\"dropdown-menu\" role=\"menu\">\r\n              <li className=\"dropdown-arrow\" />\r\n              <li>\r\n                <SelectBox\r\n                  name=\"appTheme\"\r\n                  text=\"App Theme\"\r\n                  value={appTheme}\r\n                  options={appThemes}\r\n                  onSelect={this.handleDropdownChange(setApplicationTheme)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <SelectBox\r\n                  name=\"boardTheme\"\r\n                  text=\"Board Theme\"\r\n                  value={boardTheme}\r\n                  options={boardThemes}\r\n                  onSelect={this.handleDropdownChange(setBoardTheme)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <Tickbox\r\n                  name=\"reverseBoard\"\r\n                  text=\"Flip board on move\"\r\n                  checked={reverseBoard}\r\n                  onChange={toggleReverseBoard}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </Portal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAppSettings.propTypes = {\r\n  appTheme: PropTypes.string.isRequired,\r\n  boardTheme: PropTypes.string.isRequired,\r\n  setApplicationTheme: PropTypes.func.isRequired,\r\n  setBoardTheme: PropTypes.func.isRequired,\r\n  reverseBoard: PropTypes.bool.isRequired,\r\n  toggleReverseBoard: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appTheme: state.theme.app,\r\n  boardTheme: state.theme.board,\r\n  reverseBoard: state.board.reverseBoard\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setApplicationTheme,\r\n  setBoardTheme,\r\n  toggleReverseBoard\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppSettings);\r\n","import React, { Component } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport './svgLogo.scss';\r\n\r\nclass SvgLogo extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.letterClass = 'letter';\r\n    this.animate = 'hideshow';\r\n    this.sideLength = 50;\r\n  }\r\n  componentDidMount() {\r\n    const container = findDOMNode(this);\r\n    this.characters = container.querySelectorAll('text.letter');\r\n    this.cycleCharacters();\r\n  }\r\n  cycleCharacters() {\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(() => {\r\n      const letterIndex = Array.from(this.characters).findIndex((x) => {\r\n        return x.getAttribute('class').indexOf(this.animate) > -1;\r\n      });\r\n\r\n      const nextLetterIndex =\r\n        letterIndex + 1 < this.characters.length ? letterIndex + 1 : 0;\r\n      if (letterIndex !== -1)\r\n        this.characters[letterIndex].setAttribute('class', this.letterClass);\r\n\r\n      this.characters[nextLetterIndex].setAttribute(\r\n        'class',\r\n        `${this.letterClass} ${this.animate}`\r\n      );\r\n    }, 3000);\r\n  }\r\n  renderLetters(word) {\r\n    const characters = word\r\n      .toUpperCase()\r\n      .split('')\r\n      .map((item, index) => {\r\n        return (\r\n          <text key={index} className=\"letter\" x=\"50%\" y=\"50%\" dy=\"0.3em\">\r\n            {item}\r\n          </text>\r\n        );\r\n      });\r\n    return characters;\r\n  }\r\n  render() {\r\n    const letters = this.renderLetters(this.props.text);\r\n\r\n    return (\r\n      <div className=\"svg-logo\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\">\r\n          {letters}\r\n          <text\r\n            className=\"word diagonal\"\r\n            x=\"50%\"\r\n            y=\"50%\"\r\n            dy=\"0.3em\"\r\n            textLength={this.sideLength}\r\n            lengthAdjust=\"spacingAndGlyphs\"\r\n          >\r\n            {this.props.text.toUpperCase()}\r\n          </text>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SvgLogo;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AppSettings from 'containers/AppSettings';\r\nimport SvgLogo from '../svgLogo/SVGLogo.js';\r\nimport { Paths } from 'constants/paths';\r\nimport './header.scss';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"satsuki-header center-contents\">\r\n        <NavLink className=\"ripple\" id=\"satsuki-svg\" to={Paths.base}>\r\n          <SvgLogo text=\"Satsuki Junketsu\" />\r\n        </NavLink>\r\n        <h1>SATSUKI JUNKETSU</h1>\r\n        <div id=\"navigation-links\">\r\n          <div className=\"flex-right center-vertically\">\r\n            <AppSettings />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport toaster from 'utils/toaster';\r\n\r\nimport './toaster.scss';\r\n\r\nclass Toaster extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stack: Array(0)\r\n    };\r\n    this.timer = null;\r\n\r\n    toaster.register(this);\r\n  }\r\n\r\n  removeColdToast() {\r\n    return this.state.stack.filter((x) => x.time > Date.now() - 3000);\r\n  }\r\n\r\n  removeToast(time) {\r\n    const warmToast = this.removeColdToast();\r\n    const remainingToast = warmToast.filter((x) => x.time !== time);\r\n    this.setState({ stack: remainingToast });\r\n  }\r\n\r\n  eatToast() {\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => this.removeToast(), 3000);\r\n  }\r\n\r\n  popToast(toast) {\r\n    this.setState({ stack: [...this.state.stack, toast] });\r\n    this.eatToast();\r\n  }\r\n\r\n  render() {\r\n    const list = this.state.stack || Array(0);\r\n\r\n    return (\r\n      <div className={classNames('toaster')}>\r\n        {list.map((item) => {\r\n          const removeToast = () => this.removeToast(item.time);\r\n          return (\r\n            <span\r\n              key={item.time}\r\n              role=\"button\"\r\n              tabIndex=\"0\"\r\n              className={classNames('toast', item.type.toLowerCase())}\r\n              onClick={removeToast}\r\n              onKeyDown={removeToast}\r\n            >\r\n              <span className={classNames('toast__title')}>{item.title}</span>\r\n              <span className={classNames('toast__message')}>\r\n                {item.message}\r\n              </span>\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toaster;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nimport './appInformation.scss';\r\n\r\nconst resolveENVVariable = (str) => (str || '').trim();\r\n\r\nclass AppInformation extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hovered: false\r\n    };\r\n\r\n    this.handleHovered = this.handleHovered.bind(this);\r\n  }\r\n\r\n  handleHovered(hovered) {\r\n    return () => this.setState({ hovered });\r\n  }\r\n\r\n  render() {\r\n    const branch = resolveENVVariable(process.env.REACT_APP_BRANCH);\r\n    const version = resolveENVVariable(process.env.REACT_APP_VERSION);\r\n\r\n    return (\r\n      <div\r\n        className={classNames('app-information')}\r\n        onMouseEnter={this.handleHovered(true)}\r\n        onMouseLeave={this.handleHovered(false)}\r\n        aria-label={`Branch ${branch}, version ${version}`}\r\n      >\r\n        <div\r\n          className={classNames('app-information__detail', {\r\n            'app-information__detail--visible': this.state.hovered\r\n          })}\r\n        >\r\n          Branch: {branch}\r\n          <br />\r\n          Version: {version}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppInformation;\r\n","import React from 'react';\r\n\r\nimport Header from 'components/header/Header';\r\nimport Toaster from 'components/toaster/Toaster';\r\nimport AppInformation from 'components/appInformation';\r\n\r\nconst App = React.memo(function App({ children }) {\r\n  return (\r\n    <div className=\"satsuki\">\r\n      <Header />\r\n      <main>{children}</main>\r\n      <Toaster />\r\n      <AppInformation />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport './scales.scss';\r\n\r\nclass Scales extends Component {\r\n  renderScale(array) {\r\n    return array.map((item) => <div key={item}>{item}</div>);\r\n  }\r\n\r\n  render() {\r\n    const files = this.renderScale(this.props.files);\r\n    const ranks = this.renderScale(this.props.ranks);\r\n\r\n    return (\r\n      <span className=\"scales\">\r\n        <span className=\"scale file top\">{files}</span>\r\n        <span className=\"scale file bottom\">{files}</span>\r\n        <span className=\"scale rank left\">{ranks}</span>\r\n        <span className=\"scale rank right\">{ranks}</span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scales;\r\n","export default Object.freeze({\r\n  piece: 'piece',\r\n  square: 'square'\r\n});","import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { DropTarget } from 'react-dnd';\r\n\r\nimport DnDType from 'constants/dnd-type';\r\n\r\nconst squareTarget = {\r\n  canDrop(props, monitor) {\r\n    return props.dropActions.canDrop(props.id, monitor.getItem());\r\n  },\r\n  drop(props, monitor) {\r\n    return props.dropActions.onDrop(props.id, monitor.getItem());\r\n  }\r\n};\r\n\r\nfunction collectTarget(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n    canDrop: monitor.canDrop()\r\n  };\r\n}\r\n\r\nexport default function withDropTarget(WrappedComponent) {\r\n  class Target extends React.Component {\r\n    render() {\r\n      const { connectDropTarget, ...props } = this.props;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          {...props}\r\n          ref={instance => connectDropTarget(findDOMNode(instance))}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return DropTarget(DnDType.piece, squareTarget, collectTarget)(Target);\r\n}","import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { DragSource } from 'react-dnd';\r\n\r\nimport DnDType from 'constants/dnd-type';\r\n\r\nfunction handleDrag(props) {\r\n  if (props.onDrag) {\r\n    props.onDrag(props);\r\n  }\r\n\r\n  return props;\r\n}\r\n\r\nconst pieceSource = {\r\n  beginDrag: handleDrag,\r\n  endDrag: handleDrag\r\n};\r\n\r\nfunction collectSource(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nexport default function withDragSource(WrappedComponent) {\r\n  class Source extends React.Component {\r\n    componentDidMount() {\r\n      // TODO add a special preview\r\n      // this.props.connectDragPreview();\r\n    }\r\n    render() {\r\n      const { connectDragSource, connectDragPreview, ...props } = this.props;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          {...props}\r\n          ref={instance => connectDragSource(findDOMNode(instance))}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return DragSource(DnDType.piece, pieceSource, collectSource)(Source);\r\n}","export const isBrowser = function() {\r\n  return typeof window !== 'undefined';\r\n};\r\n\r\nfunction enableClassListShim() {\r\n  if (isBrowser()) {\r\n    /*\r\n         * classList.js: Cross-browser full element.classList implementation.\r\n         * 2014-07-23\r\n         *\r\n         * By Eli Grey, http://eligrey.com\r\n         * Public Domain.\r\n         * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\r\n         */\r\n\r\n    /*global window, document, DOMException */\r\n\r\n    /*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\r\n\r\n    if ('document' in window) {\r\n      // Full polyfill for browsers with no classList support\r\n      if (!('classList' in document.createElement('_'))) {\r\n        (function(view) {\r\n          if (!('Element' in view)) return;\r\n\r\n          var classListProp = 'classList',\r\n            protoProp = 'prototype',\r\n            elemCtrProto = view.Element[protoProp],\r\n            objCtr = Object,\r\n            strTrim =\r\n              String[protoProp].trim ||\r\n              function() {\r\n                return this.replace(/^\\s+|\\s+$/g, '');\r\n              },\r\n            arrIndexOf =\r\n              Array[protoProp].indexOf ||\r\n              function(item) {\r\n                var i = 0,\r\n                  len = this.length;\r\n                for (; i < len; i++) {\r\n                  if (i in this && this[i] === item) {\r\n                    return i;\r\n                  }\r\n                }\r\n                return -1;\r\n              },\r\n            // Vendors: please allow content code to instantiate DOMExceptions\r\n            DOMEx = function(type, message) {\r\n              this.name = type;\r\n              this.code = DOMException[type];\r\n              this.message = message;\r\n            },\r\n            checkTokenAndGetIndex = function(classList, token) {\r\n              if (token === '') {\r\n                throw new DOMEx(\r\n                  'SYNTAX_ERR',\r\n                  'An invalid or illegal string was specified'\r\n                );\r\n              }\r\n              if (/\\s/.test(token)) {\r\n                throw new DOMEx(\r\n                  'INVALID_CHARACTER_ERR',\r\n                  'String contains an invalid character'\r\n                );\r\n              }\r\n              return arrIndexOf.call(classList, token);\r\n            },\r\n            ClassList = function(elem) {\r\n              var trimmedClasses = strTrim.call(\r\n                  elem.getAttribute('class') || ''\r\n                ),\r\n                classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : [],\r\n                i = 0,\r\n                len = classes.length;\r\n              for (; i < len; i++) {\r\n                this.push(classes[i]);\r\n              }\r\n              this._updateClassName = function() {\r\n                elem.setAttribute('class', this.toString());\r\n              };\r\n            },\r\n            classListProto = (ClassList[protoProp] = []),\r\n            classListGetter = function() {\r\n              return new ClassList(this);\r\n            };\r\n          // Most DOMException implementations don't allow calling DOMException's toString()\r\n          // on non-DOMExceptions. Error's toString() is sufficient here.\r\n          DOMEx[protoProp] = Error[protoProp];\r\n          classListProto.item = function(i) {\r\n            return this[i] || null;\r\n          };\r\n          classListProto.contains = function(token) {\r\n            token += '';\r\n            return checkTokenAndGetIndex(this, token) !== -1;\r\n          };\r\n          classListProto.add = function() {\r\n            var tokens = arguments,\r\n              i = 0,\r\n              l = tokens.length,\r\n              token,\r\n              updated = false;\r\n            do {\r\n              token = tokens[i] + '';\r\n              if (checkTokenAndGetIndex(this, token) === -1) {\r\n                this.push(token);\r\n                updated = true;\r\n              }\r\n            } while (++i < l);\r\n\r\n            if (updated) {\r\n              this._updateClassName();\r\n            }\r\n          };\r\n          classListProto.remove = function() {\r\n            var tokens = arguments,\r\n              i = 0,\r\n              l = tokens.length,\r\n              token,\r\n              updated = false,\r\n              index;\r\n            do {\r\n              token = tokens[i] + '';\r\n              index = checkTokenAndGetIndex(this, token);\r\n              while (index !== -1) {\r\n                this.splice(index, 1);\r\n                updated = true;\r\n                index = checkTokenAndGetIndex(this, token);\r\n              }\r\n            } while (++i < l);\r\n\r\n            if (updated) {\r\n              this._updateClassName();\r\n            }\r\n          };\r\n          classListProto.toggle = function(token, force) {\r\n            token += '';\r\n\r\n            var result = this.contains(token),\r\n              method = result\r\n                ? force !== true && 'remove'\r\n                : force !== false && 'add';\r\n\r\n            if (method) {\r\n              this[method](token);\r\n            }\r\n\r\n            if (force === true || force === false) {\r\n              return force;\r\n            } else {\r\n              return !result;\r\n            }\r\n          };\r\n          classListProto.toString = function() {\r\n            return this.join(' ');\r\n          };\r\n\r\n          if (objCtr.defineProperty) {\r\n            var classListPropDesc = {\r\n              get: classListGetter,\r\n              enumerable: true,\r\n              configurable: true\r\n            };\r\n            try {\r\n              objCtr.defineProperty(\r\n                elemCtrProto,\r\n                classListProp,\r\n                classListPropDesc\r\n              );\r\n            } catch (ex) {\r\n              // IE 8 doesn't support enumerable:true\r\n              if (ex.number === -0x7ff5ec54) {\r\n                classListPropDesc.enumerable = false;\r\n                objCtr.defineProperty(\r\n                  elemCtrProto,\r\n                  classListProp,\r\n                  classListPropDesc\r\n                );\r\n              }\r\n            }\r\n          } else if (objCtr[protoProp].__defineGetter__) {\r\n            elemCtrProto.__defineGetter__(classListProp, classListGetter);\r\n          }\r\n        })(window);\r\n      } else {\r\n        // There is full or partial native classList support, so just check if we need\r\n        // to normalize the add/remove and toggle APIs.\r\n\r\n        (function() {\r\n          var testElement = document.createElement('_');\r\n\r\n          testElement.classList.add('c1', 'c2');\r\n\r\n          // Polyfill for IE 10/11 and Firefox <26, where classList.add and\r\n          // classList.remove exist but support only one argument at a time.\r\n          if (!testElement.classList.contains('c2')) {\r\n            var createMethod = function(method) {\r\n              var original = DOMTokenList.prototype[method];\r\n\r\n              DOMTokenList.prototype[method] = function(token) {\r\n                var i,\r\n                  len = arguments.length;\r\n\r\n                for (i = 0; i < len; i++) {\r\n                  token = arguments[i];\r\n                  original.call(this, token);\r\n                }\r\n              };\r\n            };\r\n            createMethod('add');\r\n            createMethod('remove');\r\n          }\r\n\r\n          testElement.classList.toggle('c3', false);\r\n\r\n          // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\r\n          // support the second argument.\r\n          if (testElement.classList.contains('c3')) {\r\n            var _toggle = DOMTokenList.prototype.toggle;\r\n\r\n            DOMTokenList.prototype.toggle = function(token, force) {\r\n              if (1 in arguments && !this.contains(token) === !force) {\r\n                return force;\r\n              } else {\r\n                return _toggle.call(this, token);\r\n              }\r\n            };\r\n          }\r\n\r\n          testElement = null;\r\n        })();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nenableClassListShim();\r\n\r\nexport default function isTouchDevice() {\r\n  if (isBrowser()) {\r\n    var confirmed =\r\n      'ontouchstart' in window ||\r\n      navigator.maxTouchPoints > 0 ||\r\n      navigator.msMaxTouchPoints > 0;\r\n\r\n    if (confirmed) {\r\n      var html = document.getElementsByTagName('html')[0];\r\n      html.classList.add('touchevents');\r\n    }\r\n\r\n    return confirmed;\r\n  }\r\n\r\n  return false;\r\n}\r\n","import React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\n\r\nimport _withDropTarget from './Target';\r\nimport _withDragSource from './Source';\r\nimport isTouchDevice from './supportsTouch';\r\n\r\nfunction getBackend() {\r\n  if (isTouchDevice()) {\r\n    return TouchBackend;\r\n  } else {\r\n    return HTML5Backend;\r\n  }\r\n}\r\n\r\nexport default function DnDBackend(WrappedComponent) {\r\n  const backend = getBackend();\r\n\r\n  class HTML5DragDrop extends React.Component {\r\n    render() {\r\n      return (\r\n        <DndProvider backend={backend} context={window}>\r\n          <WrappedComponent {...this.props} />\r\n        </DndProvider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return HTML5DragDrop;\r\n}\r\n\r\nexport const withDropTarget = _withDropTarget;\r\nexport const withDragSource = _withDragSource;\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\n\r\nconst VIEW_BOX = '-2 0 50 50';\r\nconst PIECE_SIZE = '100%';\r\nconst setColour = (c) =>\r\n  c === Strings.colours.white\r\n    ? Strings.colours.whiteHex\r\n    : Strings.colours.blackHex;\r\n\r\nfunction colourSettingsForPieces(pieceName, colourString) {\r\n  const isWhite = colourString === Strings.colours.white;\r\n  const oppositeColourString = isWhite\r\n    ? Strings.colours.black\r\n    : Strings.colours.white;\r\n  const colour = setColour(colourString);\r\n  const oppositeColour = setColour(oppositeColourString);\r\n\r\n  switch (pieceName) {\r\n    case Strings.pieces.bishop:\r\n      return {\r\n        outline: { fill: colour },\r\n        detail: { stroke: oppositeColour }\r\n      };\r\n    case Strings.pieces.king:\r\n      return {\r\n        topCap: { fill: colour },\r\n        mainBody: { fill: colour },\r\n        lines: { stroke: oppositeColour }\r\n      };\r\n    case Strings.pieces.knight:\r\n      return {\r\n        face: { fill: oppositeColour, stroke: oppositeColour },\r\n        mane: { fill: oppositeColour },\r\n        mainBody: { fill: colour }\r\n      };\r\n    case Strings.pieces.pawn:\r\n      return { fill: colour };\r\n    case Strings.pieces.queen:\r\n      return { isWhite, mainBody: { fill: colour } };\r\n    case Strings.pieces.rook:\r\n      return { fill: colour };\r\n    default:\r\n      return {};\r\n  }\r\n}\r\n\r\nexport default function withColour(WrappedPiece) {\r\n  class PieceSvgWrapper extends React.Component {\r\n    render() {\r\n      const colourSettings = colourSettingsForPieces(\r\n        WrappedPiece.displayName,\r\n        this.props.colour\r\n      );\r\n      return (\r\n        <WrappedPiece\r\n          size={PIECE_SIZE}\r\n          viewBox={VIEW_BOX}\r\n          styleSettings={colourSettings}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return PieceSvgWrapper;\r\n}\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst bishopStyleOuter = {\r\n  opacity: 1,\r\n  fill: 'none',\r\n  fillRule: 'evenodd',\r\n  fillOpacity: 1,\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst bishopStyleOutline = {\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst bishopStyleDetail = {\r\n  fill: 'none',\r\n  stroke: '#ffffff',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst Bishop = ({ size, viewBox, styleSettings }) => {\r\n  const outline = { ...bishopStyleOutline, ...styleSettings.outline };\r\n  const detail = { ...bishopStyleDetail, ...styleSettings.detail };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={bishopStyleOuter}>\r\n        <g style={outline}>\r\n          <path d=\"M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z\" />\r\n          <path d=\"M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z\" />\r\n          <path d=\"M 25 8 A 2.5 2.5 0 1 1  20,8 A 2.5 2.5 0 1 1  25 8 z\" />\r\n        </g>\r\n        <path\r\n          d=\"M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18\"\r\n          style={detail}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nBishop.displayName = Strings.pieces.bishop;\r\n\r\nexport default withColour(Bishop);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst kingStyleOuter = {\r\n  fill: 'none',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst kingStylePath1 = {\r\n  fill: 'none',\r\n  stroke: '#000000',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst kingStyleTopCap = {\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  strokeLinecap: 'butt',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst kingStyleMainBody = {\r\n  fill: '#000000',\r\n  stroke: '#000000'\r\n};\r\n\r\nconst kingStylePath4 = {\r\n  fill: 'none',\r\n  stroke: '#000000',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst kingStyleLines = {\r\n  fill: 'none',\r\n  stroke: '#ffffff'\r\n};\r\n\r\nconst King = ({ size, viewBox, styleSettings }) => {\r\n  const topCap = { ...kingStyleTopCap, ...styleSettings.topCap };\r\n  const mainBody = { ...kingStyleMainBody, ...styleSettings.mainBody };\r\n  const lines = { ...kingStyleLines, ...styleSettings.lines };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={kingStyleOuter}>\r\n        <path d=\"M 22.5,11.63 L 22.5,6\" style={kingStylePath1} />\r\n        <path\r\n          d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\"\r\n          style={topCap}\r\n        />\r\n        <path\r\n          d=\"M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z \"\r\n          style={mainBody}\r\n        />\r\n        <path d=\"M 20,8 L 25,8\" style={kingStylePath4} />\r\n        <path\r\n          d=\"M 32,29.5 C 32,29.5 40.5,25.5 38.03,19.85 C 34.15,14 25,18 22.5,24.5 L 22.51,26.6 L 22.5,24.5 C 20,18 9.906,14 6.997,19.85 C 4.5,25.5 11.85,28.85 11.85,28.85\"\r\n          style={lines}\r\n        />\r\n        <path\r\n          d=\"M 11.5,30 C 17,27 27,27 32.5,30 M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5 M 11.5,37 C 17,34 27,34 32.5,37\"\r\n          style={lines}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nKing.displayName = Strings.pieces.king;\r\n\r\nexport default withColour(King);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst knightStyleOuter = {\r\n  opacity: 1,\r\n  fill: 'none',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst knightStyleMainBody = {\r\n  fill: '#000000',\r\n  stroke: '#000000'\r\n};\r\n\r\nconst knightStyleFace = {\r\n  fill: '#ffffff',\r\n  stroke: '#ffffff'\r\n};\r\n\r\nconst knightStyleMane = {\r\n  fill: '#ffffff',\r\n  stroke: 'none'\r\n};\r\n\r\nconst Knight = ({ size, viewBox, styleSettings }) => {\r\n  const mane = { ...knightStyleMane, ...styleSettings.mane };\r\n  const face = { ...knightStyleFace, ...styleSettings.face };\r\n  const mainBody = { ...knightStyleMainBody, ...styleSettings.mainBody };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={knightStyleOuter}>\r\n        <path\r\n          d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\r\n          style={mainBody}\r\n        />\r\n        <path\r\n          d=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\r\n          style={mainBody}\r\n        />\r\n        <path\r\n          d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\r\n          style={face}\r\n        />\r\n        <path\r\n          d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\r\n          transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\r\n          style={face}\r\n        />\r\n        <path\r\n          d=\"M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49 32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L 37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5 L 24.55,10.4 z \"\r\n          style={mane}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nKnight.displayName = Strings.pieces.knight;\r\n\r\nexport default withColour(Knight);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst pawnStyle = {\r\n  opacity: 1,\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  fillRule: 'nonzero',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'miter',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst Pawn = ({ size, viewBox, styleSettings }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    version=\"1.1\"\r\n    viewBox={viewBox}\r\n    width={size}\r\n    height={size}\r\n  >\r\n    <path\r\n      d=\"M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z \"\r\n      style={{ ...pawnStyle, ...styleSettings }}\r\n    />\r\n  </svg>\r\n);\r\n\r\nPawn.displayName = Strings.pieces.pawn;\r\n\r\nexport default withColour(Pawn);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst queenStyleMainBody = {\r\n  opacity: 1,\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst queenStyleBlackCircles = {\r\n  fill: '#000000',\r\n  stroke: 'none'\r\n};\r\n\r\nconst queenStyleBlackSpikes = {\r\n  strokeLinecap: 'butt',\r\n  stroke: '#000000'\r\n};\r\n\r\nconst queenStylePath1 = {\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst queenStyleBlackBaseline = {\r\n  fill: 'none',\r\n  stroke: '#000000',\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst queenStyleBlackCrownlines = {\r\n  fill: 'none',\r\n  stroke: '#ffffff'\r\n};\r\n\r\nconst queenStyleWhitePath2 = {\r\n  fill: 'none'\r\n};\r\n\r\nconst Queen = ({ size, viewBox, styleSettings }) => {\r\n  if (styleSettings.isWhite)\r\n    return (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        version=\"1.1\"\r\n        viewBox={viewBox}\r\n        width={size}\r\n        height={size}\r\n      >\r\n        <g style={{ ...queenStyleMainBody, ...styleSettings.mainBody }}>\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(-1,-1)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(15.5,-5.5)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(32,-1)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(7,-4.5)\"\r\n          />\r\n          <path\r\n            d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n            transform=\"translate(24,-4)\"\r\n          />\r\n          <path\r\n            d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38,14 L 31,25 L 31,11 L 25.5,24.5 L 22.5,9.5 L 19.5,24.5 L 14,10.5 L 14,25 L 7,14 L 9,26 z \"\r\n            style={queenStylePath1}\r\n          />\r\n          <path\r\n            d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z \"\r\n            style={queenStylePath1}\r\n          />\r\n          <path\r\n            d=\"M 11.5,30 C 15,29 30,29 33.5,30\"\r\n            style={queenStyleWhitePath2}\r\n          />\r\n          <path\r\n            d=\"M 12,33.5 C 18,32.5 27,32.5 33,33.5\"\r\n            style={queenStyleWhitePath2}\r\n          />\r\n        </g>\r\n      </svg>\r\n    );\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={queenStyleMainBody}>\r\n        <g style={queenStyleBlackCircles}>\r\n          <circle cx=\"6\" cy=\"12\" r=\"2.75\" />\r\n          <circle cx=\"14\" cy=\"9\" r=\"2.75\" />\r\n          <circle cx=\"22.5\" cy=\"8\" r=\"2.75\" />\r\n          <circle cx=\"31\" cy=\"9\" r=\"2.75\" />\r\n          <circle cx=\"39\" cy=\"12\" r=\"2.75\" />\r\n        </g>\r\n        <path\r\n          d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38.5,13.5 L 31,25 L 30.7,10.9 L 25.5,24.5 L 22.5,10 L 19.5,24.5 L 14.3,10.9 L 14,25 L 6.5,13.5 L 9,26 z\"\r\n          style={queenStyleBlackSpikes}\r\n        />\r\n        <path\r\n          d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z\"\r\n          style={queenStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 11,38.5 A 35,35 1 0 0 34,38.5\"\r\n          style={queenStyleBlackBaseline}\r\n        />\r\n        <path\r\n          d=\"M 11,29 A 35,35 1 0 1 34,29\"\r\n          style={queenStyleBlackCrownlines}\r\n        />\r\n        <path d=\"M 12.5,31.5 L 32.5,31.5\" style={queenStyleBlackCrownlines} />\r\n        <path\r\n          d=\"M 11.5,34.5 A 35,35 1 0 0 33.5,34.5\"\r\n          style={queenStyleBlackCrownlines}\r\n        />\r\n        <path\r\n          d=\"M 10.5,37.5 A 35,35 1 0 0 34.5,37.5\"\r\n          style={queenStyleBlackCrownlines}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nQueen.displayName = Strings.pieces.queen;\r\n\r\nexport default withColour(Queen);\r\n","import React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport withColour from './PieceSvgWrapper';\r\n\r\nconst rookStyleMainBody = {\r\n  opacity: 1,\r\n  fill: '#000000',\r\n  fillOpacity: 1,\r\n  fillRule: 'evenodd',\r\n  stroke: '#000000',\r\n  strokeWidth: 1.5,\r\n  strokeLinecap: 'round',\r\n  strokeLinejoin: 'round',\r\n  strokeMiterlimit: 4,\r\n  strokeDasharray: 'none',\r\n  strokeOpacity: 1\r\n};\r\n\r\nconst rookStylePath1 = {\r\n  strokeLinecap: 'butt'\r\n};\r\n\r\nconst rookStylePath2 = {\r\n  strokeLinecap: 'butt',\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst rookStylePath3 = {\r\n  fill: 'none',\r\n  stroke: '#ffffff',\r\n  strokeWidth: 1,\r\n  strokeLinejoin: 'miter'\r\n};\r\n\r\nconst Rook = ({ size, viewBox, styleSettings }) => {\r\n  const mainBody = { ...rookStyleMainBody, ...styleSettings };\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      viewBox={viewBox}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <g style={mainBody}>\r\n        <path\r\n          d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z \"\r\n          style={rookStylePath2}\r\n        />\r\n        <path\r\n          d=\"M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path\r\n          d=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 L 11,14 z \"\r\n          style={rookStylePath1}\r\n        />\r\n        <path d=\"M 12,35.5 L 33,35.5 L 33,35.5\" style={rookStylePath3} />\r\n        <path d=\"M 13,31.5 L 32,31.5\" style={rookStylePath3} />\r\n        <path d=\"M 14,29.5 L 31,29.5\" style={rookStylePath3} />\r\n        <path d=\"M 14,16.5 L 31,16.5\" style={rookStylePath3} />\r\n        <path d=\"M 11,14 L 34,14\" style={rookStylePath3} />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nRook.displayName = Strings.pieces.rook;\r\n\r\nexport default withColour(Rook);\r\n","import Bishop from './Bishop';\r\nimport King from './King';\r\nimport Knight from './Knight';\r\nimport Pawn from './Pawn';\r\nimport Queen from './Queen';\r\nimport Rook from './Rook';\r\n\r\nexport default {\r\n  Bishop,\r\n  King,\r\n  Knight,\r\n  Pawn,\r\n  Queen,\r\n  Rook\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { withDragSource } from 'components/dragAndDrop';\r\nimport SVGS from './pieceSvgs';\r\nimport Strings from 'constants/strings';\r\nimport { objectsAreEqual } from 'utils/common';\r\n\r\nimport './piece.scss';\r\n\r\nexport class Piece extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    const isDraggingChanged = nextProps.isDragging !== this.props.isDragging;\r\n    const dataChanged = !objectsAreEqual(nextProps, this.props);\r\n\r\n    return isDraggingChanged || dataChanged;\r\n  }\r\n\r\n  renderCoolChessPieceSvg(pieceName, pieceColour) {\r\n    switch (pieceName) {\r\n      case Strings.pieces.bishop:\r\n        return <SVGS.Bishop colour={pieceColour} />;\r\n      case Strings.pieces.king:\r\n        return <SVGS.King colour={pieceColour} />;\r\n      case Strings.pieces.knight:\r\n        return <SVGS.Knight colour={pieceColour} />;\r\n      case Strings.pieces.pawn:\r\n        return <SVGS.Pawn colour={pieceColour} />;\r\n      case Strings.pieces.queen:\r\n        return <SVGS.Queen colour={pieceColour} />;\r\n      case Strings.pieces.rook:\r\n        return <SVGS.Rook colour={pieceColour} />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, colour, isDragging } = this.props;\r\n\r\n    return (\r\n      <div\r\n        aria-label={`${colour} ${name}`}\r\n        className={classNames('piece', {\r\n          [`${colour}-${name}`]: true,\r\n          'piece--dragging': isDragging\r\n        })}\r\n      >\r\n        {this.renderCoolChessPieceSvg(name, colour)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withDragSource(Piece);\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { withDropTarget } from 'components/dragAndDrop';\r\nimport Piece from 'components/piece/Piece';\r\n\r\nimport './square.scss';\r\n\r\nclass Square extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleDragPiece = this.handleDragPiece.bind(this);\r\n  }\r\n\r\n  handleDragPiece(piece) {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(this.props.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      rank,\r\n      file,\r\n      isSelected,\r\n      isPotentialMove,\r\n      isSpecialMove,\r\n      isInCheck,\r\n      contains,\r\n      onClick\r\n    } = this.props;\r\n\r\n    const hasPiece = !!contains;\r\n    const label = `${file}${rank}${\r\n      hasPiece ? `, ${contains.colour} ${contains.name}` : ''\r\n    }`;\r\n    const classes = classNames('square', {\r\n      selected: isSelected,\r\n      'potential-move': isPotentialMove && !contains,\r\n      'potential-take': isPotentialMove && contains,\r\n      'special-move': isSpecialMove,\r\n      'in-check': isInCheck,\r\n      'is-over': this.props.isOver,\r\n      'can-drop': this.props.canDrop,\r\n      [`rank-${rank}`]: true,\r\n      [`file-${file}`]: true\r\n    });\r\n\r\n    return (\r\n      <button\r\n        id={id}\r\n        className={classes}\r\n        aria-label={label}\r\n        onClick={() => onClick(id)}\r\n      >\r\n        {hasPiece && <Piece {...contains} onDrag={this.handleDragPiece} />}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withDropTarget(Square);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Strings from 'constants/strings';\r\nimport { performSpecialMove } from 'actions/board';\r\n\r\nimport './promotionOptions.scss';\r\n\r\nconst promotionChoices = [\r\n  Strings.pieces.rook,\r\n  Strings.pieces.knight,\r\n  Strings.pieces.bishop,\r\n  Strings.pieces.queen\r\n];\r\n\r\nconst PromotionOptions = ({ promotionAt, actions }) => {\r\n  if (!promotionAt) return null;\r\n  const promotion = {\r\n    ...promotionAt,\r\n    type: Strings.specialMoves.promotion\r\n  };\r\n  return (\r\n    <div id=\"promotion-options-container\">\r\n      <div>Please select a piece to promote to: </div>\r\n      <ul className=\"list column\">\r\n        {promotionChoices.map((option) => {\r\n          const promoteTo = () =>\r\n            actions.performSpecialMove({ ...promotion, promoteTo: option });\r\n          return (\r\n            <li key={option} id={`promote-to-${option}`}>\r\n              <button type=\"button\" className=\"button\" onClick={promoteTo}>\r\n                {option}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  promotionAt: state.board.promotionAt\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators({ performSpecialMove }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PromotionOptions);\r\n","import React from 'react';\r\n\r\nimport './Thinking.scss';\r\n\r\nfunction Thinking() {\r\n  return <div className=\"thinking\">Thinking...</div>;\r\n}\r\n\r\nexport default Thinking;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport Portal from 'components/Portal';\r\nimport Scales from 'components/scales/Scales';\r\nimport Square from 'components/square/Square';\r\nimport PromotionOptions from 'components/promotionOptions/PromotionOptions';\r\nimport Thinking from 'components/Thinking';\r\n\r\nimport Constants from 'constants/index';\r\nimport { reverseArray, capitalise } from 'utils/common';\r\nimport { getWinningPlayerColour } from 'utils/game';\r\nimport './board.scss';\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSquareSelection = this.handleSquareSelection.bind(this);\r\n    this.handleCanDrop = this.handleCanDrop.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n  }\r\n\r\n  handleSquareSelection(squareId) {\r\n    const {\r\n      squares,\r\n      potentialMoves,\r\n      specialMoves,\r\n      selectedSquareId,\r\n      actions\r\n    } = this.props;\r\n\r\n    const selectedSquare = squares.find((x) => x.id === selectedSquareId);\r\n    const square = squares.find((x) => x.id === squareId);\r\n    const isSameSquare = selectedSquareId === squareId;\r\n    const currentPlayerColour = this.props.currentPlayerColour;\r\n    const isPotentialMove = potentialMoves.some((x) => x === squareId);\r\n    const specialMove = specialMoves.find((x) => x.squareId === squareId);\r\n    const isSpecialMove = !!specialMove;\r\n\r\n    if (!selectedSquare && !square.contains) {\r\n      return;\r\n    }\r\n\r\n    if (selectedSquare && !square.contains)\r\n      return isSpecialMove\r\n        ? actions.performSpecialMove(specialMove)\r\n        : isPotentialMove\r\n        ? actions.moveSelectedPiece(squareId)\r\n        : console.log(\r\n            '%c invalid move',\r\n            'color: red; font-size: 22px;',\r\n            selectedSquare,\r\n            square\r\n          );\r\n\r\n    if (!selectedSquare && square.contains.colour !== currentPlayerColour)\r\n      return;\r\n\r\n    if (!selectedSquare && square.contains.colour === currentPlayerColour)\r\n      return actions.selectBoardSquare(squareId);\r\n\r\n    if (selectedSquare && isSameSquare) return actions.selectBoardSquare(null);\r\n\r\n    if (selectedSquare && square.contains.colour === currentPlayerColour)\r\n      return actions.selectBoardSquare(squareId);\r\n\r\n    if (selectedSquare && square.contains.colour !== currentPlayerColour)\r\n      return isSpecialMove\r\n        ? actions.performSpecialMove(specialMove)\r\n        : isPotentialMove\r\n        ? actions.takePiece(squareId)\r\n        : console.log(\r\n            '%c invalid take',\r\n            'color: red; font-size: 22px;',\r\n            selectedSquare,\r\n            square\r\n          );\r\n\r\n    console.log(\r\n      '%c square selection case not handled!',\r\n      'color: red',\r\n      `Selected square: ${selectedSquareId}, Target square: ${squareId}`\r\n    );\r\n  }\r\n\r\n  handleCanDrop(squareId) {\r\n    const { potentialMoves, specialMoves } = this.props;\r\n    const isPotentialMove = potentialMoves.some((x) => x === squareId);\r\n    const specialMove = specialMoves.find((x) => x.squareId === squareId);\r\n    const isSpecialMove = !!specialMove;\r\n\r\n    return isPotentialMove || isSpecialMove;\r\n  }\r\n\r\n  handleDrop(squareId) {\r\n    this.handleSquareSelection(squareId);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      themeClass,\r\n      squares,\r\n      selectedSquareId,\r\n      currentPlayerColour,\r\n      potentialMoves,\r\n      specialMoves,\r\n      checkStatus,\r\n      isReversed,\r\n      isReadOnly,\r\n      nextMove,\r\n      vsComputer\r\n    } = this.props;\r\n\r\n    const isBlackTurn = currentPlayerColour === Constants.Strings.colours.black;\r\n    const isComputerTurn =\r\n      vsComputer.isComputer && vsComputer.isComputerBlack === isBlackTurn;\r\n\r\n    const boardSquares = isReversed ? reverseArray(squares) : squares;\r\n    const boardFiles = isReversed\r\n      ? reverseArray(Constants.files)\r\n      : Constants.files;\r\n    const boardRanks = isReversed\r\n      ? reverseArray(Constants.ranks)\r\n      : Constants.ranks;\r\n\r\n    const checkedKingSquareId =\r\n      !!checkStatus.attackers.length && checkStatus.kingSquare.id;\r\n    const isCheck = !!checkedKingSquareId;\r\n    const isLocked = isReadOnly || checkStatus.isCheckmate;\r\n    const onSquareClick = isLocked ? () => null : this.handleSquareSelection;\r\n\r\n    const dropActions = {\r\n      canDrop: this.handleCanDrop,\r\n      onDrop: this.handleDrop\r\n    };\r\n    console.groupCollapsed('BOARD RENDER');\r\n    console.log('selectedSquareId', selectedSquareId);\r\n    console.log('boardSquares', boardSquares);\r\n    console.log('props', this.props);\r\n    console.log('isLocked', isLocked);\r\n    console.groupEnd();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={style}\r\n          className={classNames('chess-board', themeClass, {\r\n            'read-only': isLocked\r\n          })}\r\n        >\r\n          <Scales files={boardFiles} ranks={boardRanks} />\r\n          {boardSquares.map((o) => {\r\n            let isPotentialMove = potentialMoves.some((x) => x === o.id);\r\n            isPotentialMove =\r\n              isPotentialMove &&\r\n              (!isReadOnly || (isReadOnly && nextMove.to.id === o.id));\r\n\r\n            let isSpecialMove = specialMoves.some((x) => x.squareId === o.id);\r\n            isSpecialMove =\r\n              isSpecialMove &&\r\n              (!isReadOnly || (isReadOnly && nextMove.to.id === o.id));\r\n\r\n            return (\r\n              <Square\r\n                key={o.id}\r\n                {...o}\r\n                isPotentialMove={isPotentialMove}\r\n                isSpecialMove={isSpecialMove}\r\n                isInCheck={o.id === checkedKingSquareId}\r\n                isSelected={o.id === selectedSquareId}\r\n                onClick={onSquareClick}\r\n                dropActions={dropActions}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <Portal targetSelector=\"#chess-game-status\">\r\n          {!checkStatus.isCheckmate && (\r\n            <React.Fragment>\r\n              <PromotionOptions />\r\n              {`${capitalise(currentPlayerColour)}'s turn`}\r\n              {isComputerTurn && <Thinking />}\r\n              {isCheck && `\\n${capitalise(currentPlayerColour)} is in Check!`}\r\n            </React.Fragment>\r\n          )}\r\n          {checkStatus.isCheckmate &&\r\n            `Winner: ${getWinningPlayerColour(checkStatus.kingSquare)}`}\r\n        </Portal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import { possibleMovesForSelectedPiece } from 'utils/piece';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\n\r\nexport function getPossibleMovesForPiece(board, squares, squareId) {\r\n  const fakeBoardState = {\r\n    ...board,\r\n    selectedSquareId: squareId,\r\n    squares\r\n  };\r\n  return {\r\n    possibleMoves: possibleMovesForSelectedPiece(fakeBoardState),\r\n    possibleSMoves: availableSpecialMovesForSelectedPiece(fakeBoardState)\r\n  };\r\n}\r\n\r\nexport function getAllUniquePossibleMoves(board, pSquares, isCurrent = true) {\r\n  const { moves, squares } = board;\r\n  const fakeMoves = isCurrent ? moves : moves.slice(1);\r\n  const fakeBoard = {\r\n    ...board,\r\n    moves: fakeMoves\r\n  };\r\n  const ids = pSquares.reduce((acc, sq) => {\r\n    const { possibleMoves, possibleSMoves } = getPossibleMovesForPiece(\r\n      fakeBoard,\r\n      squares,\r\n      sq.id\r\n    );\r\n    return [...acc, ...possibleMoves, ...possibleSMoves];\r\n  }, []);\r\n\r\n  return new Set(ids);\r\n}\r\n","import { pieces } from './strings';\r\n\r\nexport default new Map([\r\n  [pieces.pawn, 10],\r\n  [pieces.rook, 50],\r\n  [pieces.knight, 30],\r\n  [pieces.bishop, 30],\r\n  [pieces.queen, 90],\r\n  [pieces.king, 0] // captured king is game over duh\r\n]);\r\n","import Strings from 'constants/strings';\r\n\r\nconst { pieces: Pieces } = Strings;\r\n\r\nexport default function adjustGameDevelopment(\r\n  rating,\r\n  moveHistory,\r\n  { rank, contains: piece }\r\n) {\r\n  if (piece.name === Pieces.king) {\r\n    if (piece.hasMoved) {\r\n      if (piece.hasCastled) {\r\n        rating.gameDevelopment += 4;\r\n      } else {\r\n        if (moveHistory.length < 30) {\r\n          rating.gameDevelopment -= 5;\r\n        } else {\r\n          rating.gameDevelopment += 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if (piece.hasMoved) {\r\n    if (piece.name === Pieces.pawn) {\r\n      rating.gameDevelopment += 1;\r\n    } else if (piece.name === Pieces.rook || piece.name === Pieces.queen) {\r\n      if (moveHistory.length > 7) {\r\n        const isWhite = piece.colour === Strings.colours.white;\r\n        const pieceInPlace =\r\n          (rank === 1) !== isWhite || (rank === 8) !== !isWhite;\r\n\r\n        if (pieceInPlace) {\r\n          rating.gameDevelopment += 1;\r\n        }\r\n      }\r\n    } else {\r\n      rating.gameDevelopment += 2;\r\n    }\r\n  }\r\n}\r\n","import pieceValues from 'constants/values';\r\n\r\nfunction getPieceValueOnSquare(square, attacker = null) {\r\n  const piece = square.contains ?? attacker;\r\n  return pieceValues.get(piece.name);\r\n}\r\n\r\nfunction tradeEvaluation(attackers, defenders, pieceContentionScore) {\r\n  //see if the attacking piece in question has move valuable attackers or defenders.\r\n  let defendersC = defenders.length;\r\n  const attackersC = attackers.length;\r\n\r\n  attackers.forEach((attacker, i) => {\r\n    if (defendersC > 0) {\r\n      pieceContentionScore -= attacker;\r\n\r\n      if (pieceContentionScore > 0) {\r\n        //piece defended but by a more valuable piece(s) OR piece attacked by a less valueable piece\r\n        return pieceContentionScore;\r\n      } else if (i <= attackersC) {\r\n        //if we arent done with attackers, add value of defenders\r\n        pieceContentionScore += defenders.shift();\r\n      }\r\n    }\r\n  });\r\n\r\n  return pieceContentionScore;\r\n}\r\n\r\nfunction checkAttackerValidity(square, turn) {\r\n  //returns a value if the attacker is directly a threat to the piece. It is not a threat if it can\r\n  //be captured freely before it attacks or if it captures it is actually better for the side it is capturing\r\n  const attacker = square.contains;\r\n\r\n  //If the attacker can move this turn it is a threat\r\n  if (attacker.colour === turn) {\r\n    return getPieceValueOnSquare(square);\r\n  }\r\n\r\n  if (square.attackedBy.length === 0) {\r\n    //if the attacker is unattacked it is a threat\r\n    return getPieceValueOnSquare(square);\r\n  } else if (square.defendedBy.length === 0) {\r\n    //if the attacker is attacked and undefended dont count it\r\n    return;\r\n  } else {\r\n    //if the attacker has a defender\r\n    const attackers = square.attackedBy\r\n      .map(getPieceValueOnSquare)\r\n      .sort((a, b) => a - b);\r\n\r\n    const defenders = square.defendedBy\r\n      .map(getPieceValueOnSquare)\r\n      .sort((a, b) => a - b);\r\n\r\n    const pieceContentionScore = pieceValues.get(attacker.name);\r\n    const tradeValue = tradeEvaluation(\r\n      attackers,\r\n      defenders,\r\n      pieceContentionScore\r\n    );\r\n\r\n    if (tradeValue > 0) {\r\n      //attacking piece is capturable at a benefit to the enemy\r\n      return;\r\n    } else if (tradeValue < 0) {\r\n      //piece defended or bad to capture\r\n      return getPieceValueOnSquare(square);\r\n    } else {\r\n      //toss up. go with agression of computer\r\n      return getPieceValueOnSquare(square);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function calculatePieceDangerAndSecurity(\r\n  rating,\r\n  turn,\r\n  { attackedBy, defendedBy, contains: piece }\r\n) {\r\n  let attackersC = attackedBy.length;\r\n  let defendersC = defendedBy.length;\r\n\r\n  if (attackersC === 0) {\r\n    //no attackers\r\n    rating.pieceSecurity += defendersC;\r\n    return;\r\n  }\r\n\r\n  if (attackersC > 0 && defendersC === 0) {\r\n    //atttackers with no defenders\r\n    //if a piece is hanging but it is your turn the position isnt bad because you can move\r\n    //if you have a piece hanging but the oppenent does too you shouldnt get the benefit of their hanging piece\r\n    //if you have 2 pieces hanging and cant defend them with one move you lose the power of the weaker piece\r\n    if (piece.colour === turn) {\r\n      return;\r\n    }\r\n\r\n    rating.pieceDanger -= pieceValues.get(piece.name);\r\n    return;\r\n  }\r\n\r\n  //attackers and defenders\r\n  //see if the attackers are worth it because they may be easily captured\r\n  let attackers = attackedBy\r\n    .map((x) => checkAttackerValidity(x, turn))\r\n    .filter((x) => x !== undefined)\r\n    .sort((a, b) => a - b);\r\n\r\n  let defenders = defendedBy\r\n    .map(getPieceValueOnSquare)\r\n    .filter((x) => x !== undefined)\r\n    .sort((a, b) => b - a);\r\n\r\n  let pieceContentionScore = pieceValues.get(piece.name);\r\n\r\n  attackers.forEach((attacker, i) => {\r\n    if (defendersC > 0) {\r\n      pieceContentionScore -= attacker;\r\n      defendersC--;\r\n\r\n      if (pieceContentionScore > 0) {\r\n        //piece defended but by a more valuable piece(s) OR piece attacked by a less valueable piece\r\n        rating.pieceDanger -= pieceContentionScore;\r\n        attackedBy.forEach((attackerSquare) => {\r\n          let attacker = attackerSquare.contains;\r\n          let attackerMoves = attackerSquare.possibleMoves;\r\n\r\n          if (attackerMoves.length > 1) {\r\n            let piecesInDanger = attackerMoves.map((move) =>\r\n              getPieceValueOnSquare(move, attacker)\r\n            );\r\n\r\n            piecesInDanger = piecesInDanger.map((value) => {\r\n              if (!value) {\r\n                return Math.min(...piecesInDanger.filter((x) => x));\r\n              } else {\r\n                return value;\r\n              }\r\n            });\r\n\r\n            piecesInDanger.sort((a, b) => a - b);\r\n\r\n            rating.pieceDanger -= piecesInDanger[0] * 1.5;\r\n          }\r\n        });\r\n      } else if (i <= attackersC) {\r\n        pieceContentionScore += defenders[defendersC];\r\n      }\r\n    } else if (pieceContentionScore - attacker >= 0) {\r\n      rating.pieceDanger -= pieceContentionScore;\r\n    }\r\n  });\r\n\r\n  if (pieceContentionScore < 0) {\r\n    //piece defended\r\n    rating.pieceSecurity += 1;\r\n  }\r\n}\r\n","import Strings from 'constants/strings';\r\nimport { files as Files } from 'constants/board';\r\n\r\nconst { pieces: Pieces } = Strings;\r\n\r\nfunction getSquareValuePawn(square, piece, fileIndex, leftOrRightMove) {\r\n  const rankIndex = square.rank - 1;\r\n\r\n  // promotion highly favorable\r\n  if (rankIndex === 0 || rankIndex === 7) {\r\n    return 9 * 50;\r\n  }\r\n\r\n  const direction = piece.colour === Strings.colours.white ? 1 : -1;\r\n  return [rankIndex + direction, fileIndex + leftOrRightMove].reduce(\r\n    (p, c) => p + c\r\n  );\r\n}\r\n\r\nfunction getPawnValue(square, piece) {\r\n  const fileIndex = Files.findIndex((x) => x === square.file);\r\n  if (fileIndex > 1) {\r\n    //if the pawn can move left\r\n    return getSquareValuePawn(square, piece, fileIndex, 1);\r\n  } else if (fileIndex < 7) {\r\n    //if the pawn can move right\r\n    return getSquareValuePawn(square, piece, fileIndex, -1);\r\n  }\r\n}\r\n\r\nexport default function calculateSquareControl(\r\n  rating,\r\n  moveHistory,\r\n  teamMateCount,\r\n  { possibleMoves, contains: piece, ...square }\r\n) {\r\n  //sum the value of all the squares where each piece can move, attack, or defend\r\n  //calculated regardless of if the square is under attack\r\n  //maybe go through each piece and each move and make a board array that sums the number of pieces controlling or attacking a square\r\n  //and calculate it that way\r\n  let rowValArray = [0, 1, 3, 6, 6, 3, 1, 0];\r\n  let colValArray = [0, 1, 3, 6, 6, 3, 1, 0];\r\n\r\n  if (piece.name === Pieces.pawn) {\r\n    //calculate only attacked squares for pawns (diagonals)\r\n    if (moveHistory.length > 50 && teamMateCount < 8) {\r\n      if (piece.colour === Strings.colours.white) {\r\n        rowValArray = [0, 1, 2, 3, 4, 5, 6, 7];\r\n      } else {\r\n        rowValArray = [7, 6, 5, 4, 3, 2, 1, 0];\r\n      }\r\n    }\r\n\r\n    rating.squareControl += getPawnValue(square, piece);\r\n  }\r\n\r\n  // TODO - check this part...\r\n  /* legal if:\r\n   *    king not attacked\r\n   *    king attacked by more than 1\r\n   *    king attacked by 1, and that 1 is not being attacked\r\n   * potential if:\r\n   *    king being attacked by 1 attacker, that is being attacked\r\n   */\r\n\r\n  const totalMoves = possibleMoves.length;\r\n\r\n  let squareValueSum = possibleMoves.reduce(\r\n    (p, sq) =>\r\n      p +\r\n      rowValArray[sq.rank - 1] +\r\n      colValArray[Files.findIndex((x) => x === sq.file)],\r\n    0\r\n  );\r\n\r\n  if (totalMoves > 10) {\r\n    squareValueSum /= 1.5;\r\n  }\r\n\r\n  rating.squareControl += squareValueSum;\r\n}\r\n","import Strings from 'constants/strings';\r\nimport pieceValues from 'constants/values';\r\n\r\nimport adjustGameDevelopment from './adjustGameDevelopment';\r\nimport calculatePieceDangerAndSecurity from './calculatePieceDangerAndSecurity';\r\nimport calculateSquareControl from './calculateSquareControl';\r\n\r\nimport { isValidDefend, isValidTake } from 'utils/game';\r\nimport { possibleMovesForSelectedPiece } from 'utils/piece';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\n\r\nconst { pieces: Pieces } = Strings;\r\n\r\nconst initPositionScoreValues = {\r\n  gameDevelopment: 0,\r\n  pieceDanger: 0,\r\n  pieceSecurity: 0,\r\n  pieceValue: 0,\r\n  squareControl: 0\r\n};\r\n\r\nfunction incrementPieceValue(rating, piece) {\r\n  rating.pieceValue += pieceValues.get(piece.name);\r\n}\r\n\r\nfunction createPlayerPositionScore(colourTurn, moveHistory, squares) {\r\n  const rating = { ...initPositionScoreValues };\r\n  const teamMateCount = squares.length;\r\n\r\n  squares.forEach((square) => {\r\n    const piece = square.contains;\r\n\r\n    if (piece.name !== Pieces.king) {\r\n      incrementPieceValue(rating, piece);\r\n      calculatePieceDangerAndSecurity(rating, colourTurn, square);\r\n      calculateSquareControl(rating, moveHistory, teamMateCount, square);\r\n    }\r\n\r\n    adjustGameDevelopment(rating, moveHistory, square); // includes castling\r\n  });\r\n\r\n  return rating;\r\n}\r\n\r\nfunction resolvePositionScore(rating) {\r\n  return (\r\n    rating.pieceValue * 1.25 +\r\n    rating.pieceDanger +\r\n    rating.squareControl / 20 +\r\n    rating.pieceSecurity / 10 +\r\n    rating.gameDevelopment / 5\r\n  );\r\n}\r\n\r\nexport function rateBoard(playingColour, board) {\r\n  const { moves, squares } = board;\r\n\r\n  const isWhite = playingColour === Strings.colours.white;\r\n  const ap = squares.slice(0).filter((x) => x.contains);\r\n\r\n  ap.forEach((sq) => {\r\n    const { id, colour } = sq.contains;\r\n\r\n    const moveSquares = possibleMovesForSelectedPiece({\r\n      selectedSquareId: sq.id,\r\n      squares\r\n    }).map((id) => squares.find((s) => s.id === id));\r\n\r\n    const spMoveSquares = availableSpecialMovesForSelectedPiece({\r\n      selectedSquareId: sq.id,\r\n      moves,\r\n      squares\r\n    }).map(({ squareId }) => squares.find((s) => s.id === squareId));\r\n\r\n    sq.possibleMoves = [...moveSquares, ...spMoveSquares];\r\n    sq.attackedBy = ap.filter(\r\n      (x) =>\r\n        x.contains.id !== id &&\r\n        x.contains.colour !== colour &&\r\n        isValidTake(x, sq, squares)\r\n    );\r\n    sq.defendedBy = ap.filter(\r\n      (x) =>\r\n        x.contains.id !== id &&\r\n        x.contains.colour === colour &&\r\n        isValidDefend(x, sq, squares)\r\n    );\r\n  });\r\n\r\n  const wp = ap.filter((x) => x.contains.colour === Strings.colours.white);\r\n  const bp = ap.filter((x) => x.contains.colour === Strings.colours.black);\r\n\r\n  const whitePositionScore = createPlayerPositionScore(\r\n    playingColour,\r\n    moves,\r\n    wp\r\n  );\r\n\r\n  const blackPositionScore = createPlayerPositionScore(\r\n    playingColour,\r\n    moves,\r\n    bp\r\n  );\r\n\r\n  const whiteScore = resolvePositionScore(whitePositionScore);\r\n  const blackScore = resolvePositionScore(blackPositionScore);\r\n  // console.groupCollapsed('<squares>');\r\n  // console.log('white > ', wp, whitePositionScore, whiteScore);\r\n  // console.log('black > ', bp, blackPositionScore, blackScore);\r\n  // console.groupEnd();\r\n  return isWhite ? whiteScore - blackScore : blackScore - whiteScore;\r\n}\r\n","import Strings from 'constants/strings';\r\nimport { getKeyWithBestScore } from 'utils/common';\r\nimport { getCurrentPlayerColour } from 'utils/game';\r\n\r\nimport performMovementFromCurrentToTarget from 'utils/squaresUpdate';\r\nimport prepareSpecialMoveBoard from './prepareSpecialMoveBoard';\r\nimport * as PossibleMoves from './possible-moves';\r\nimport { rateBoard } from './evaluate-board';\r\n\r\nfunction generatePossibilities(board) {\r\n  const { moves, squares } = board;\r\n  const currentColour = getCurrentPlayerColour(moves);\r\n  const pieceSquares = squares.filter(\r\n    (x) => x.contains && x.contains.colour === currentColour\r\n  );\r\n\r\n  const pieceMoves = pieceSquares.reduce((p, sq) => {\r\n    const squareId = sq.id;\r\n    const {\r\n      possibleMoves,\r\n      possibleSMoves\r\n    } = PossibleMoves.getPossibleMovesForPiece(board, squares, squareId);\r\n\r\n    return [\r\n      ...p,\r\n      ...possibleMoves.map((targetId) => {\r\n        const newBoard = performMovementFromCurrentToTarget(\r\n          board,\r\n          squareId,\r\n          targetId\r\n        );\r\n\r\n        return {\r\n          currentColour,\r\n          type: 'STANDARD',\r\n          squareId,\r\n          targetId,\r\n          board: newBoard,\r\n          score: rateBoard(currentColour, newBoard)\r\n        };\r\n      }),\r\n      ...possibleSMoves.map((sMove) => {\r\n        const newBoard = prepareSpecialMoveBoard(board, squareId, sMove);\r\n        const type =\r\n          sMove.type === Strings.specialMoves.promotionSelection\r\n            ? Strings.specialMoves.promotion\r\n            : sMove.type;\r\n\r\n        return {\r\n          currentColour,\r\n          type,\r\n          squareId,\r\n          targetId: sMove.squareId,\r\n          board: newBoard,\r\n          score: rateBoard(currentColour, newBoard)\r\n        };\r\n      })\r\n    ];\r\n  }, []);\r\n\r\n  return pieceMoves;\r\n}\r\n\r\nfunction mapOutcomeToNextOutcome(futures, isMaximising) {\r\n  const thresholdFutures = futures.sort((a, b) =>\r\n    isMaximising ? b.score - a.score : a.score - b.score\r\n  );\r\n\r\n  console.groupCollapsed('futures', futures.length);\r\n  console.log('maxing ? ', isMaximising);\r\n  console.log('min > ', Math.min(...futures.map((x) => x.score)));\r\n  console.log('max > ', Math.max(...futures.map((x) => x.score)));\r\n  console.log('futures > ', thresholdFutures);\r\n  console.groupEnd();\r\n\r\n  return thresholdFutures.slice(0, 6).reduce(\r\n    (p, option) => [\r\n      ...p,\r\n      ...generatePossibilities(option.board).map((x) => ({\r\n        ...option,\r\n        currentColour: x.currentColour,\r\n        board: x.board,\r\n        score: x.score\r\n      }))\r\n    ],\r\n    []\r\n  );\r\n}\r\n\r\nconst repeat = (n) => (f) => (x, b) => {\r\n  let m = n;\r\n  let c = b;\r\n\r\n  while (true) {\r\n    if (m === 0) {\r\n      return x;\r\n    } else {\r\n      m = m - 1;\r\n      x = f(x, c);\r\n      c = !c;\r\n    }\r\n  }\r\n};\r\n\r\nfunction processPotentialFutures(board) {\r\n  const depth = 4;\r\n  const possibleOutcomes = generatePossibilities(board);\r\n  const isMaximising = true;\r\n\r\n  const nextMoveOptions = repeat(depth)(mapOutcomeToNextOutcome)(\r\n    possibleOutcomes,\r\n    isMaximising\r\n  );\r\n\r\n  const moveResults = nextMoveOptions.reduce((results, option) => {\r\n    const key = `${option.squareId}-${option.targetId}`;\r\n    return results.set(key, option);\r\n  }, new Map([]));\r\n\r\n  return moveResults;\r\n}\r\n\r\nfunction selectNextMove(board) {\r\n  const t0 = performance.now();\r\n\r\n  const outcomes = processPotentialFutures(board);\r\n  const bestOutcome = getKeyWithBestScore(outcomes);\r\n\r\n  if (!bestOutcome) {\r\n    // TODO handle stalemate\r\n    console.log('%c STALEMATE', 'color: orange; font-size: 16px;');\r\n  }\r\n\r\n  const option = outcomes.get(bestOutcome);\r\n  const engineMoveChoice = {\r\n    moveType: option.type,\r\n    fromId: option.squareId,\r\n    toId: option.targetId\r\n  };\r\n\r\n  console.groupCollapsed('%c engine done', 'color: forestgreen');\r\n  console.log('input > ', board);\r\n  console.log('moves for pieces > ', outcomes);\r\n  console.log('bestOutcome >> ', bestOutcome);\r\n  console.log('output > ', engineMoveChoice);\r\n  console.groupEnd();\r\n\r\n  const t1 = performance.now();\r\n  console.log(\r\n    `Engine took ${t1 - t0} milliseconds to find best move: `,\r\n    outcomes.get(bestOutcome),\r\n    engineMoveChoice\r\n  );\r\n\r\n  return engineMoveChoice;\r\n}\r\n\r\nexport default {\r\n  selectNextMove\r\n};\r\n","import Strings from 'constants/strings';\r\n\r\nimport { mapPieceToNewPiece } from 'utils/mappers';\r\nimport performMovementFromCurrentToTarget, {\r\n  performRookMovementForCastling,\r\n  updateBoardToRemovePassedPawn\r\n} from 'utils/squaresUpdate';\r\n\r\nexport default function prepareSpecialMoveBoard(\r\n  board,\r\n  selectedSquareId,\r\n  specialMove\r\n) {\r\n  const { type, squareId: targetSquareId } = specialMove;\r\n  const postPieceMovementToTargetState = performMovementFromCurrentToTarget(\r\n    board,\r\n    selectedSquareId,\r\n    targetSquareId,\r\n    specialMove\r\n  );\r\n\r\n  switch (type) {\r\n    case Strings.specialMoves.promotionSelection: {\r\n      const promotionIndex = postPieceMovementToTargetState.squares.findIndex(\r\n        (x) => x.id === targetSquareId\r\n      );\r\n      const squares = mapPieceToNewPiece(\r\n        postPieceMovementToTargetState.squares,\r\n        promotionIndex,\r\n        {\r\n          name: Strings.pieces.queen\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...postPieceMovementToTargetState,\r\n        squares,\r\n        promotionAt: null\r\n      };\r\n    }\r\n    case Strings.specialMoves.enPassant: {\r\n      return updateBoardToRemovePassedPawn(\r\n        postPieceMovementToTargetState,\r\n        targetSquareId\r\n      );\r\n    }\r\n    case Strings.specialMoves.castling: {\r\n      const squares = performRookMovementForCastling(\r\n        postPieceMovementToTargetState.squares,\r\n        targetSquareId\r\n      );\r\n      return {\r\n        ...postPieceMovementToTargetState,\r\n        squares\r\n      };\r\n    }\r\n    default:\r\n      throw new Error('Unknown special move');\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Board from 'components/board/Board';\r\nimport DragAndDropContext from 'components/dragAndDrop';\r\n\r\nimport * as actions from 'actions/board';\r\nimport { isWhitesTurn, getCurrentPlayerColour } from 'utils/game';\r\nimport {\r\n  possibleMovesForSelectedPiece,\r\n  getCheckStatusForColour\r\n} from 'utils/piece';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\nimport {\r\n  selectNextMoveSquareId,\r\n  createBoardLayoutForMoveList\r\n} from 'utils/playback';\r\nimport SJEngine from 'utils/engine';\r\n\r\nclass BoardContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      computerSelected: null\r\n    };\r\n\r\n    this.timer = null;\r\n    this.makeComputerMove = this.makeComputerMove.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { vsComputer, moves } = this.props.board;\r\n    const { isComputer, isComputerBlack } = vsComputer;\r\n    const isWhite = isWhitesTurn(moves.length);\r\n    const notComputerTurn =\r\n      (isComputerBlack && isWhite) || (!isComputerBlack && !isWhite);\r\n\r\n    if (!isComputer || notComputerTurn) {\r\n      return;\r\n    }\r\n\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(\r\n      () => requestAnimationFrame(this.makeComputerMove),\r\n      50\r\n    );\r\n  }\r\n\r\n  makeComputerMove() {\r\n    const { moves, squares } = this.props.board;\r\n\r\n    const currentPlayerColour = getCurrentPlayerColour(moves);\r\n    const checkStatus = getCheckStatusForColour(currentPlayerColour, squares);\r\n    if (checkStatus && checkStatus.isCheckmate) {\r\n      return;\r\n    }\r\n\r\n    const computerSelected = SJEngine.selectNextMove(this.props.board);\r\n    if (!computerSelected) {\r\n      return;\r\n    }\r\n\r\n    this.props.actions.performComputerMove(computerSelected);\r\n  }\r\n\r\n  render() {\r\n    const { board, ...props } = this.props;\r\n    const activeMoveIndex = board.playback.sliderPosition;\r\n    const isReadOnly = activeMoveIndex !== board.moves.length;\r\n    /*  For Playback\r\n     *  Here we need to calculate the moves, squares, and set the selectedSquareId\r\n     *  for the currently active move according to the playback.sliderPosition\r\n     */\r\n    const moves = board.moves.slice(0, activeMoveIndex);\r\n    const [nextMove] = board.moves.slice(activeMoveIndex, activeMoveIndex + 1);\r\n\r\n    const selectedSquareId = !isReadOnly\r\n      ? board.selectedSquareId\r\n      : selectNextMoveSquareId(board.moves, activeMoveIndex);\r\n\r\n    const squares = !isReadOnly\r\n      ? board.squares\r\n      : createBoardLayoutForMoveList(moves);\r\n\r\n    const currentBoardForDisplay = {\r\n      ...board,\r\n      selectedSquareId,\r\n      moves,\r\n      squares\r\n    };\r\n\r\n    const currentPlayerColour = getCurrentPlayerColour(moves);\r\n    const potentialMoves = possibleMovesForSelectedPiece(\r\n      currentBoardForDisplay\r\n    );\r\n    const specialMoves = availableSpecialMovesForSelectedPiece(\r\n      currentBoardForDisplay\r\n    );\r\n    const checkStatus = getCheckStatusForColour(currentPlayerColour, squares);\r\n    const isReversed = board.reverseBoard && !isWhitesTurn(moves.length);\r\n\r\n    return (\r\n      <Board\r\n        {...props}\r\n        {...currentBoardForDisplay}\r\n        currentPlayerColour={currentPlayerColour}\r\n        nextMove={nextMove}\r\n        potentialMoves={potentialMoves}\r\n        specialMoves={specialMoves}\r\n        checkStatus={checkStatus}\r\n        isReversed={isReversed}\r\n        isReadOnly={isReadOnly}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeClass: state.theme.board,\r\n  board: state.board\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DragAndDropContext(BoardContainer));\r\n","import React from 'react';\r\n\r\nimport { Piece } from 'components/piece/Piece';\r\n\r\nimport './graveyard.scss';\r\n\r\nconst Graveyard = ({ pieces }) => (\r\n  <div className=\"graveyard\">\r\n    {pieces.map((p, i) => (\r\n      <Piece key={i} {...p} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Graveyard;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Graveyard from 'components/graveyard/Graveyard';\r\n\r\nimport Constants from 'constants/index';\r\nimport { isWhitesTurn } from 'utils/game';\r\n\r\nconst DualGraveyards = ({ isReversed, whitePieces, blackPieces }) => (\r\n  <div id=\"paired-graveyards\">\r\n    <Graveyard pieces={isReversed ? blackPieces : whitePieces} />\r\n    <Graveyard pieces={isReversed ? whitePieces : blackPieces} />\r\n  </div>\r\n);\r\n\r\nconst getCurrentMovesForPlaybackPosition = state => {\r\n  const activeMoveIndex = state.board.playback.sliderPosition;\r\n  return state.board.moves.slice(0, activeMoveIndex);\r\n};\r\n\r\nconst getPiecesForColour = (state, colour) => {\r\n  const moves = getCurrentMovesForPlaybackPosition(state);\r\n  return state.board.graveyard.filter(\r\n    x =>\r\n      x.colour === colour &&\r\n      moves.some(y => y.captured && y.captured.id === x.id)\r\n  );\r\n};\r\n\r\nconst resolveBoardDirection = state => {\r\n  const moves = getCurrentMovesForPlaybackPosition(state);\r\n  return state.board.reverseBoard && !isWhitesTurn(moves.length);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isReversed: resolveBoardDirection(state),\r\n  whitePieces: getPiecesForColour(state, Constants.Strings.colours.white),\r\n  blackPieces: getPiecesForColour(state, Constants.Strings.colours.black)\r\n});\r\n\r\nexport default connect(mapStateToProps)(DualGraveyards);\r\n","import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nimport Strings from 'constants/strings';\r\nimport './moveList.scss';\r\n\r\nconst MoveItem = ({ pgn, isActive, onClick }) => (\r\n  <li className={classNames({ active: isActive })}>\r\n    <button\r\n      type=\"button\"\r\n      className=\"button\"\r\n      disabled={isActive}\r\n      onClick={onClick}\r\n    >\r\n      {pgn}\r\n    </button>\r\n  </li>\r\n);\r\n\r\nconst MoveList = ({ moves, activeMoveIndex, ...props }) => {\r\n  return (\r\n    <div id=\"move-list\">\r\n      <ul className=\"list column two\">\r\n        <li key=\"WHITE\" className=\"title\">\r\n          {Strings.colours.white}\r\n        </li>\r\n        <li key=\"BLACK\" className=\"title\">\r\n          {Strings.colours.black}\r\n        </li>\r\n        {moves.map((move, i) => {\r\n          const onClick = !!props.onSelect\r\n            ? () => props.onSelect('PLACEHOLDER NAME', i)\r\n            : () => null;\r\n          return (\r\n            <MoveItem\r\n              key={move.id}\r\n              isActive={i === activeMoveIndex}\r\n              onClick={onClick}\r\n              {...move}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoveList.propTypes = {\r\n  moves: PropTypes.arrayOf(PropTypes.object),\r\n  activeMoveIndex: PropTypes.number,\r\n  onSelect: PropTypes.func\r\n};\r\n\r\nexport default MoveList;\r\n","import { connect } from 'react-redux';\r\n\r\nimport MoveList from 'components/moveList/MoveList';\r\n\r\nimport { updateSlidePosition } from 'actions/playback';\r\nimport { mapMovesToPGN } from 'utils/pgn';\r\n\r\nconst mapStateToProps = state => ({\r\n  moves: mapMovesToPGN(state.board.moves),\r\n  activeMoveIndex: state.board.playback.sliderPosition\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onSelect: updateSlidePosition\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveList);\r\n","export default {\r\n  play: '\\u25B6',\r\n  pause: '\\u2223\\u2223',\r\n  back: '\\u2039',\r\n  forward: '\\u203A'\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nimport Icons from 'constants/icons';\r\nimport { SLIDER_START } from 'constants/slider';\r\nimport './playback.scss';\r\n\r\nconst PlaybackButton = ({ className, ...props }) => (\r\n  <button\r\n    type=\"button\"\r\n    className={classNames('button-icon ripple playback-button', className)}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst STEP_FORWARD = 1;\r\nconst STEP_BACK = -1;\r\n\r\nclass Playback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPlaying: false\r\n    };\r\n    this.timer = null;\r\n    this.previousPosition = null;\r\n\r\n    this.handleTogglePlay = this.handleTogglePlay.bind(this);\r\n    this.createSliderStepHandler = this.createSliderStepHandler.bind(this);\r\n    this.handleSliderChange = this.handleSliderChange.bind(this);\r\n  }\r\n\r\n  handleTogglePlay() {\r\n    this.setState(\r\n      (prev) => ({ isPlaying: !prev.isPlaying }),\r\n      () => {\r\n        clearInterval(this.timer);\r\n        if (!this.state.isPlaying) {\r\n          return;\r\n        }\r\n\r\n        if (this.props.sliderPosition === this.props.sliderMaximum) {\r\n          this.props.actions.onSlide(this.props.name, SLIDER_START);\r\n        }\r\n\r\n        this.timer = setInterval(() => {\r\n          if (this.previousPosition === this.props.sliderMaximum) {\r\n            return this.stopPlaying();\r\n          }\r\n\r\n          this.previousPosition = this.props.sliderPosition;\r\n          this.props.actions.onStepForward(this.props.name, STEP_FORWARD);\r\n        }, this.props.playbackInterval);\r\n      }\r\n    );\r\n  }\r\n\r\n  stopPlaying() {\r\n    clearInterval(this.timer);\r\n    this.previousPosition = null;\r\n    this.setState({ isPlaying: false });\r\n  }\r\n\r\n  createSliderStepHandler(stepDirection) {\r\n    const handler =\r\n      stepDirection === STEP_FORWARD\r\n        ? this.props.actions.onStepForward\r\n        : this.props.actions.onStepBack;\r\n\r\n    return () => handler(this.props.name, stepDirection);\r\n  }\r\n\r\n  handleSliderChange(event) {\r\n    const { name, value } = event.target;\r\n    this.props.actions.onSlide(name, Number(value));\r\n  }\r\n\r\n  render() {\r\n    const { isPlaying } = this.state;\r\n    const {\r\n      name,\r\n      isDisabled,\r\n      isHidden,\r\n      sliderPosition,\r\n      sliderMaximum\r\n    } = this.props;\r\n\r\n    if (isHidden) {\r\n      return null;\r\n    }\r\n\r\n    const AT_THE_START = sliderPosition === SLIDER_START;\r\n    const AT_THE_END = sliderPosition === sliderMaximum;\r\n    const width = (sliderPosition / sliderMaximum) * 100;\r\n    const toggleData = isPlaying\r\n      ? { icon: Icons.pause, 'aria-label': 'Pause playback' }\r\n      : { icon: Icons.play, 'aria-label': 'Start playback' };\r\n\r\n    const sliderStyle = {\r\n      backgroundImage: `linear-gradient(90deg, currentcolor, currentcolor ${width}%, #ddd ${width}%)`\r\n    };\r\n\r\n    return (\r\n      <div id=\"playback-control\">\r\n        <div className=\"button-group\">\r\n          <PlaybackButton\r\n            className=\"playback-toggle-play\"\r\n            {...toggleData}\r\n            onClick={this.handleTogglePlay}\r\n            disabled={isDisabled}\r\n          />\r\n        </div>\r\n        <div id=\"playback-progress-container\" className=\"range-slider\">\r\n          <input\r\n            type=\"range\"\r\n            name={name}\r\n            aria-label=\"playback slider\"\r\n            style={sliderStyle}\r\n            value={sliderPosition}\r\n            max={sliderMaximum}\r\n            disabled={isDisabled}\r\n            onChange={this.handleSliderChange}\r\n          />\r\n        </div>\r\n        <div className=\"button-group\">\r\n          <PlaybackButton\r\n            className=\"playback-back\"\r\n            aria-label=\"Move playback backward a step\"\r\n            icon={Icons.back}\r\n            onClick={this.createSliderStepHandler(STEP_BACK)}\r\n            disabled={AT_THE_START || isDisabled}\r\n          />\r\n          <PlaybackButton\r\n            className=\"playback-forward\"\r\n            aria-label=\"Move playback forward a step\"\r\n            icon={Icons.forward}\r\n            onClick={this.createSliderStepHandler(STEP_FORWARD)}\r\n            disabled={AT_THE_END || isDisabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPlayback.defaultProps = {\r\n  name: 'slider',\r\n  sliderMaximum: 100,\r\n  playbackInterval: 1000,\r\n  isDisabled: false,\r\n  isHidden: false\r\n};\r\n\r\nPlayback.propTypes = {\r\n  name: PropTypes.string,\r\n  sliderMaximum: PropTypes.number,\r\n  playbackInterval: PropTypes.number,\r\n  isDisabled: PropTypes.bool,\r\n  isHidden: PropTypes.bool,\r\n  sliderPosition: PropTypes.number.isRequired,\r\n  actions: PropTypes.shape({\r\n    onSlide: PropTypes.func.isRequired,\r\n    onStepForward: PropTypes.func.isRequired,\r\n    onStepBack: PropTypes.func.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default Playback;\r\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Playback from 'components/playback/Playback';\r\nimport * as actions from 'actions/playback';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.board.playback,\r\n  isDisabled: state.board.moves.length < 2\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(\r\n    {\r\n      onSlide: actions.updateSlidePosition,\r\n      onStepForward: actions.stepSliderForward,\r\n      onStepBack: actions.stepSliderBack\r\n    },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Playback);\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst MAX_WIDTH_FALLBACK = '525px';\r\n\r\nconst AccountFor = {\r\n  header: 50,\r\n  actions: 45,\r\n  status: 52,\r\n  playback: 62\r\n};\r\n\r\nexport default class MaintainAspectRatio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: MAX_WIDTH_FALLBACK,\r\n      height: MAX_WIDTH_FALLBACK\r\n    };\r\n    this.wrappedComponent = React.createRef();\r\n\r\n    this.onResize = this.onResize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n    this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize(e) {\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => {\r\n      const el = this.wrappedComponent.current;\r\n      const rawValue = Math.min(el.clientHeight, el.clientWidth);\r\n      const value = Object.keys(AccountFor).reduce(\r\n        (p, c) => p - AccountFor[c],\r\n        rawValue\r\n      );\r\n      // const { width, height } = el.getBoundingClientRect();\r\n      // console.group(\"resize\")\r\n      // console.log(\"client > \", el.clientWidth, el.clientHeight)\r\n      // console.log(\"offset > \", el.offsetWidth, el.offsetHeight)\r\n      // console.log(\"bounding > \", width, height)\r\n      // console.groupEnd()\r\n      this.setState({\r\n        width: `${value}px`,\r\n        height: `${value}px`\r\n      });\r\n    }, 200);\r\n  }\r\n\r\n  render() {\r\n    return this.props.children(this.wrappedComponent, this.state);\r\n  }\r\n}\r\n\r\nMaintainAspectRatio.propTypes = {\r\n  children: PropTypes.func.isRequired\r\n};\r\n\r\nexport function withMaintainAspectRatio(WrappedComponent) {\r\n  return class extends React.Component {\r\n    render() {\r\n      return (\r\n        <MaintainAspectRatio>\r\n          {(ref, values) => <WrappedComponent ref={ref} {...this.props} />}\r\n        </MaintainAspectRatio>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst GameAction = ({ children, ...props }) => (\r\n  <button type=\"button\" className=\"button ripple primary\" {...props}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default GameAction;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Portal from 'components/Portal';\r\nimport GameAction from 'components/GameAction';\r\n\r\nimport Options, { NewGameOptions as GG } from 'constants/new-game-options';\r\n\r\nimport './newGameOptions.scss';\r\n\r\nconst NewGameOptions = ({ display, targetSelector, onSelect }) => {\r\n  if (!display) return null;\r\n  console.log(Options, GG);\r\n  return (\r\n    <Portal targetSelector={targetSelector}>\r\n      <div className=\"game-options\">\r\n        <p>Select game type</p>\r\n        <ul className=\"list column one\">\r\n          {Options.map((o) => (\r\n            <li key={o.id}>\r\n              <GameAction onClick={() => onSelect(o.id)}>{o.text}</GameAction>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nNewGameOptions.propTypes = {\r\n  targetSelector: PropTypes.string.isRequired,\r\n  display: PropTypes.bool,\r\n  onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NewGameOptions;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Board from './Board';\r\nimport Graveyard from './Graveyard';\r\nimport MoveList from './MoveList';\r\nimport Playback from './Playback';\r\nimport MaintainAspectRatio from './MaintainAspectRatio';\r\nimport GameAction from 'components/GameAction';\r\nimport NewGameOptions from 'components/newGameOptions';\r\n\r\nimport { resetBoard, importGame, saveGame, loadGame } from 'actions/board';\r\nimport { exportPGNForMoves } from 'utils/exportImport';\r\n\r\nconst ACTIONS_ID = 'chess-game-actions';\r\n\r\nclass ChessGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isStartingNewGame: false\r\n    };\r\n\r\n    this.fileSelector = React.createRef();\r\n    this.handleImport = this.handleImport.bind(this);\r\n    this.handleNewGame = this.handleNewGame.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.actions.loadGame();\r\n  }\r\n\r\n  async handleImport(event) {\r\n    const file = event.target.files && event.target.files[0];\r\n    if (!file) return;\r\n    const fileText = await new Response(file).text();\r\n    this.props.actions.importGame(fileText);\r\n  }\r\n\r\n  handleNewGame(option) {\r\n    if (!this.state.isStartingNewGame) {\r\n      this.setState({ isStartingNewGame: true });\r\n    } else {\r\n      this.setState({ isStartingNewGame: false }, () =>\r\n        this.props.actions.resetBoard(option)\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { moves, vsComputer, actions } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MoveList />\r\n        <div id={ACTIONS_ID} className=\"button-group right\">\r\n          <GameAction id=\"new-game\" onClick={this.handleNewGame}>\r\n            New Game\r\n          </GameAction>\r\n          <GameAction id=\"save-game\" onClick={actions.saveGame}>\r\n            Save Game\r\n          </GameAction>\r\n          <GameAction\r\n            id=\"export-game\"\r\n            onClick={() => exportPGNForMoves(moves, vsComputer)}\r\n          >\r\n            Export\r\n          </GameAction>\r\n          <label\r\n            id=\"import-game\"\r\n            role=\"button\"\r\n            className=\"button ripple primary\"\r\n          >\r\n            Import\r\n            <input\r\n              ref={this.fileSelector}\r\n              type=\"file\"\r\n              accept=\".pgn\"\r\n              onChange={this.handleImport}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div id=\"chess-game\" ref={this.getGameContainer}>\r\n          <MaintainAspectRatio>\r\n            {(ref, style) => (\r\n              <div ref={ref} className=\"left-column\">\r\n                <div id=\"chess-game-status\" />\r\n                <Board style={style} />\r\n                <Playback />\r\n              </div>\r\n            )}\r\n          </MaintainAspectRatio>\r\n          <div className=\"right-column\">\r\n            <Graveyard />\r\n          </div>\r\n        </div>\r\n        <NewGameOptions\r\n          targetSelector={`#${ACTIONS_ID}`}\r\n          display={this.state.isStartingNewGame}\r\n          onSelect={this.handleNewGame}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  moves: state.board.moves,\r\n  vsComputer: state.board.vsComputer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators(\r\n    { resetBoard, importGame, saveGame, loadGame },\r\n    dispatch\r\n  )\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChessGame);\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\n\r\nimport App from 'containers/App';\r\nimport ChessGame from 'containers/ChessGame';\r\n\r\nimport { Paths } from 'constants/paths';\r\n\r\nconst SatsukiRoutes = ({ match }) => (\r\n  <Switch>\r\n    <Route exact path={match.path} component={ChessGame} />\r\n  </Switch>\r\n);\r\n\r\nconst Routes = ({ history }) => (\r\n  <ConnectedRouter history={history}>\r\n    <App>\r\n      <Switch>\r\n        <Redirect exact from=\"/\" to={Paths.base} />\r\n        <Route path={Paths.base} component={SatsukiRoutes} />\r\n\r\n        <Route path=\"*\" render={() => <div>Page not found</div>} />\r\n      </Switch>\r\n    </App>\r\n  </ConnectedRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const getSquare = n => document.getElementById(n);\r\nconst selectSquare = n =>\r\n  (getSquare(n) || { click: () => console.log('nothing to click') }).click();\r\nconst moveFromSquareToSquare = async (n, m) => {\r\n  await selectSquare(n);\r\n  await selectSquare(m);\r\n};\r\n\r\nconst prepareBoard = arr => moveFromSquareToSquare(...arr);\r\nconst makeMoves = arr => {\r\n  const move = arr.pop();\r\n  if (!move) return console.log('board ready');\r\n\r\n  let timer;\r\n  clearTimeout(timer);\r\n  timer = setTimeout(() => {\r\n    prepareBoard(move);\r\n    makeMoves(arr);\r\n  }, 200);\r\n};\r\n\r\n// fastest checkmate\r\nlet fastestGame = [[53, 37], [12, 28], [54, 38], [3, 39]].reverse();\r\n\r\n// check - evade with [54, 46]\r\nlet check = [[53, 45], [12, 28], [45, 37], [3, 39]].reverse();\r\n\r\n// castling tests\r\nlet castling = [\r\n  [53, 37],\r\n  [8, 16],\r\n  [54, 38],\r\n  [9, 17],\r\n  [61, 47],\r\n  [10, 18],\r\n  [62, 45],\r\n  [11, 19],\r\n  [60] // 62\r\n].reverse();\r\n\r\n// en passant test\r\nlet enPassant = [[51, 35], [8, 16], [35, 27], [12, 28], [27]].reverse(); // 20\r\n\r\n// promotion tests\r\nlet promotion = [\r\n  [54, 38],\r\n  [15, 31],\r\n  [38, 31],\r\n  [7, 23],\r\n  [53, 45],\r\n  [23, 22],\r\n  [31, 23],\r\n  [22, 21],\r\n  [23, 15],\r\n  [21, 20],\r\n  [15] // 7\r\n].reverse();\r\n\r\n// ambiguous movement tests\r\nlet ambiguous = [[50, 34], [11, 27], [52, 36], [8, 16], [34, 27]].reverse();\r\n\r\nexport default {\r\n  selectSquare,\r\n  moveFromSquareToSquare,\r\n  makeMoves,\r\n  movesFor: {\r\n    fastestGame,\r\n    check,\r\n    castling,\r\n    enPassant,\r\n    promotion\r\n  },\r\n  examples: {\r\n    fastestGame: () => makeMoves(fastestGame),\r\n    check: () => makeMoves(check),\r\n    promotion: () => makeMoves(promotion),\r\n    enPassant: () => makeMoves(enPassant),\r\n    castling: () => makeMoves(castling),\r\n    ambiguous: () => makeMoves(ambiguous)\r\n  },\r\n  actions: {\r\n    newGame: () => document.getElementById('new-game').click(),\r\n    saveGame: () => document.getElementById('save-game').click(),\r\n    export: () => document.getElementById('export-game').click(),\r\n    import: () => document.getElementById('import-game').click()\r\n  },\r\n  playback: {\r\n    togglePlay: () =>\r\n      document.querySelector('.playback-button.playback-toggle-play').click(),\r\n    forward: () =>\r\n      document.querySelector('.playback-button.playback-forward').click(),\r\n    back: () => document.querySelector('.playback-button.playback-back').click()\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\n\r\nimport Routes from './Routes';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport AutomateBoard from './programmatic-board-moves';\r\nimport Engine from 'utils/engine';\r\nimport './styles/index.scss';\r\n\r\nwindow.Engine = Engine;\r\nwindow.AutomateBoard = AutomateBoard;\r\n\r\nconst history = createBrowserHistory();\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Routes history={history} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n","export function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    } else {\r\n      return state;\r\n    }\r\n  };\r\n}\r\n","import { SET_APP_THEME, SET_BOARD_THEME } from 'actions/theme';\r\nimport Constants from 'constants/index';\r\nimport { getUserSettings, persistUserSettings } from 'utils/common';\r\nimport { createReducer } from './utils';\r\n\r\nconst getUserTheme = () => {\r\n  const settings = getUserSettings();\r\n  if (!settings || !settings.theme)\r\n    return {\r\n      app: Constants.themes[0].class,\r\n      board: Constants.boardThemes[0].class\r\n    };\r\n  return settings.theme;\r\n};\r\n\r\nconst persistUserThemeChoice = themeType => (state, action) => {\r\n  const updatedSettings = persistUserSettings({\r\n    theme: { ...state, [themeType]: action.theme }\r\n  });\r\n  return updatedSettings.theme;\r\n};\r\n\r\nconst theme = createReducer(getUserTheme(), {\r\n  [SET_APP_THEME]: persistUserThemeChoice('app'),\r\n  [SET_BOARD_THEME]: persistUserThemeChoice('board')\r\n});\r\n\r\nexport default theme;\r\n","import Strings from 'constants/strings';\r\n\r\nimport { mapPieceToNewPiece } from 'utils/mappers';\r\nimport performMovementFromCurrentToTarget, {\r\n  performRookMovementForCastling,\r\n  updateBoardToRemovePassedPawn\r\n} from 'utils/squaresUpdate';\r\n\r\nfunction specialMoveSubReducer(state, action) {\r\n  const { type, squareId: targetSquareId } = action.specialMove;\r\n  if (type === Strings.specialMoves.promotionSelection)\r\n    return { ...state, promotionAt: action.specialMove };\r\n\r\n  const postPieceMovementToTargetState = performMovementFromCurrentToTarget(\r\n    state,\r\n    state.selectedSquareId,\r\n    action.specialMove.squareId,\r\n    action.specialMove\r\n  );\r\n  switch (type) {\r\n    case Strings.specialMoves.promotion: {\r\n      const promotionIndex = postPieceMovementToTargetState.squares.findIndex(\r\n        x => x.id === targetSquareId\r\n      );\r\n      const squares = mapPieceToNewPiece(\r\n        postPieceMovementToTargetState.squares,\r\n        promotionIndex,\r\n        {\r\n          name: action.specialMove.promoteTo\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...postPieceMovementToTargetState,\r\n        squares,\r\n        promotionAt: null\r\n      };\r\n    }\r\n    case Strings.specialMoves.enPassant: {\r\n      return updateBoardToRemovePassedPawn(\r\n        postPieceMovementToTargetState,\r\n        targetSquareId\r\n      );\r\n    }\r\n    case Strings.specialMoves.castling: {\r\n      const squares = performRookMovementForCastling(\r\n        postPieceMovementToTargetState.squares,\r\n        targetSquareId\r\n      );\r\n      return {\r\n        ...postPieceMovementToTargetState,\r\n        squares\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default specialMoveSubReducer;\r\n","import {\r\n  PLAYBACK_UPDATE_SLIDE_POSITION,\r\n  PLAYBACK_STEP_FORWARD,\r\n  PLAYBACK_STEP_BACK\r\n} from 'actions/playback';\r\nimport { resolveSliderValue } from 'utils/playback';\r\n\r\nexport const PLAYBACK_STARTING_VALUE = 0;\r\nexport const getPlaybackInitialState = n => ({\r\n  sliderMaximum: n,\r\n  sliderPosition: n\r\n});\r\n\r\nfunction handlePlaybackStep(state, action) {\r\n  const sliderPosition = resolveSliderValue(\r\n    state.playback.sliderPosition + action.stepDirection,\r\n    state.playback.sliderMaximum\r\n  );\r\n  return {\r\n    ...state,\r\n    playback: {\r\n      ...state.playback,\r\n      sliderPosition\r\n    }\r\n  };\r\n}\r\n\r\nfunction playbackSubReducer(state, action) {\r\n  switch (action.type) {\r\n    case PLAYBACK_UPDATE_SLIDE_POSITION: {\r\n      const sliderPosition = action.sliderValue;\r\n      return {\r\n        ...state,\r\n        playback: {\r\n          ...state.playback,\r\n          sliderPosition\r\n        }\r\n      };\r\n    }\r\n    case PLAYBACK_STEP_FORWARD:\r\n      return handlePlaybackStep(state, action);\r\n    case PLAYBACK_STEP_BACK:\r\n      return handlePlaybackStep(state, action);\r\n    default:\r\n      return {\r\n        ...state,\r\n        playback: getPlaybackInitialState(PLAYBACK_STARTING_VALUE)\r\n      };\r\n  }\r\n}\r\n\r\nexport default playbackSubReducer;\r\n","import Strings from 'constants/strings';\r\n\r\nimport { isValidMove, isValidTake } from 'utils/game';\r\nimport { importPGNFromFile } from 'utils/exportImport';\r\nimport {\r\n  mapPieceToMovedPiece,\r\n  mapPieceToNewSquare,\r\n  mapSquaresToMove\r\n} from 'utils/mappers';\r\nimport {\r\n  performRookMovementForCastling,\r\n  updateBoardToRemovePassedPawn\r\n} from 'utils/squaresUpdate';\r\nimport { processPGNToMove } from 'utils/pgn';\r\nimport availableSpecialMovesForSelectedPiece from 'utils/specialMoves';\r\n\r\nfunction canDoSpecialMove(state, move, square) {\r\n  if (!move.specialMove) return false;\r\n\r\n  const specialMovesPieceCanDo = availableSpecialMovesForSelectedPiece({\r\n    ...state,\r\n    selectedSquareId: square.id\r\n  });\r\n  const containsTheMatchingMove = specialMovesPieceCanDo.some(\r\n    (x) => x.type === move.specialMove.type\r\n  );\r\n  return containsTheMatchingMove;\r\n}\r\n\r\nfunction importSubReducer(cleanState, action) {\r\n  const { fileText } = action;\r\n  const data = importPGNFromFile(fileText);\r\n  const processedMoves = data.pgnMoves.map(processPGNToMove);\r\n\r\n  return processedMoves.reduce((p, move) => {\r\n    const toIndex = p.squares.findIndex(\r\n      (x) => x.file === move.to.file && x.rank === move.to.rank\r\n    );\r\n    const to = { ...p.squares[toIndex] };\r\n    const toHasPiece = !!to && !!to.contains;\r\n    const captured = toHasPiece ? { ...to.contains } : null;\r\n    const func = toHasPiece ? isValidTake : isValidMove;\r\n\r\n    const from = p.squares.find(\r\n      (x) =>\r\n        (!move.from ||\r\n          (move.from &&\r\n            x.file === move.from.file &&\r\n            (!move.from.rank || x.rank === move.from.rank))) &&\r\n        x.contains &&\r\n        x.contains.colour === move.piece.colour &&\r\n        x.contains.name === move.piece.name &&\r\n        (func(x, to, p.squares) || canDoSpecialMove(p, move, x))\r\n    );\r\n\r\n    const movingPiece = mapPieceToMovedPiece(from.contains);\r\n    let squares = mapPieceToNewSquare(p.squares, toIndex, {\r\n      ...from,\r\n      contains: movingPiece\r\n    });\r\n\r\n    const specialMove = move.specialMove\r\n      ? { ...move.specialMove, squareId: to.id }\r\n      : null;\r\n    const isCastling =\r\n      move.specialMove &&\r\n      move.specialMove.type === Strings.specialMoves.castling;\r\n    const isEnPassant =\r\n      move.specialMove &&\r\n      move.specialMove.type === Strings.specialMoves.enPassant;\r\n\r\n    squares = !isCastling\r\n      ? squares\r\n      : performRookMovementForCastling(squares, to.id);\r\n\r\n    const newState = {\r\n      ...p,\r\n      squares,\r\n      graveyard: [...p.graveyard, captured].filter((x) => !!x),\r\n      moves: [\r\n        ...p.moves,\r\n        mapSquaresToMove(from, squares[toIndex], squares, captured, specialMove)\r\n      ],\r\n      vsComputer: data.vsComputer\r\n    };\r\n\r\n    return !isEnPassant\r\n      ? newState\r\n      : updateBoardToRemovePassedPawn(newState, to.id);\r\n  }, cleanState);\r\n}\r\n\r\nexport default importSubReducer;\r\n","import { createReducer } from './utils';\r\nimport { compose, getSavedGame, persistChessGame } from 'utils/common';\r\nimport { buildStartingBoard } from 'utils/board';\r\nimport performMovementFromCurrentToTarget from 'utils/squaresUpdate';\r\nimport upgradeSavedGameState from 'utils/state';\r\nimport toaster from 'utils/toaster';\r\n\r\nimport {\r\n  BOARD_SELECT_SQUARE,\r\n  BOARD_MOVE_PIECE,\r\n  BOARD_TAKE_PIECE,\r\n  BOARD_SPECIAL_MOVE,\r\n  BOARD_RESET,\r\n  BOARD_IMPORT_GAME,\r\n  BOARD_SAVE_GAME,\r\n  BOARD_LOAD_GAME,\r\n  BOARD_TOGGLE_REVERSE\r\n} from 'actions/board';\r\nimport {\r\n  PLAYBACK_UPDATE_SLIDE_POSITION,\r\n  PLAYBACK_STEP_FORWARD,\r\n  PLAYBACK_STEP_BACK\r\n} from 'actions/playback';\r\nimport specialMoveSubReducer from './board-specialMove';\r\nimport playbackSubReducer, {\r\n  PLAYBACK_STARTING_VALUE,\r\n  getPlaybackInitialState\r\n} from './board-playback';\r\nimport importSubReducer from './board-import';\r\nimport { BOARD_COMPUTER_MOVE } from '../actions/board';\r\n\r\nimport { NewGameOptions } from 'constants/new-game-options';\r\nimport Strings from 'constants/strings';\r\n\r\nconst initialState = {\r\n  reverseBoard: false,\r\n  graveyard: [],\r\n  moves: [],\r\n  squares: buildStartingBoard(),\r\n  selectedSquareId: null,\r\n  promotionAt: null,\r\n  playback: getPlaybackInitialState(PLAYBACK_STARTING_VALUE),\r\n  vsComputer: {\r\n    isComputer: true,\r\n    isComputerBlack: true\r\n  }\r\n};\r\n\r\nconst setSelectedSquareId = (state, action) => ({\r\n  ...state,\r\n  selectedSquareId: action.squareId\r\n});\r\n\r\nconst updateSlideMaximum = (state) => ({\r\n  ...state,\r\n  playback: getPlaybackInitialState(state.moves.length)\r\n});\r\n\r\nconst handlePieceMovement = (state, action) =>\r\n  performMovementFromCurrentToTarget(\r\n    state,\r\n    state.selectedSquareId,\r\n    action.targetSquareId\r\n  );\r\n\r\nconst handleImport = (freshState) => (state, action) =>\r\n  importSubReducer(freshState, action);\r\n\r\nconst composedPieceMovement = compose(updateSlideMaximum, handlePieceMovement);\r\nconst composedSpecialMove = compose(updateSlideMaximum, specialMoveSubReducer);\r\nconst composedImport = compose(updateSlideMaximum, handleImport(initialState));\r\n\r\nconst board = createReducer(initialState, {\r\n  [BOARD_SELECT_SQUARE]: setSelectedSquareId,\r\n  [BOARD_MOVE_PIECE]: composedPieceMovement,\r\n  [BOARD_TAKE_PIECE]: composedPieceMovement,\r\n  [BOARD_SPECIAL_MOVE]: composedSpecialMove,\r\n  [PLAYBACK_UPDATE_SLIDE_POSITION]: playbackSubReducer,\r\n  [PLAYBACK_STEP_FORWARD]: playbackSubReducer,\r\n  [PLAYBACK_STEP_BACK]: playbackSubReducer,\r\n  [BOARD_IMPORT_GAME]: composedImport,\r\n  [BOARD_RESET]: (state, action) => {\r\n    const { option } = action;\r\n    if (option === NewGameOptions.vsComputerYouBlack)\r\n      return {\r\n        ...initialState,\r\n        vsComputer: { ...initialState.vsComputer, isComputerBlack: false }\r\n      };\r\n    if (option === NewGameOptions.vsPlayer)\r\n      return {\r\n        ...initialState,\r\n        vsComputer: { ...initialState.vsComputer, isComputer: false }\r\n      };\r\n\r\n    return initialState;\r\n  },\r\n  [BOARD_SAVE_GAME]: (state) => {\r\n    const newState = persistChessGame(state);\r\n    toaster.success('Saved Game');\r\n    return newState;\r\n  },\r\n  [BOARD_LOAD_GAME]: (state) => {\r\n    const savedGame = getSavedGame();\r\n    if (!savedGame) return state;\r\n\r\n    toaster.success('Loaded Game');\r\n    return upgradeSavedGameState(savedGame);\r\n  },\r\n  [BOARD_TOGGLE_REVERSE]: (state) => ({\r\n    ...state,\r\n    reverseBoard: !state.reverseBoard\r\n  }),\r\n  [BOARD_COMPUTER_MOVE]: (state, action) => {\r\n    const { moveType, fromId, toId } = action.move;\r\n    const midState = setSelectedSquareId(state, { squareId: fromId });\r\n\r\n    if (moveType === 'STANDARD') {\r\n      return composedPieceMovement(midState, { targetSquareId: toId });\r\n    }\r\n\r\n    return composedSpecialMove(midState, {\r\n      specialMove: {\r\n        type: moveType,\r\n        squareId: toId,\r\n        promoteTo: Strings.pieces.queen\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nexport default board;\r\n","export default function upgradeSavedGameState(state) {\r\n  let upgradedState = { ...state };\r\n\r\n  if (!state.hasOwnProperty('vsComputer')) {\r\n    upgradedState = {\r\n      ...upgradedState,\r\n      vsComputer: {\r\n        isComputer: false,\r\n        isComputerBlack: true\r\n      }\r\n    };\r\n  }\r\n\r\n  return upgradedState;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport theme from './theme';\r\nimport board from './board';\r\n\r\nconst createRootReducer = (history) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    theme,\r\n    board\r\n  });\r\n\r\nexport default createRootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createRootReducer from 'reducers/index';\r\n\r\nconst configureStore = (history, preloadedState) =>\r\n  createStore(\r\n    createRootReducer(history),\r\n    preloadedState,\r\n    applyMiddleware(routerMiddleware(history))\r\n  );\r\n\r\nexport default configureStore;\r\n"],"sourceRoot":""}