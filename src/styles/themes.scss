@import './_colours.scss';
@import './_mixins.scss';

@each $name, $values in $theme-maps {
  $base-background: map-get($values, base-background);
  $base-colour: map-get($values, base-colour);
  $colour: map-get($values, colour);
  $contrast: map-get($values, contrast);
  $anchor-colour: map-get($values, anchor-colour);
  $anchor-colour-hover: map-get($values, anchor-colour-hover);
  $disabled-colour: map-get($values, disabled-colour);
  $disabled-background: map-get($values, disabled-background);
  $menu-outline: map-get($values, menu-outline);

  .#{$name} {
    background: $base-background;
    color: $base-colour;

    .satsuki-header {
      background-color: $colour;
      color: $contrast;
    }

    #navigation-links a,
    .svg-logo svg {
      background-color: $colour;
      color: $contrast;
      &:hover {
        background-color: darken($colour, $darken-amount);
      }
    }

    a {
      color: $anchor-colour;
      &:hover {
        color: $anchor-colour-hover;
      }
    }

    .tickbox input,
    select {
      background-color: $base-background;
      color: $base-colour;
    }

    .button.primary,
    .button-icon.primary {
      background-color: $colour;
      color: $contrast;
      &:hover,
      &.active {
        @include lightenOrDarken('background-color', $colour, $darken-amount * 3);
      }
    }

    #chess-game-status > div {
      background: map-get($values, status-background);
      color: $base-background;
    }

    #request-indicator-loader {
      @include shiftBackgroundColourLightness($colour, $darken-amount * 3);
    }

    #playback-control input {
      color: $colour;
      background: $contrast;
      &:disabled {
        color: $disabled-colour;
        background: $disabled-background;
      }
    }

    #move-list li.active {
      color: map-get($values, active);
    }

    .graveyard {
      border-color: $base-colour;
    }

    .dropdown-menu {
      box-shadow: 2px 2px 10px $menu-outline;
    }
    .dropdown-arrow {
      border-bottom-color: $base-background;
      filter: drop-shadow(0 -2px 2px $menu-outline);
    }
    .dropdown-menu,
    .game-options {
      background-color: $base-background;
    }
  }
}

@each $name, $values in $board-themes {
  $board-border: map-get($values, board-border);
  $dark-square: map-get($values, dark-square);
  $light-square: map-get($values, light-square);

  .#{$name} {
    border-color: $board-border;
    .square {
      background-color: $dark-square;
      border-color: $dark-square;
      &:nth-of-type(16n + 16),
      &:nth-of-type(16n + 14),
      &:nth-of-type(16n + 12),
      &:nth-of-type(16n + 10),
      &:nth-of-type(16n + 7),
      &:nth-of-type(16n + 5),
      &:nth-of-type(16n + 3),
      &:nth-of-type(16n + 1) {
        background-color: $light-square;
        border-color: $light-square;
      }
    }
  }
}
